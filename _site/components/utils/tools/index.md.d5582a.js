(window.webpackJsonp=window.webpackJsonp||[]).push([[219],{4200:function(n,e){n.exports={content:["article",["h2","何时使用"],["p","常用工具函数"],["h2","代码演示"],["pre",{lang:"typescript",highlighted:'<span class="token comment" spellcheck="true">// TODO: DEMONSTRATE API</span>'},["code","// TODO: DEMONSTRATE API"]],["ul",["li",["p","formatDate (根据自定的 format 格式转换时间的格式)"]]],["pre",{lang:"typescript",highlighted:'<span class="token comment" spellcheck="true">/**\n * @method formatDate 根据自定的format格式转换时间的格式\n * @export\n * @param {string | number} data 需要转换格式的时间戳数据 (type : string | number)\n * @param {string} format 转换时间的格式,比如 "YYYY-MM-DD"\n * @return {string}\n */</span>'},["code",'/**\n * @method formatDate 根据自定的format格式转换时间的格式\n * @export\n * @param {string | number} data 需要转换格式的时间戳数据 (type : string | number)\n * @param {string} format 转换时间的格式,比如 "YYYY-MM-DD"\n * @return {string}\n */']],["ul",["li",["p","formatUrl (处理 Url)"]]],["pre",{lang:"typescript",highlighted:'<span class="token comment" spellcheck="true">/**\n * @method formatUrl 处理Url\n * @export\n * @param {string} url 需要处理的url，比如 /deploy/order/:id\n * @param {object} params 需要处理的参数 ，比如 {id: 123}\n * @param {object} query 需要处理的参数 ，比如 {id: 123}\n * @return { url:string } 返回 （/deploy/order/123）\n */</span>'},["code","/**\n * @method formatUrl 处理Url\n * @export\n * @param {string} url 需要处理的url，比如 /deploy/order/:id\n * @param {object} params 需要处理的参数 ，比如 {id: 123}\n * @param {object} query 需要处理的参数 ，比如 {id: 123}\n * @return { url:string } 返回 （/deploy/order/123）\n */"]],["ul",["li",["p","goLogin (跳转页面，默认为/login)"]]],["pre",{lang:"typescript",highlighted:'<span class="token comment" spellcheck="true">/**\n * @method goLogin 跳转页面\n * @export\n * @param {string} url 非毕传路径，默认/login\n */</span>'},["code","/**\n * @method goLogin 跳转页面\n * @export\n * @param {string} url 非毕传路径，默认/login\n */"]],["ul",["li",["p","getCookie (获取本地 Cookie)"]]],["pre",{lang:"typescript",highlighted:'<span class="token comment" spellcheck="true">/**\n * @method getCookie 获取本地Cookie\n * @export\n * @param {string} key 获取本地cookie对应的key\n * @return {string}\n */</span>'},["code","/**\n * @method getCookie 获取本地Cookie\n * @export\n * @param {string} key 获取本地cookie对应的key\n * @return {string}\n */"]],["ul",["li",["p","setCookie (设置本地 Cookie)"]]],["pre",{lang:"typescript",highlighted:'<span class="token comment" spellcheck="true">/**\n * @method setCookie 设置本地Cookie\n * @export\n * @param {ICookie} cData 设置本地Cookie需要的参数\n */</span>'},["code","/**\n * @method setCookie 设置本地Cookie\n * @export\n * @param {ICookie} cData 设置本地Cookie需要的参数\n */"]],["ul",["li",["p","deleteCookie (删除本地 Cookie)"]]],["pre",{lang:"typescript",highlighted:'<span class="token comment" spellcheck="true">/**\n * @method deleteCookie 删除本地Cookie\n * @export\n * @param {string[]} cData 本地Cookie的key组成的数组\n */</span>'},["code","/**\n * @method deleteCookie 删除本地Cookie\n * @export\n * @param {string[]} cData 本地Cookie的key组成的数组\n */"]],["ul",["li",["p","uuid (获取一个以字符串开头拼接 0~1 随机数小数点以后数字的字符串)"]]],["pre",{lang:"typescript",highlighted:'<span class="token comment" spellcheck="true">/**\n * @method uuid 获取一个以字符串开头拼接0~1随机数小数点以后数字的字符串\n * @export\n * @return {string}\n */</span>'},["code","/**\n * @method uuid 获取一个以字符串开头拼接0~1随机数小数点以后数字的字符串\n * @export\n * @return {string}\n */"]],["ul",["li",["p","getRandompwd (获取指定长度的随机密码)"]]],["pre",{lang:"typescript",highlighted:'<span class="token comment" spellcheck="true">/**\n * @method getRandompwd 获取指定长度的随机密码\n * @export\n * @param {number} len 需要传入想要获取随机密码的长度（非毕传，如未传则获取一个5位的随机数）\n * @return {string | number}\n */</span>'},["code","/**\n * @method getRandompwd 获取指定长度的随机密码\n * @export\n * @param {number} len 需要传入想要获取随机密码的长度（非毕传，如未传则获取一个5位的随机数）\n * @return {string | number}\n */"]],["ul",["li",["p","handleTabKey (切换 hash 值更换 Tabs 组件的 key)"]]],["pre",{lang:"typescript",highlighted:'<span class="token comment" spellcheck="true">/**\n * @method handleTabKey 用于AntD-Tabs组件的onChange事件，切换hash值达到更换Tabs组件的key\n * @export\n * @param {string} key\n */</span>'},["code","/**\n * @method handleTabKey 用于AntD-Tabs组件的onChange事件，切换hash值达到更换Tabs组件的key\n * @export\n * @param {string} key\n */"]],["ul",["li",["p","copyContentFnc (copy 文本内容函数)"]]],["pre",{lang:"typescript",highlighted:'<span class="token comment" spellcheck="true">/**\n * @method copyContentFnc copy文本内容函数\n * @export\n * @param {string} content 要复制的文本内容\n */</span>'},["code","/**\n * @method copyContentFnc copy文本内容函数\n * @export\n * @param {string} content 要复制的文本内容\n */"]],["ul",["li",["p","useDebounce (应用于 hook 的防抖函数)"]]],["pre",{lang:"typescript",highlighted:'<span class="token comment" spellcheck="true">/**\n * @method useDebounce 应用于hook的防抖函数\n * @param {() => void} fn 需要处理的函数\n * @param {number} delay 函数出发的时间\n * @param dep 传入空数组，保证useCallback永远返回同一个函数\n */</span>'},["code","/**\n * @method useDebounce 应用于hook的防抖函数\n * @param {() => void} fn 需要处理的函数\n * @param {number} delay 函数出发的时间\n * @param dep 传入空数组，保证useCallback永远返回同一个函数\n */"]],["ul",["li",["p","firstCharUppercase (首字母大写转换)"]]],["pre",{lang:"typescript",highlighted:'<span class="token comment" spellcheck="true">/**\n * @method firstCharUppercase 首字母大写转换\n * @param {string} str 需要转换的英文字符串\n */</span>'},["code","/**\n * @method firstCharUppercase 首字母大写转换\n * @param {string} str 需要转换的英文字符串\n */"]],["ul",["li",["p","transMBToB (将兆字节单位转换为比特字节单位)"]]],["pre",{lang:"typescript",highlighted:'<span class="token comment" spellcheck="true">/**\n * @method transMBToB 将兆字节单位转换为比特字节单位\n * @param {number} value 需要转换的数值\n */</span>'},["code","/**\n * @method transMBToB 将兆字节单位转换为比特字节单位\n * @param {number} value 需要转换的数值\n */"]],["ul",["li",["p","transBToMB (将比特字节单位转换成兆字节单位)"]]],["pre",{lang:"typescript",highlighted:'<span class="token comment" spellcheck="true">/**\n * @method transBToMB 将比特字节单位转换成兆字节单位\n * @param {number} value 需要转换的数值\n */</span>'},["code","/**\n * @method transBToMB 将比特字节单位转换成兆字节单位\n * @param {number} value 需要转换的数值\n */"]],["ul",["li",["p","transBToGB (将比特字节单位转换成千兆字节单位)"]]],["pre",{lang:"typescript",highlighted:'<span class="token comment" spellcheck="true">/**\n * @method transBToGB 将比特字节单位转换成千兆字节单位\n * @param {number} value 需要转换的数值\n */</span>'},["code","/**\n * @method transBToGB 将比特字节单位转换成千兆字节单位\n * @param {number} value 需要转换的数值\n */"]],["ul",["li",["p","formatFlowUnit (格式化流量单位)"]]],["pre",{lang:"typescript",highlighted:'<span class="token comment" spellcheck="true">/**\n * @method formatFlowUnit 格式化流量单位\n * @param {number} num 需要格式化的流量\n */</span>'},["code","/**\n * @method formatFlowUnit 格式化流量单位\n * @param {number} num 需要格式化的流量\n */"]],["ul",["li",["p","transHourToMSecond (将小时单位转换成时间戳单位)"]]],["pre",{lang:"typescript",highlighted:'<span class="token comment" spellcheck="true">/**\n * @method transHourToMSecond 将小时单位转换成时间戳单位\n * @param {number} value 需要转换的数值\n */</span>'},["code","/**\n * @method transHourToMSecond 将小时单位转换成时间戳单位\n * @param {number} value 需要转换的数值\n */"]],["ul",["li",["p","transMSecondToHour (将时间戳单位转换成小时单位)"]]],["pre",{lang:"typescript",highlighted:'<span class="token comment" spellcheck="true">/**\n * @method transMSecondToHour 将时间戳单位转换成小时单位\n * @param {number} value 需要转换的数值\n */</span>'},["code","/**\n * @method transMSecondToHour 将时间戳单位转换成小时单位\n * @param {number} value 需要转换的数值\n */"]],["ul",["li",["p","transUnitTime (将时间数字换算成对应时间)"]]],["pre",{lang:"typescript",highlighted:'<span class="token comment" spellcheck="true">/**\n * @method transUnitTime 将时间数字换算成对应时间\n * @param {number} ms 需要转换的数字\n */</span>'},["code","/**\n * @method transUnitTime 将时间数字换算成对应时间\n * @param {number} ms 需要转换的数字\n */"]],["ul",["li",["p","IsNotNaN (判断是否为数字)"]]],["pre",{lang:"typescript",highlighted:'<span class="token comment" spellcheck="true">/**\n * @method IsNotNaN 判断是否为数字\n * @param value 需要判断的参数\n */</span>'},["code","/**\n * @method IsNotNaN 判断是否为数字\n * @param value 需要判断的参数\n */"]],["ul",["li",["p","fixedPointNumber (将数字转换成保留指定小数点后几位的浮点数)"]]],["pre",{lang:"typescript",highlighted:'<span class="token comment" spellcheck="true">/**\n * @method fixedPointNumber 将数字转换成保留指定小数点后几位的浮点数\n * @param {number} num 需要转换的数字\n * @param {number = 2} bit 指定保留小数点后几位（默认为2位）\n */</span>'},["code","/**\n * @method fixedPointNumber 将数字转换成保留指定小数点后几位的浮点数\n * @param {number} num 需要转换的数字\n * @param {number = 2} bit 指定保留小数点后几位（默认为2位）\n */"]],["ul",["li",["p","formatSize (格式化存储单位)"]]],["pre",{lang:"typescript",highlighted:'<span class="token comment" spellcheck="true">/**\n * @method formatSize 格式化存储单位\n * @param {number} size 需要格式化的比特单位\n * @param {number} fix 指定保留小数点后几位 （默认为1）\n */</span>'},["code","/**\n * @method formatSize 格式化存储单位\n * @param {number} size 需要格式化的比特单位\n * @param {number} fix 指定保留小数点后几位 （默认为1）\n */"]],["ul",["li",["p","formatDuration (格式化持续时间返回对应时间字符串)"]]],["pre",{lang:"typescript",highlighted:'<span class="token comment" spellcheck="true">/**\n * @method formatDuration 格式化持续时间返回对应时间字符串\n * @param {number} duration 需要格式化的毫秒值\n * @param {number} fix 指定保留小数点后几位（默认为1）\n */</span>'},["code","/**\n * @method formatDuration 格式化持续时间返回对应时间字符串\n * @param {number} duration 需要格式化的毫秒值\n * @param {number} fix 指定保留小数点后几位（默认为1）\n */"]],["ul",["li",["p",'renderDuration (渲染持续时间 返回为字符串 格式为："20day 12h 12min 21s")']]],["pre",{lang:"typescript",highlighted:'<span class="token comment" spellcheck="true">/**\n * @method renderDuration 渲染持续时间 返回为字符串 格式为："20day 12h 12min 21s"\n * @param {IDuration} duration 需要渲染的时间对象\n */</span>'},["code",'/**\n * @method renderDuration 渲染持续时间 返回为字符串 格式为："20day 12h 12min 21s"\n * @param {IDuration} duration 需要渲染的时间对象\n */']],["ul",["li",["p","formatOffset (格式重置)"]]],["pre",{lang:"typescript",highlighted:'<span class="token comment" spellcheck="true">/**\n * @method formatOffset 格式重置\n * @param {IOffset} offset 需要重置的对象\n * @returns {string} 返回符合条件的 ’年 月 周 天 小时‘ 字符串\n */</span>'},["code","/**\n * @method formatOffset 格式重置\n * @param {IOffset} offset 需要重置的对象\n * @returns {string} 返回符合条件的 ’年 月 周 天 小时‘ 字符串\n */"]],["ul",["li",["p","turnObjectToJson (将符合条件的对象转换成 JSON 格式)"]]],["pre",{lang:"typescript",highlighted:'<span class="token comment" spellcheck="true">/**\n * 接受一个数组包对象，将数组中符合条件的元素转换成JSON格式，并向该元素中添加唯一Key\n * @method turnObjectToJson 将符合条件的对象转换成JSON格式\n * @param {Array&lt;{[key:string]:any}>} originData 需要转换的数组\n */</span>'},["code","/**\n * 接受一个数组包对象，将数组中符合条件的元素转换成JSON格式，并向该元素中添加唯一Key\n * @method turnObjectToJson 将符合条件的对象转换成JSON格式\n * @param {Array<{[key:string]:any}>} originData 需要转换的数组\n */"]],["ul",["li",["p","handleAsyncFun (处理异步请求函数(async 函数))"]]],["pre",{lang:"typescript",highlighted:'<span class="token comment" spellcheck="true">/**\n * @method handleAsyncFun 处理异步请求函数(async函数)\n * @param fn 需要请求的函数\n * @param errCb 请求失败的函数（非毕传参数）\n * @returns 返回的resource\n */</span>'},["code","/**\n * @method handleAsyncFun 处理异步请求函数(async函数)\n * @param fn 需要请求的函数\n * @param errCb 请求失败的函数（非毕传参数）\n * @returns 返回的resource\n */"]],["ul",["li",["p","injectUnmount (解决组件卸载后调用 setState 会报错，造成内存泄漏的问题（在页面引入这段代码就行）)"]]],["pre",{lang:"typescript",highlighted:'<span class="token comment" spellcheck="true">/**\n * @method injectUnmount 解决组件卸载后调用setState会报错，造成内存泄漏的问题（在页面引入这段代码就行）\n * @param {any} target\n */</span>'},["code","/**\n * @method injectUnmount 解决组件卸载后调用setState会报错，造成内存泄漏的问题（在页面引入这段代码就行）\n * @param {any} target\n */"]]],meta:{category:"Utils",cols:1,title:"tools",subtitle:"工具函数",filename:"components/utils/tools/index.md"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#何时使用",title:"何时使用"},"何时使用"]],["li",["a",{className:"bisheng-toc-h2",href:"#代码演示",title:"代码演示"},"代码演示"]]]}}}]);