(window.webpackJsonp=window.webpackJsonp||[]).push([[215],{4196:function(n,s){n.exports={content:["article",["h2","何时使用"],["p","在指定的毫秒数后重新渲染组件。 提供取消或重置超时的调用方式。"],["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> useTimeout <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'knowdesign\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">TestComponent</span><span class="token punctuation">(</span>props<span class="token punctuation">:</span> <span class="token punctuation">{</span> ms<span class="token operator">?</span><span class="token punctuation">:</span> number <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> ms <span class="token operator">=</span> props<span class="token punctuation">.</span>ms <span class="token operator">||</span> <span class="token number">5000</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>isReady<span class="token punctuation">,</span> cancel<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useTimeout</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n      <span class="token punctuation">{</span> <span class="token function">isReady</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">\'I\\\'m reloaded after timeout\'</span> <span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`I will be reloaded after </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span> ms <span class="token operator">/</span> <span class="token number">1000</span> <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">s`</span></span> <span class="token punctuation">}</span>\n      <span class="token punctuation">{</span> <span class="token function">isReady</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token boolean">false</span> <span class="token operator">?</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span> cancel <span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Cancel<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span> <span class="token punctuation">:</span> <span class="token string">\'\'</span> <span class="token punctuation">}</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> Demo <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TestComponent</span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TestComponent</span> <span class="token attr-name">ms</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span> <span class="token number">10000</span> <span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>'},["code","import { useTimeout } from 'knowdesign';\n\nfunction TestComponent(props: { ms?: number } = {}) {\n  const ms = props.ms || 5000;\n  const [isReady, cancel] = useTimeout(ms);\n\n  return (\n    <div>\n      { isReady() ? 'I\\'m reloaded after timeout' : `I will be reloaded after ${ ms / 1000 }s` }\n      { isReady() === false ? <button onClick={ cancel }>Cancel</button> : '' }\n    </div>\n  );\n}\n\nconst Demo = () => {\n  return (\n    <div>\n      <TestComponent />\n      <TestComponent ms={ 10000 } />\n    </div>\n  );\n};"]],["p","copy 自 ",["a",{title:null,href:"https://github.com/streamich/react-use/blob/master/docs/useTimeout.md"},"react-use"]]],meta:{category:"自定义Hook",cols:1,type:"hook",title:"useTimeout",subtitle:"间隔",filename:"components/hook/use-timeout/index.md"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#何时使用",title:"何时使用"},"何时使用"]]]}}}]);