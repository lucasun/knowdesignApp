(window.webpackJsonp=window.webpackJsonp||[]).push([[193],{4174:function(n,s,a){n.exports={base:a(5258)}},5258:function(n,s,a){n.exports={content:[],meta:{title:"基本",order:1,filename:"components/extend/steps-form/demo/base.md",id:"components-extend-steps-form-demo-base"},toc:["ul"],highlightedCode:["pre",{lang:"tsx",highlighted:'import React<span class="token punctuation">,</span> { useRef } from <span class="token string">\'react\'</span><span class="token comment" spellcheck="true">;</span>\nimport type { FormInstance } from <span class="token string">\'knowdesign\'</span><span class="token comment" spellcheck="true">;</span>\nimport StepsForm from <span class="token string">\'../index.tsx\'</span><span class="token comment" spellcheck="true">;</span>\nimport { message<span class="token punctuation">,</span> Button } from <span class="token string">\'knowdesign\'</span><span class="token comment" spellcheck="true">;</span>\n\n<span class="token keyword">const</span> waitTime <span class="token operator">=</span> <span class="token punctuation">(</span>time<span class="token punctuation">:</span> number <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n  return new <span class="token function">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }<span class="token punctuation">,</span> time<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n}<span class="token comment" spellcheck="true">;</span>\n\n<span class="token keyword">const</span> BaseDemo <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n  <span class="token keyword">const</span> formRef <span class="token operator">=</span> useRef<span class="token operator">&lt;</span>FormInstance<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  return <span class="token punctuation">(</span>\n      <span class="token operator">&lt;</span>StepsForm\n        stepsProps<span class="token operator">=</span>{{\n          labelPlacement<span class="token punctuation">:</span> <span class="token string">\'vertical\'</span>\n        }}\n        onFinish<span class="token operator">=</span>{async <span class="token punctuation">(</span>values<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>values<span class="token punctuation">,</span> <span class="token string">\'values 123123\'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n          await <span class="token function">waitTime</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n          message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">\'提交成功\'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n          return <span class="token boolean">true</span><span class="token comment" spellcheck="true">;</span>\n        }}\n        submitter<span class="token operator">=</span>{{\n          buttonConfig<span class="token punctuation">:</span> {\n            resetText<span class="token punctuation">:</span> <span class="token string">\'Prev\'</span><span class="token punctuation">,</span>\n            submitText<span class="token punctuation">:</span> <span class="token string">\'Ok\'</span><span class="token punctuation">,</span>\n            nextText<span class="token punctuation">:</span> <span class="token string">\'Next\'</span>\n          }\n        }}\n      <span class="token operator">></span>\n        <span class="token operator">&lt;</span>StepsForm<span class="token punctuation">.</span>Item\n          title<span class="token operator">=</span><span class="token string">"第一步"</span>\n          name<span class="token operator">=</span><span class="token string">"step1"</span>\n          stepProps<span class="token operator">=</span>{{\n            description<span class="token punctuation">:</span> <span class="token string">\'第一步的描述\'</span><span class="token punctuation">,</span>\n          }}\n          XFormProps<span class="token operator">=</span>{{\n            formData<span class="token punctuation">:</span> {\n              city<span class="token punctuation">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n              location<span class="token punctuation">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n            }<span class="token punctuation">,</span>\n            formMap<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n              {\n                key<span class="token punctuation">:</span> <span class="token string">\'city\'</span><span class="token punctuation">,</span>\n                label<span class="token punctuation">:</span> <span class="token string">\'城市\'</span><span class="token punctuation">,</span>\n                rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n                  {\n                    required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                    message<span class="token punctuation">:</span> <span class="token string">\'请输入\'</span><span class="token punctuation">,</span>\n                  }<span class="token punctuation">,</span>\n                <span class="token punctuation">]</span><span class="token punctuation">,</span>\n              }<span class="token punctuation">,</span>\n              {\n                key<span class="token punctuation">:</span> <span class="token string">\'location\'</span><span class="token punctuation">,</span>\n                label<span class="token punctuation">:</span> <span class="token string">\'所在区\'</span><span class="token punctuation">,</span>\n              }<span class="token punctuation">,</span>\n            <span class="token punctuation">]</span>\n          }}\n          onFinish<span class="token operator">=</span>{<span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            return <span class="token boolean">true</span><span class="token comment" spellcheck="true">;</span>\n          }}\n        <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token operator">&lt;</span>StepsForm<span class="token punctuation">.</span>Item\n          title<span class="token operator">=</span><span class="token string">"第二步"</span>\n          name<span class="token operator">=</span><span class="token string">"step2"</span>\n          stepProps<span class="token operator">=</span>{{\n            description<span class="token punctuation">:</span> <span class="token string">\'第二步的描述\'</span><span class="token punctuation">,</span>\n          }}\n          XFormProps<span class="token operator">=</span>{{\n            formData<span class="token punctuation">:</span> {\n              name<span class="token punctuation">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n              age<span class="token punctuation">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n            }<span class="token punctuation">,</span>\n            formMap<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n              {\n                key<span class="token punctuation">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n                label<span class="token punctuation">:</span> <span class="token string">\'姓名\'</span><span class="token punctuation">,</span>\n                rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n                  {\n                    required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                    message<span class="token punctuation">:</span> <span class="token string">\'请输入\'</span><span class="token punctuation">,</span>\n                  }<span class="token punctuation">,</span>\n                <span class="token punctuation">]</span><span class="token punctuation">,</span>\n              }<span class="token punctuation">,</span>\n              {\n                key<span class="token punctuation">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n                label<span class="token punctuation">:</span> <span class="token string">\'年龄\'</span><span class="token punctuation">,</span>\n              }<span class="token punctuation">,</span>\n            <span class="token punctuation">]</span>\n          }}\n        <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token operator">&lt;</span>StepsForm<span class="token punctuation">.</span>Item\n          title<span class="token operator">=</span><span class="token string">"第三步"</span>\n          name<span class="token operator">=</span><span class="token string">"step3"</span>\n          stepProps<span class="token operator">=</span>{{\n            description<span class="token punctuation">:</span> <span class="token string">\'第三步的描述\'</span><span class="token punctuation">,</span>\n          }}\n          XFormProps<span class="token operator">=</span>{{\n            formData<span class="token punctuation">:</span> {\n              name<span class="token punctuation">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n              age<span class="token punctuation">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n            }<span class="token punctuation">,</span>\n            formMap<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n              {\n                key<span class="token punctuation">:</span> <span class="token string">\'level\'</span><span class="token punctuation">,</span>\n                label<span class="token punctuation">:</span> <span class="token string">\'职级\'</span><span class="token punctuation">,</span>\n                rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n                  {\n                    required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                    message<span class="token punctuation">:</span> <span class="token string">\'请输入\'</span><span class="token punctuation">,</span>\n                  }<span class="token punctuation">,</span>\n                <span class="token punctuation">]</span><span class="token punctuation">,</span>\n              }<span class="token punctuation">,</span>\n              {\n                key<span class="token punctuation">:</span> <span class="token string">\'workNumber\'</span><span class="token punctuation">,</span>\n                label<span class="token punctuation">:</span> <span class="token string">\'工号\'</span><span class="token punctuation">,</span>\n              }<span class="token punctuation">,</span>\n            <span class="token punctuation">]</span>\n          }}\n        <span class="token operator">/</span><span class="token operator">></span>\n      <span class="token operator">&lt;</span><span class="token operator">/</span>StepsForm<span class="token operator">></span>\n  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n}<span class="token comment" spellcheck="true">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n    <span class="token operator">&lt;</span>BaseDemo <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span>\n    mountNode\n<span class="token punctuation">)</span>'}],highlightedCodes:{tsx:'<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useRef <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> type <span class="token punctuation">{</span> FormInstance <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'knowdesign\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> StepsForm <span class="token keyword">from</span> <span class="token string">\'../index.tsx\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> message<span class="token punctuation">,</span> Button <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'knowdesign\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">waitTime</span> <span class="token operator">=</span> <span class="token punctuation">(</span>time<span class="token operator">:</span> number <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> time<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">BaseDemo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> formRef <span class="token operator">=</span> useRef<span class="token operator">&lt;</span>FormInstance<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">StepsForm</span></span>\n        <span class="token attr-name">stepsProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          labelPlacement<span class="token operator">:</span> <span class="token string">\'vertical\'</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">onFinish</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">async</span> <span class="token punctuation">(</span>values<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>values<span class="token punctuation">,</span> <span class="token string">\'values 123123\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token keyword">await</span> <span class="token function">waitTime</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">\'提交成功\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">submitter</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          buttonConfig<span class="token operator">:</span> <span class="token punctuation">{</span>\n            resetText<span class="token operator">:</span> <span class="token string">\'Prev\'</span><span class="token punctuation">,</span>\n            submitText<span class="token operator">:</span> <span class="token string">\'Ok\'</span><span class="token punctuation">,</span>\n            nextText<span class="token operator">:</span> <span class="token string">\'Next\'</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token punctuation">></span></span>\n        <span class="token operator">&lt;</span>StepsForm<span class="token punctuation">.</span>Item\n          title<span class="token operator">=</span><span class="token string">"第一步"</span>\n          name<span class="token operator">=</span><span class="token string">"step1"</span>\n          stepProps<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            description<span class="token operator">:</span> <span class="token string">\'第一步的描述\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          XFormProps<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            formData<span class="token operator">:</span> <span class="token punctuation">{</span>\n              city<span class="token operator">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n              location<span class="token operator">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            formMap<span class="token operator">:</span> <span class="token punctuation">[</span>\n              <span class="token punctuation">{</span>\n                key<span class="token operator">:</span> <span class="token string">\'city\'</span><span class="token punctuation">,</span>\n                label<span class="token operator">:</span> <span class="token string">\'城市\'</span><span class="token punctuation">,</span>\n                rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n                  <span class="token punctuation">{</span>\n                    required<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                    message<span class="token operator">:</span> <span class="token string">\'请输入\'</span><span class="token punctuation">,</span>\n                  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token punctuation">]</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n              <span class="token punctuation">{</span>\n                key<span class="token operator">:</span> <span class="token string">\'location\'</span><span class="token punctuation">,</span>\n                label<span class="token operator">:</span> <span class="token string">\'所在区\'</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">]</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          onFinish<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token operator">&lt;</span>StepsForm<span class="token punctuation">.</span>Item\n          title<span class="token operator">=</span><span class="token string">"第二步"</span>\n          name<span class="token operator">=</span><span class="token string">"step2"</span>\n          stepProps<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            description<span class="token operator">:</span> <span class="token string">\'第二步的描述\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          XFormProps<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            formData<span class="token operator">:</span> <span class="token punctuation">{</span>\n              name<span class="token operator">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n              age<span class="token operator">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            formMap<span class="token operator">:</span> <span class="token punctuation">[</span>\n              <span class="token punctuation">{</span>\n                key<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n                label<span class="token operator">:</span> <span class="token string">\'姓名\'</span><span class="token punctuation">,</span>\n                rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n                  <span class="token punctuation">{</span>\n                    required<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                    message<span class="token operator">:</span> <span class="token string">\'请输入\'</span><span class="token punctuation">,</span>\n                  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token punctuation">]</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n              <span class="token punctuation">{</span>\n                key<span class="token operator">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n                label<span class="token operator">:</span> <span class="token string">\'年龄\'</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">]</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token operator">&lt;</span>StepsForm<span class="token punctuation">.</span>Item\n          title<span class="token operator">=</span><span class="token string">"第三步"</span>\n          name<span class="token operator">=</span><span class="token string">"step3"</span>\n          stepProps<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            description<span class="token operator">:</span> <span class="token string">\'第三步的描述\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          XFormProps<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            formData<span class="token operator">:</span> <span class="token punctuation">{</span>\n              name<span class="token operator">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n              age<span class="token operator">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            formMap<span class="token operator">:</span> <span class="token punctuation">[</span>\n              <span class="token punctuation">{</span>\n                key<span class="token operator">:</span> <span class="token string">\'level\'</span><span class="token punctuation">,</span>\n                label<span class="token operator">:</span> <span class="token string">\'职级\'</span><span class="token punctuation">,</span>\n                rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n                  <span class="token punctuation">{</span>\n                    required<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                    message<span class="token operator">:</span> <span class="token string">\'请输入\'</span><span class="token punctuation">,</span>\n                  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token punctuation">]</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n              <span class="token punctuation">{</span>\n                key<span class="token operator">:</span> <span class="token string">\'workNumber\'</span><span class="token punctuation">,</span>\n                label<span class="token operator">:</span> <span class="token string">\'工号\'</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">]</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        <span class="token operator">/</span><span class="token operator">></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">StepsForm</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">BaseDemo</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n    mountNode\n<span class="token punctuation">)</span>',jsx:'<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useRef <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> StepsForm <span class="token keyword">from</span> <span class="token string">\'../index.tsx\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> message <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'knowdesign\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">waitTime</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">time <span class="token operator">=</span> <span class="token number">100</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> time<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">BaseDemo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> formRef <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">StepsForm</span></span>\n      <span class="token attr-name">stepsProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">labelPlacement</span><span class="token operator">:</span> <span class="token string">\'vertical\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token attr-name">onFinish</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">values</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>values<span class="token punctuation">,</span> <span class="token string">\'values 123123\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">await</span> <span class="token function">waitTime</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">\'提交成功\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token attr-name">submitter</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">buttonConfig</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token literal-property property">resetText</span><span class="token operator">:</span> <span class="token string">\'Prev\'</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">submitText</span><span class="token operator">:</span> <span class="token string">\'Ok\'</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">nextText</span><span class="token operator">:</span> <span class="token string">\'Next\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n    <span class="token punctuation">></span></span>\n      <span class="token operator">&lt;</span>StepsForm<span class="token punctuation">.</span>Item\n        title<span class="token operator">=</span><span class="token string">"第一步"</span>\n        name<span class="token operator">=</span><span class="token string">"step1"</span>\n        stepProps<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">\'第一步的描述\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        XFormProps<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          <span class="token literal-property property">formData</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token literal-property property">city</span><span class="token operator">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">location</span><span class="token operator">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">formMap</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token punctuation">{</span>\n              <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">\'city\'</span><span class="token punctuation">,</span>\n              <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">\'城市\'</span><span class="token punctuation">,</span>\n              <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n                <span class="token punctuation">{</span>\n                  <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                  <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">\'请输入\'</span><span class="token punctuation">,</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n              <span class="token punctuation">]</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">{</span>\n              <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">\'location\'</span><span class="token punctuation">,</span>\n              <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">\'所在区\'</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        onFinish<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span>\n      <span class="token operator">/</span><span class="token operator">></span>\n      <span class="token operator">&lt;</span>StepsForm<span class="token punctuation">.</span>Item\n        title<span class="token operator">=</span><span class="token string">"第二步"</span>\n        name<span class="token operator">=</span><span class="token string">"step2"</span>\n        stepProps<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">\'第二步的描述\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        XFormProps<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          <span class="token literal-property property">formData</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">formMap</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token punctuation">{</span>\n              <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n              <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">\'姓名\'</span><span class="token punctuation">,</span>\n              <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n                <span class="token punctuation">{</span>\n                  <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                  <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">\'请输入\'</span><span class="token punctuation">,</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n              <span class="token punctuation">]</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">{</span>\n              <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n              <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">\'年龄\'</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span>\n      <span class="token operator">/</span><span class="token operator">></span>\n      <span class="token operator">&lt;</span>StepsForm<span class="token punctuation">.</span>Item\n        title<span class="token operator">=</span><span class="token string">"第三步"</span>\n        name<span class="token operator">=</span><span class="token string">"step3"</span>\n        stepProps<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">\'第三步的描述\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        XFormProps<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          <span class="token literal-property property">formData</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">formMap</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token punctuation">{</span>\n              <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">\'level\'</span><span class="token punctuation">,</span>\n              <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">\'职级\'</span><span class="token punctuation">,</span>\n              <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n                <span class="token punctuation">{</span>\n                  <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                  <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">\'请输入\'</span><span class="token punctuation">,</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n              <span class="token punctuation">]</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">{</span>\n              <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">\'workNumber\'</span><span class="token punctuation">,</span>\n              <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">\'工号\'</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span>\n      <span class="token operator">/</span><span class="token operator">></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">StepsForm</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">BaseDemo</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>\n'},preview:function(){a(0),a(35);function n(s){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(s)}var s,t=function(s,a){if(!a&&s&&s.__esModule)return s;if(null===s||"object"!==n(s)&&"function"!=typeof s)return{default:s};var t=e(a);if(t&&t.has(s))return t.get(s);var p={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var c in s)if("default"!==c&&Object.prototype.hasOwnProperty.call(s,c)){var l=o?Object.getOwnPropertyDescriptor(s,c):null;l&&(l.get||l.set)?Object.defineProperty(p,c,l):p[c]=s[c]}p.default=s,t&&t.set(s,p);return p}(a(0)),p=(s=a(5271))&&s.__esModule?s:{default:s},o=a(96);function e(n){if("function"!=typeof WeakMap)return null;var s=new WeakMap,a=new WeakMap;return(e=function(n){return n?a:s})(n)}function c(n,s,a,t,p,o,e){try{var c=n[o](e),l=c.value}catch(n){return void a(n)}c.done?s(l):Promise.resolve(l).then(t,p)}var l=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:100;return new Promise((function(s){setTimeout((function(){s(!0)}),n)}))},u=function(){(0,t.useRef)();return t.default.createElement(p.default,{stepsProps:{labelPlacement:"vertical"},onFinish:function(){var n,s=(n=regeneratorRuntime.mark((function n(s){return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return console.log(s,"values 123123"),n.next=3,l(1e3);case 3:return o.message.success("提交成功"),n.abrupt("return",!0);case 5:case"end":return n.stop()}}),n)})),function(){var s=this,a=arguments;return new Promise((function(t,p){var o=n.apply(s,a);function e(n){c(o,t,p,e,l,"next",n)}function l(n){c(o,t,p,e,l,"throw",n)}e(void 0)}))});return function(n){return s.apply(this,arguments)}}(),submitter:{buttonConfig:{resetText:"Prev",submitText:"Ok",nextText:"Next"}}},t.default.createElement(p.default.Item,{title:"第一步",name:"step1",stepProps:{description:"第一步的描述"},XFormProps:{formData:{city:"",location:""},formMap:[{key:"city",label:"城市",rules:[{required:!0,message:"请输入"}]},{key:"location",label:"所在区"}]},onFinish:function(n){return console.log(n),!0}}),t.default.createElement(p.default.Item,{title:"第二步",name:"step2",stepProps:{description:"第二步的描述"},XFormProps:{formData:{name:"",age:""},formMap:[{key:"name",label:"姓名",rules:[{required:!0,message:"请输入"}]},{key:"age",label:"年龄"}]}}),t.default.createElement(p.default.Item,{title:"第三步",name:"step3",stepProps:{description:"第三步的描述"},XFormProps:{formData:{name:"",age:""},formMap:[{key:"level",label:"职级",rules:[{required:!0,message:"请输入"}]},{key:"workNumber",label:"工号"}]}}))};return t.default.createElement(u,null)}}},5259:function(n,s,a){},5271:function(n,s,a){"use strict";a.r(s),a.d(s,"StepsFormContext",(function(){return x}));var t=a(0),p=a.n(t),o=a(1319),e=a(113),c=a(763),l=a(130),u=a.n(l),r=a(12),i=a.n(r),k=a(324);function m(){return(m=Object.assign||function(n){for(var s=1;s<arguments.length;s++){var a=arguments[s];for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(n[t]=a[t])}return n}).apply(this,arguments)}var f=function(n,s,a,t){return new(a||(a=Promise))((function(p,o){function e(n){try{l(t.next(n))}catch(n){o(n)}}function c(n){try{l(t.throw(n))}catch(n){o(n)}}function l(n){var s;n.done?p(n.value):(s=n.value,s instanceof a?s:new a((function(n){n(s)}))).then(e,c)}l((t=t.apply(n,s||[])).next())}))},y=function(n,s){var a={};for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&s.indexOf(t)<0&&(a[t]=n[t]);if(null!=n&&"function"==typeof Object.getOwnPropertySymbols){var p=0;for(t=Object.getOwnPropertySymbols(n);p<t.length;p++)s.indexOf(t[p])<0&&Object.prototype.propertyIsEnumerable.call(n,t[p])&&(a[t[p]]=n[t[p]])}return a};var g=function(n){var s=this,a=n.onFinish,o=n.step,e=(n.title,n.stepProps,n.XFormProps),c=y(n,["onFinish","step","title","stepProps","XFormProps"]),l=Object(t.useRef)(),u=Object(t.useContext)(x);return Object(t.useEffect)((function(){return function(){c.name&&(null==u||u.unRegForm(c.name))}}),[]),u&&(null==u?void 0:u.formArrayRef)&&(u.formArrayRef.current[o||0]=l),p.a.createElement(k.XForm,m({wrappedComponentRef:l,onFinish:function(n){return f(s,void 0,void 0,regeneratorRuntime.mark((function s(){return regeneratorRuntime.wrap((function(s){for(;;)switch(s.prev=s.next){case 0:if(c.name&&(null==u||u.onFormFinish(c.name,n)),!a){s.next=9;break}return null==u||u.setLoading(!0),s.next=5,null==a?void 0:a(n);case 5:return s.sent&&(null==u||u.next()),null==u||u.setLoading(!1),s.abrupt("return");case 9:null==u||u.next();case 10:case"end":return s.stop()}}),s)})))},layout:"vertical"},e))};a(5259);function d(){return(d=Object.assign||function(n){for(var s=1;s<arguments.length;s++){var a=arguments[s];for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(n[t]=a[t])}return n}).apply(this,arguments)}function b(n){return function(n){if(Array.isArray(n))return h(n)}(n)||function(n){if("undefined"!=typeof Symbol&&null!=n[Symbol.iterator]||null!=n["@@iterator"])return Array.from(n)}(n)||w(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function v(n,s){return function(n){if(Array.isArray(n))return n}(n)||function(n,s){var a=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null==a)return;var t,p,o=[],e=!0,c=!1;try{for(a=a.call(n);!(e=(t=a.next()).done)&&(o.push(t.value),!s||o.length!==s);e=!0);}catch(n){c=!0,p=n}finally{try{e||null==a.return||a.return()}finally{if(c)throw p}}return o}(n,s)||w(n,s)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function w(n,s){if(n){if("string"==typeof n)return h(n,s);var a=Object.prototype.toString.call(n).slice(8,-1);return"Object"===a&&n.constructor&&(a=n.constructor.name),"Map"===a||"Set"===a?Array.from(n):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?h(n,s):void 0}}function h(n,s){(null==s||s>n.length)&&(s=n.length);for(var a=0,t=new Array(s);a<s;a++)t[a]=n[a];return t}var P=function(n,s,a,t){return new(a||(a=Promise))((function(p,o){function e(n){try{l(t.next(n))}catch(n){o(n)}}function c(n){try{l(t.throw(n))}catch(n){o(n)}}function l(n){var s;n.done?p(n.value):(s=n.value,s instanceof a?s:new a((function(n){n(s)}))).then(e,c)}l((t=t.apply(n,s||[])).next())}))},x=p.a.createContext(void 0);function F(n){var s=this,a="dcloud-design-steps-form",l=n.submitter,r=n.stepsProps,k=n.onFinish,m=Object(t.useRef)(new Map),f=Object(t.useRef)(new Map),y=Object(t.useRef)([]),g=v(Object(t.useState)([]),2),w=g[0],h=g[1],F=v(Object(t.useState)(!1),2),O=F[0],j=F[1],S=v(u()(0,{value:n.current,onChange:n.onCurrentChange}),2),R=S[0],T=S[1];Object(t.useEffect)((function(){h(Array.from(f.current.keys()))}),[Array.from(f.current.keys()).join(",")]);var E=Object(t.useCallback)((function(n,a){return P(s,void 0,void 0,regeneratorRuntime.mark((function s(){var t;return regeneratorRuntime.wrap((function(s){for(;;)switch(s.prev=s.next){case 0:if(m.current.set(n,a),R!==f.current.size-1&&0!==f.current.size){s.next=19;break}if(k){s.next=4;break}return s.abrupt("return");case 4:return j(!0),t=Object.assign.apply(Object,[{}].concat(b(Array.from(m.current.values())))),s.prev=6,s.next=9,k(t);case 9:s.sent&&(T(0),y.current.forEach((function(n){var s;return null===(s=n.current)||void 0===s?void 0:s.resetFields()}))),s.next=16;break;case 13:s.prev=13,s.t0=s.catch(6),console.log(s.t0);case 16:return s.prev=16,j(!1),s.finish(16);case 19:case"end":return s.stop()}}),s,null,[[6,13,16,19]])})))}),[R,f,k]),M=p.a.createElement("div",{className:"".concat(a,"-steps-container"),style:{maxWidth:Math.min(320*w.length,1160)}},p.a.createElement(o.a,d({},r,{current:R,onChange:void 0}),w.map((function(n){var s=f.current.get(n);return p.a.createElement(o.a.Step,d({key:n,title:null==s?void 0:s.title},null==s?void 0:s.stepProps))})))),D=function(){var n;null===(n=y.current[R].current)||void 0===n||n.submit()},I=function(){R<1||T(R-1)},C=!1!==l&&p.a.createElement(e.a,d({key:"next",type:"primary"},null==l?void 0:l.submitButtonProps,{onClick:function(){D()}}),(null==l?void 0:l.buttonConfig.nextText)||"下一步"),A=!1!==l&&p.a.createElement(e.a,d({key:"pre"},null==l?void 0:l.resetButtonProps,{onClick:function(){I()}}),(null==l?void 0:l.buttonConfig.resetText)||"上一步"),N=!1!==l&&p.a.createElement(e.a,d({key:"submit",type:"primary",loading:O},null==l?void 0:l.submitButtonProps,{onClick:function(){D()}}),(null==l?void 0:l.buttonConfig.submitText)||"提交"),X=Array.from(n.children).map((function(n,s){var t=n.props,o=t.name||"".concat(s);!function(n,s){f.current.set(n,s)}(o,t);var e,c,l,u=R===s;return p.a.createElement("div",{className:i()("".concat(a,"-step"),(e={},c="".concat(a,"-step-active"),l=u,c in e?Object.defineProperty(e,c,{value:l,enumerable:!0,configurable:!0,writable:!0}):e[c]=l,e)),key:o},p.a.cloneElement(n,Object.assign(Object.assign({},t),{name:o,step:s,key:o})))}));return p.a.createElement("div",{className:a},p.a.createElement(x.Provider,{value:{loading:O,setLoading:j,next:function(){R>w.length-2||T(R+1)},formArrayRef:y,unRegForm:function(n){f.current.delete(n),m.current.delete(n)},onFormFinish:E}},p.a.createElement(p.a.Fragment,null,M,p.a.createElement("div",{className:"".concat(a,"-container")},X,p.a.createElement(c.b,null,function(){var n,s,a=(s=R||0)<1?[C]:s+1===w.length?[A,N]:[A,C];if(l&&l.render){var t={form:null===(n=y.current[R])||void 0===n?void 0:n.current,onSubmit:D,step:R,onPre:I};return l.render(t,a)}return l&&!1===(null==l?void 0:l.render)?null:a}())))))}function O(n){return p.a.createElement(F,n)}O.Item=g;s.default=O}}]);