(window.webpackJsonp=window.webpackJsonp||[]).push([[169],{4150:function(n,s,a){n.exports={base:a(5232),customButton:a(5233),xform:a(5234)}},5232:function(n,s,a){n.exports={content:[],meta:{order:0,cols:2,title:"新建表单",filename:"components/extend/drawer-form/demo/base.md",id:"components-extend-drawer-form-demo-base"},toc:["ul"],highlightedCode:["pre",{lang:"tsx",highlighted:'import React<span class="token punctuation">,</span> { useState } from <span class="token string">\'react\'</span>\nimport { Button<span class="token punctuation">,</span> Form<span class="token punctuation">,</span> message<span class="token punctuation">,</span> DatePicker<span class="token punctuation">,</span> Space<span class="token punctuation">,</span> XForm<span class="token punctuation">,</span> DrawerForm } from <span class="token string">"knowdesign"</span><span class="token comment" spellcheck="true">;</span>\nimport { FormItemType } from <span class="token string">"../../x-form"</span><span class="token comment" spellcheck="true">;</span>\n<span class="token keyword">const</span> BasicDemo <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>form<span class="token punctuation">]</span> <span class="token operator">=</span> Form<span class="token punctuation">.</span><span class="token function">useForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  <span class="token keyword">const</span> waitTime <span class="token operator">=</span> <span class="token punctuation">(</span>time<span class="token punctuation">:</span> number <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n    return new <span class="token function">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n      }<span class="token punctuation">,</span> time<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  }<span class="token comment" spellcheck="true">;</span>\n\n  <span class="token keyword">const</span> onClose <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"close drawer"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  }<span class="token comment" spellcheck="true">;</span>\n\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>visible<span class="token punctuation">,</span> setVisible<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n  <span class="token keyword">const</span> formData <span class="token operator">=</span> {\n    name<span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">,</span>\n    age<span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">,</span>\n    city<span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">,</span>\n    date<span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">,</span>\n    comment<span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">,</span>\n  }<span class="token comment" spellcheck="true">;</span>\n  <span class="token keyword">const</span> formMap <span class="token operator">=</span> <span class="token punctuation">[</span>\n    {\n      key<span class="token punctuation">:</span> <span class="token string">"name"</span><span class="token punctuation">,</span>\n      label<span class="token punctuation">:</span> <span class="token string">"姓名"</span><span class="token punctuation">,</span>\n      rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n        {\n          required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          message<span class="token punctuation">:</span> <span class="token string">"请输入"</span><span class="token punctuation">,</span>\n        }<span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n    {\n      key<span class="token punctuation">:</span> <span class="token string">"age"</span><span class="token punctuation">,</span>\n      label<span class="token punctuation">:</span> <span class="token string">"年龄"</span><span class="token punctuation">,</span>\n      rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n        {\n          required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          message<span class="token punctuation">:</span> <span class="token string">"请输入"</span><span class="token punctuation">,</span>\n        }<span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n    {\n      key<span class="token punctuation">:</span> <span class="token string">"city"</span><span class="token punctuation">,</span>\n      label<span class="token punctuation">:</span> <span class="token string">"城市"</span><span class="token punctuation">,</span>\n      type<span class="token punctuation">:</span> FormItemType<span class="token punctuation">.</span><span class="token keyword">select</span><span class="token punctuation">,</span>\n      options<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n        {\n          value<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n          label<span class="token punctuation">:</span> <span class="token string">"北京"</span><span class="token punctuation">,</span>\n        }<span class="token punctuation">,</span>\n        {\n          value<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n          label<span class="token punctuation">:</span> <span class="token string">"南京"</span><span class="token punctuation">,</span>\n        }<span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n        {\n          required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          message<span class="token punctuation">:</span> <span class="token string">"请选择"</span><span class="token punctuation">,</span>\n        }<span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n    {\n      key<span class="token punctuation">:</span> <span class="token string">"date"</span><span class="token punctuation">,</span>\n      type<span class="token punctuation">:</span> FormItemType<span class="token punctuation">.</span>custom<span class="token punctuation">,</span>\n      customFormItem<span class="token punctuation">:</span> <span class="token punctuation">(</span>\n        <span class="token operator">&lt;</span>DatePicker placeholder<span class="token operator">=</span><span class="token string">"请选择时间"</span> format<span class="token operator">=</span><span class="token string">"YYYY-MM-DD"</span> <span class="token operator">/</span><span class="token operator">></span>\n      <span class="token punctuation">)</span><span class="token punctuation">,</span>\n      label<span class="token punctuation">:</span> <span class="token string">"日期"</span><span class="token punctuation">,</span>\n      attrs<span class="token punctuation">:</span> {\n        placeholder<span class="token punctuation">:</span> <span class="token string">"请选择日期"</span><span class="token punctuation">,</span>\n      }<span class="token punctuation">,</span>\n      rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n        {\n          required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          message<span class="token punctuation">:</span> <span class="token string">"请选择日期"</span><span class="token punctuation">,</span>\n        }<span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n    {\n      key<span class="token punctuation">:</span> <span class="token string">"comment"</span><span class="token punctuation">,</span>\n      type<span class="token punctuation">:</span> FormItemType<span class="token punctuation">.</span>textArea<span class="token punctuation">,</span>\n      attrs<span class="token punctuation">:</span> {\n        placeholder<span class="token punctuation">:</span> <span class="token string">"请输入备注"</span><span class="token punctuation">,</span>\n        maxLength<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n      }<span class="token punctuation">,</span>\n      label<span class="token punctuation">:</span> <span class="token string">"备注"</span><span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>\n\n  <span class="token keyword">const</span> formData1 <span class="token operator">=</span> {\n      name<span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">,</span>\n      age<span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">,</span>\n      city<span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">,</span>\n      street<span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">,</span>\n    }<span class="token comment" spellcheck="true">;</span>\n  <span class="token keyword">const</span> formMap1 <span class="token operator">=</span> <span class="token punctuation">[</span>\n    {\n      key<span class="token punctuation">:</span> <span class="token string">"name"</span><span class="token punctuation">,</span>\n      label<span class="token punctuation">:</span> <span class="token string">"姓名"</span><span class="token punctuation">,</span>\n      rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n        {\n          required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          message<span class="token punctuation">:</span> <span class="token string">"请输入"</span><span class="token punctuation">,</span>\n        }<span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n    {\n      key<span class="token punctuation">:</span> <span class="token string">"age"</span><span class="token punctuation">,</span>\n      label<span class="token punctuation">:</span> <span class="token string">"年龄"</span><span class="token punctuation">,</span>\n      rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n        {\n          required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          message<span class="token punctuation">:</span> <span class="token string">"请输入"</span><span class="token punctuation">,</span>\n        }<span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    }<span class="token punctuation">]</span>\n\n  <span class="token keyword">const</span> formMap2 <span class="token operator">=</span> <span class="token punctuation">[</span>\n    {\n      key<span class="token punctuation">:</span> <span class="token string">"city"</span><span class="token punctuation">,</span>\n      label<span class="token punctuation">:</span> <span class="token string">"城市"</span><span class="token punctuation">,</span>\n      rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n        {\n          required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          message<span class="token punctuation">:</span> <span class="token string">"请输入"</span><span class="token punctuation">,</span>\n        }<span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n    {\n      key<span class="token punctuation">:</span> <span class="token string">"street"</span><span class="token punctuation">,</span>\n      label<span class="token punctuation">:</span> <span class="token string">"街道"</span><span class="token punctuation">,</span>\n      rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n        {\n          required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          message<span class="token punctuation">:</span> <span class="token string">"请输入"</span><span class="token punctuation">,</span>\n        }<span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    }<span class="token punctuation">]</span>\n  \n  <span class="token keyword">const</span> onFinish <span class="token operator">=</span> async <span class="token punctuation">(</span>values<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>values<span class="token punctuation">,</span> <span class="token string">\'values\'</span><span class="token punctuation">)</span>\n    await <span class="token function">waitTime</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">"提交成功"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    return <span class="token boolean">true</span><span class="token comment" spellcheck="true">;</span>\n  }<span class="token comment" spellcheck="true">;</span>\n\n  <span class="token keyword">const</span> renderCustomForm <span class="token operator">=</span> <span class="token punctuation">(</span>formInstance<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n    return <span class="token operator">&lt;></span>\n        <span class="token operator">&lt;</span>XForm formData<span class="token operator">=</span>{formData1} formMap<span class="token operator">=</span>{formMap1} form<span class="token operator">=</span>{formInstance}<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>XForm<span class="token operator">></span>\n        <span class="token operator">&lt;</span>XForm formData<span class="token operator">=</span>{formData1} formMap<span class="token operator">=</span>{formMap2} form<span class="token operator">=</span>{formInstance}<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>XForm<span class="token operator">></span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">></span>\n  }<span class="token comment" spellcheck="true">;</span>\n\n\n  return <span class="token punctuation">(</span>\n    <span class="token operator">&lt;</span>Space<span class="token operator">></span>\n      <span class="token operator">&lt;</span>DrawerForm\n        renderCustomForm<span class="token operator">=</span>{renderCustomForm}\n        size<span class="token operator">=</span><span class="token string">"small"</span>\n        title<span class="token operator">=</span><span class="token string">"新建表单"</span>\n        trigger<span class="token operator">=</span>{<span class="token operator">&lt;</span>Button type<span class="token operator">=</span><span class="token string">"primary"</span><span class="token operator">></span>新建表单<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>}\n        drawerProps<span class="token operator">=</span>{{\n          onClose<span class="token punctuation">,</span>\n        }}\n        onFinish<span class="token operator">=</span>{async <span class="token punctuation">(</span>values<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>values<span class="token punctuation">,</span> <span class="token string">"values"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n          await <span class="token function">waitTime</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n          message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">"提交成功"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n          return <span class="token boolean">true</span><span class="token comment" spellcheck="true">;</span>\n        }}\n      <span class="token operator">/</span><span class="token operator">></span>\n      <span class="token operator">&lt;</span>Button type<span class="token operator">=</span><span class="token string">"primary"</span> onClick<span class="token operator">=</span>{<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">setVisible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>}<span class="token operator">></span>\n        visible方式\n      <span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>\n      <span class="token operator">&lt;</span>DrawerForm\n        key<span class="token operator">=</span><span class="token string">"visibleDemo"</span>\n        width<span class="token operator">=</span>{<span class="token number">500</span>}\n        title<span class="token operator">=</span><span class="token string">"visibleDemo"</span>\n        visible<span class="token operator">=</span>{visible}\n        onVisibleChange<span class="token operator">=</span>{setVisible}\n        drawerProps<span class="token operator">=</span>{{\n          onClose<span class="token punctuation">,</span>\n        }}\n        XFormProps<span class="token operator">=</span>{{\n          formData<span class="token punctuation">,</span>\n          formMap<span class="token punctuation">,</span>\n          form<span class="token punctuation">,</span>\n        }}\n        onFinish<span class="token operator">=</span>{async <span class="token punctuation">(</span>values<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>values<span class="token punctuation">,</span> <span class="token string">"values"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n          await <span class="token function">waitTime</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n          message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">"提交成功"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n          return <span class="token boolean">true</span><span class="token comment" spellcheck="true">;</span>\n        }}\n      <span class="token operator">/</span><span class="token operator">></span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>Space<span class="token operator">></span>\n  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n}<span class="token comment" spellcheck="true">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token operator">&lt;</span>BasicDemo <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span>\n  mountNode\n<span class="token punctuation">)</span>'}],highlightedCodes:{tsx:'<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Form<span class="token punctuation">,</span> message<span class="token punctuation">,</span> DatePicker<span class="token punctuation">,</span> Space<span class="token punctuation">,</span> XForm<span class="token punctuation">,</span> DrawerForm <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"knowdesign"</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> FormItemType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"../../x-form"</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token function-variable function">BasicDemo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>form<span class="token punctuation">]</span> <span class="token operator">=</span> Form<span class="token punctuation">.</span><span class="token function">useForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token function-variable function">waitTime</span> <span class="token operator">=</span> <span class="token punctuation">(</span>time<span class="token operator">:</span> number <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span> time<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">onClose</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"close drawer"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>visible<span class="token punctuation">,</span> setVisible<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> formData <span class="token operator">=</span> <span class="token punctuation">{</span>\n    name<span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>\n    age<span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>\n    city<span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>\n    date<span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>\n    comment<span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> formMap <span class="token operator">=</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      key<span class="token operator">:</span> <span class="token string">"name"</span><span class="token punctuation">,</span>\n      label<span class="token operator">:</span> <span class="token string">"姓名"</span><span class="token punctuation">,</span>\n      rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          required<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          message<span class="token operator">:</span> <span class="token string">"请输入"</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      key<span class="token operator">:</span> <span class="token string">"age"</span><span class="token punctuation">,</span>\n      label<span class="token operator">:</span> <span class="token string">"年龄"</span><span class="token punctuation">,</span>\n      rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          required<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          message<span class="token operator">:</span> <span class="token string">"请输入"</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      key<span class="token operator">:</span> <span class="token string">"city"</span><span class="token punctuation">,</span>\n      label<span class="token operator">:</span> <span class="token string">"城市"</span><span class="token punctuation">,</span>\n      type<span class="token operator">:</span> FormItemType<span class="token punctuation">.</span>select<span class="token punctuation">,</span>\n      options<span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          value<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n          label<span class="token operator">:</span> <span class="token string">"北京"</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n          value<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n          label<span class="token operator">:</span> <span class="token string">"南京"</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          required<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          message<span class="token operator">:</span> <span class="token string">"请选择"</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      key<span class="token operator">:</span> <span class="token string">"date"</span><span class="token punctuation">,</span>\n      type<span class="token operator">:</span> FormItemType<span class="token punctuation">.</span>custom<span class="token punctuation">,</span>\n      customFormItem<span class="token operator">:</span> <span class="token punctuation">(</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DatePicker</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请选择时间<span class="token punctuation">"</span></span> <span class="token attr-name">format</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>YYYY-MM-DD<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n      <span class="token punctuation">)</span><span class="token punctuation">,</span>\n      label<span class="token operator">:</span> <span class="token string">"日期"</span><span class="token punctuation">,</span>\n      attrs<span class="token operator">:</span> <span class="token punctuation">{</span>\n        placeholder<span class="token operator">:</span> <span class="token string">"请选择日期"</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          required<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          message<span class="token operator">:</span> <span class="token string">"请选择日期"</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      key<span class="token operator">:</span> <span class="token string">"comment"</span><span class="token punctuation">,</span>\n      type<span class="token operator">:</span> FormItemType<span class="token punctuation">.</span>textArea<span class="token punctuation">,</span>\n      attrs<span class="token operator">:</span> <span class="token punctuation">{</span>\n        placeholder<span class="token operator">:</span> <span class="token string">"请输入备注"</span><span class="token punctuation">,</span>\n        maxLength<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      label<span class="token operator">:</span> <span class="token string">"备注"</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> formData1 <span class="token operator">=</span> <span class="token punctuation">{</span>\n      name<span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>\n      age<span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>\n      city<span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>\n      street<span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> formMap1 <span class="token operator">=</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      key<span class="token operator">:</span> <span class="token string">"name"</span><span class="token punctuation">,</span>\n      label<span class="token operator">:</span> <span class="token string">"姓名"</span><span class="token punctuation">,</span>\n      rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          required<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          message<span class="token operator">:</span> <span class="token string">"请输入"</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      key<span class="token operator">:</span> <span class="token string">"age"</span><span class="token punctuation">,</span>\n      label<span class="token operator">:</span> <span class="token string">"年龄"</span><span class="token punctuation">,</span>\n      rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          required<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          message<span class="token operator">:</span> <span class="token string">"请输入"</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">]</span>\n\n  <span class="token keyword">const</span> formMap2 <span class="token operator">=</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      key<span class="token operator">:</span> <span class="token string">"city"</span><span class="token punctuation">,</span>\n      label<span class="token operator">:</span> <span class="token string">"城市"</span><span class="token punctuation">,</span>\n      rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          required<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          message<span class="token operator">:</span> <span class="token string">"请输入"</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      key<span class="token operator">:</span> <span class="token string">"street"</span><span class="token punctuation">,</span>\n      label<span class="token operator">:</span> <span class="token string">"街道"</span><span class="token punctuation">,</span>\n      rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          required<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          message<span class="token operator">:</span> <span class="token string">"请输入"</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">]</span>\n  \n  <span class="token keyword">const</span> <span class="token function-variable function">onFinish</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>values<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>values<span class="token punctuation">,</span> <span class="token string">\'values\'</span><span class="token punctuation">)</span>\n    <span class="token keyword">await</span> <span class="token function">waitTime</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">"提交成功"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">renderCustomForm</span> <span class="token operator">=</span> <span class="token punctuation">(</span>formInstance<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">XForm</span></span> <span class="token attr-name">formData</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>formData1<span class="token punctuation">}</span></span> <span class="token attr-name">formMap</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>formMap1<span class="token punctuation">}</span></span> <span class="token attr-name">form</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>formInstance<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">XForm</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">XForm</span></span> <span class="token attr-name">formData</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>formData1<span class="token punctuation">}</span></span> <span class="token attr-name">formMap</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>formMap2<span class="token punctuation">}</span></span> <span class="token attr-name">form</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>formInstance<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">XForm</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Space</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DrawerForm</span></span>\n        <span class="token attr-name">renderCustomForm</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>renderCustomForm<span class="token punctuation">}</span></span>\n        <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>small<span class="token punctuation">"</span></span>\n        <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>新建表单<span class="token punctuation">"</span></span>\n        <span class="token attr-name">trigger</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>新建表单<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">drawerProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          onClose<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">onFinish</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">async</span> <span class="token punctuation">(</span>values<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>values<span class="token punctuation">,</span> <span class="token string">"values"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token keyword">await</span> <span class="token function">waitTime</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">"提交成功"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">setVisible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n        visible方式\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DrawerForm</span></span>\n        <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>visibleDemo<span class="token punctuation">"</span></span>\n        <span class="token attr-name">width</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">500</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>visibleDemo<span class="token punctuation">"</span></span>\n        <span class="token attr-name">visible</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>visible<span class="token punctuation">}</span></span>\n        <span class="token attr-name">onVisibleChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>setVisible<span class="token punctuation">}</span></span>\n        <span class="token attr-name">drawerProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          onClose<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">XFormProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          formData<span class="token punctuation">,</span>\n          formMap<span class="token punctuation">,</span>\n          form<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">onFinish</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">async</span> <span class="token punctuation">(</span>values<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>values<span class="token punctuation">,</span> <span class="token string">"values"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token keyword">await</span> <span class="token function">waitTime</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">"提交成功"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Space</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">BasicDemo</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n  mountNode\n<span class="token punctuation">)</span>',jsx:'<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Form<span class="token punctuation">,</span> message<span class="token punctuation">,</span> DatePicker<span class="token punctuation">,</span> Space<span class="token punctuation">,</span> XForm<span class="token punctuation">,</span> DrawerForm <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'knowdesign\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> FormItemType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'../../x-form\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">BasicDemo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>form<span class="token punctuation">]</span> <span class="token operator">=</span> Form<span class="token punctuation">.</span><span class="token function">useForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">waitTime</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">time <span class="token operator">=</span> <span class="token number">100</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span> time<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">onClose</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'close drawer\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>visible<span class="token punctuation">,</span> setVisible<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> formData <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">city</span><span class="token operator">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">date</span><span class="token operator">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">comment</span><span class="token operator">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> formMap <span class="token operator">=</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">\'姓名\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">\'请输入\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">\'年龄\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">\'请输入\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">\'city\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">\'城市\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">type</span><span class="token operator">:</span> FormItemType<span class="token punctuation">.</span>select<span class="token punctuation">,</span>\n      <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">\'北京\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n          <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">\'南京\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">\'请选择\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">\'date\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">type</span><span class="token operator">:</span> FormItemType<span class="token punctuation">.</span>custom<span class="token punctuation">,</span>\n      <span class="token literal-property property">customFormItem</span><span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DatePicker</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请选择时间<span class="token punctuation">"</span></span> <span class="token attr-name">format</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>YYYY-MM-DD<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n      <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">\'日期\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">attrs</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">placeholder</span><span class="token operator">:</span> <span class="token string">\'请选择日期\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">\'请选择日期\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">\'comment\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">type</span><span class="token operator">:</span> FormItemType<span class="token punctuation">.</span>textArea<span class="token punctuation">,</span>\n      <span class="token literal-property property">attrs</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">placeholder</span><span class="token operator">:</span> <span class="token string">\'请输入备注\'</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">maxLength</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">\'备注\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> formData1 <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">city</span><span class="token operator">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">street</span><span class="token operator">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> formMap1 <span class="token operator">=</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">\'姓名\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">\'请输入\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">\'年龄\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">\'请输入\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> formMap2 <span class="token operator">=</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">\'city\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">\'城市\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">\'请输入\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">\'street\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">\'街道\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">\'请输入\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">onFinish</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">values</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>values<span class="token punctuation">,</span> <span class="token string">\'values\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">await</span> <span class="token function">waitTime</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">\'提交成功\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">renderCustomForm</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">formInstance</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">XForm</span></span> <span class="token attr-name">formData</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>formData1<span class="token punctuation">}</span></span> <span class="token attr-name">formMap</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>formMap1<span class="token punctuation">}</span></span> <span class="token attr-name">form</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>formInstance<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">XForm</span></span> <span class="token attr-name">formData</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>formData1<span class="token punctuation">}</span></span> <span class="token attr-name">formMap</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>formMap2<span class="token punctuation">}</span></span> <span class="token attr-name">form</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>formInstance<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Space</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DrawerForm</span></span>\n        <span class="token attr-name">renderCustomForm</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>renderCustomForm<span class="token punctuation">}</span></span>\n        <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>small<span class="token punctuation">"</span></span>\n        <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>新建表单<span class="token punctuation">"</span></span>\n        <span class="token attr-name">trigger</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>新建表单<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">drawerProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          onClose<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">onFinish</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">values</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>values<span class="token punctuation">,</span> <span class="token string">\'values\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token keyword">await</span> <span class="token function">waitTime</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">\'提交成功\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">setVisible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n        visible方式\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DrawerForm</span></span>\n        <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>visibleDemo<span class="token punctuation">"</span></span>\n        <span class="token attr-name">width</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">500</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>visibleDemo<span class="token punctuation">"</span></span>\n        <span class="token attr-name">visible</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>visible<span class="token punctuation">}</span></span>\n        <span class="token attr-name">onVisibleChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>setVisible<span class="token punctuation">}</span></span>\n        <span class="token attr-name">drawerProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          onClose<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">XFormProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          formData<span class="token punctuation">,</span>\n          formMap<span class="token punctuation">,</span>\n          form<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">onFinish</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">values</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>values<span class="token punctuation">,</span> <span class="token string">\'values\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token keyword">await</span> <span class="token function">waitTime</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">\'提交成功\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Space</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">BasicDemo</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>\n'},preview:function(){a(0),a(35);function n(s){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(s)}var s=function(s,a){if(!a&&s&&s.__esModule)return s;if(null===s||"object"!==n(s)&&"function"!=typeof s)return{default:s};var t=o(a);if(t&&t.has(s))return t.get(s);var p={},e=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var c in s)if("default"!==c&&Object.prototype.hasOwnProperty.call(s,c)){var u=e?Object.getOwnPropertyDescriptor(s,c):null;u&&(u.get||u.set)?Object.defineProperty(p,c,u):p[c]=s[c]}p.default=s,t&&t.set(s,p);return p}(a(0)),t=a(96),p=a(324);function o(n){if("function"!=typeof WeakMap)return null;var s=new WeakMap,a=new WeakMap;return(o=function(n){return n?a:s})(n)}function e(n,s,a,t,p,o,e){try{var c=n[o](e),u=c.value}catch(n){return void a(n)}c.done?s(u):Promise.resolve(u).then(t,p)}function c(n){return function(){var s=this,a=arguments;return new Promise((function(t,p){var o=n.apply(s,a);function c(n){e(o,t,p,c,u,"next",n)}function u(n){e(o,t,p,c,u,"throw",n)}c(void 0)}))}}function u(n,s){return function(n){if(Array.isArray(n))return n}(n)||function(n,s){var a=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null==a)return;var t,p,o=[],e=!0,c=!1;try{for(a=a.call(n);!(e=(t=a.next()).done)&&(o.push(t.value),!s||o.length!==s);e=!0);}catch(n){c=!0,p=n}finally{try{e||null==a.return||a.return()}finally{if(c)throw p}}return o}(n,s)||function(n,s){if(!n)return;if("string"==typeof n)return l(n,s);var a=Object.prototype.toString.call(n).slice(8,-1);"Object"===a&&n.constructor&&(a=n.constructor.name);if("Map"===a||"Set"===a)return Array.from(n);if("Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a))return l(n,s)}(n,s)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function l(n,s){(null==s||s>n.length)&&(s=n.length);for(var a=0,t=new Array(s);a<s;a++)t[a]=n[a];return t}var k=function(){var n=u(t.Form.useForm(),1)[0],a=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:100;return new Promise((function(s){setTimeout((function(){s(!0)}),n)}))},o=function(){console.log("close drawer")},e=u((0,s.useState)(!1),2),l=e[0],k=e[1],r=[{key:"name",label:"姓名",rules:[{required:!0,message:"请输入"}]},{key:"age",label:"年龄",rules:[{required:!0,message:"请输入"}]},{key:"city",label:"城市",type:p.FormItemType.select,options:[{value:1,label:"北京"},{value:2,label:"南京"}],rules:[{required:!0,message:"请选择"}]},{key:"date",type:p.FormItemType.custom,customFormItem:s.default.createElement(t.DatePicker,{placeholder:"请选择时间",format:"YYYY-MM-DD"}),label:"日期",attrs:{placeholder:"请选择日期"},rules:[{required:!0,message:"请选择日期"}]},{key:"comment",type:p.FormItemType.textArea,attrs:{placeholder:"请输入备注",maxLength:10},label:"备注"}],i={name:"",age:"",city:"",street:""},m=[{key:"name",label:"姓名",rules:[{required:!0,message:"请输入"}]},{key:"age",label:"年龄",rules:[{required:!0,message:"请输入"}]}],g=[{key:"city",label:"城市",rules:[{required:!0,message:"请输入"}]},{key:"street",label:"街道",rules:[{required:!0,message:"请输入"}]}];return s.default.createElement(t.Space,null,s.default.createElement(t.DrawerForm,{renderCustomForm:function(n){return s.default.createElement(s.default.Fragment,null,s.default.createElement(t.XForm,{formData:i,formMap:m,form:n}),s.default.createElement(t.XForm,{formData:i,formMap:g,form:n}))},size:"small",title:"新建表单",trigger:s.default.createElement(t.Button,{type:"primary"},"新建表单"),drawerProps:{onClose:o},onFinish:function(){var n=c(regeneratorRuntime.mark((function n(s){return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return console.log(s,"values"),n.next=3,a(2e3);case 3:return t.message.success("提交成功"),n.abrupt("return",!0);case 5:case"end":return n.stop()}}),n)})));return function(s){return n.apply(this,arguments)}}()}),s.default.createElement(t.Button,{type:"primary",onClick:function(){return k(!0)}},"visible方式"),s.default.createElement(t.DrawerForm,{key:"visibleDemo",width:500,title:"visibleDemo",visible:l,onVisibleChange:k,drawerProps:{onClose:o},XFormProps:{formData:{name:"",age:"",city:"",date:"",comment:""},formMap:r,form:n},onFinish:function(){var n=c(regeneratorRuntime.mark((function n(s){return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return console.log(s,"values"),n.next=3,a(2e3);case 3:return t.message.success("提交成功"),n.abrupt("return",!0);case 5:case"end":return n.stop()}}),n)})));return function(s){return n.apply(this,arguments)}}()}))};return s.default.createElement(k,null)}}},5233:function(n,s,a){n.exports={content:[],meta:{order:1,cols:2,title:"自定义表单按钮",filename:"components/extend/drawer-form/demo/customButton.md",id:"components-extend-drawer-form-demo-customButton"},toc:["ul"],highlightedCode:["pre",{lang:"tsx",highlighted:'import React<span class="token punctuation">,</span> { useState } from <span class="token string">\'react\'</span>\nimport { Button<span class="token punctuation">,</span> Form<span class="token punctuation">,</span> message<span class="token punctuation">,</span> Space } from <span class="token string">"knowdesign"</span><span class="token comment" spellcheck="true">;</span>\nimport { DrawerForm } from <span class="token string">"knowdesign"</span><span class="token comment" spellcheck="true">;</span>\nimport { FormItemType } from <span class="token string">"../../x-form"</span><span class="token comment" spellcheck="true">;</span>\n<span class="token keyword">const</span> CustomButton <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>form<span class="token punctuation">]</span> <span class="token operator">=</span> Form<span class="token punctuation">.</span><span class="token function">useForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  <span class="token keyword">const</span> waitTime <span class="token operator">=</span> <span class="token punctuation">(</span>time<span class="token punctuation">:</span> number <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n    return new <span class="token function">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n      }<span class="token punctuation">,</span> time<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  }<span class="token comment" spellcheck="true">;</span>\n\n  <span class="token keyword">const</span> onClose <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"close drawer"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  }<span class="token comment" spellcheck="true">;</span>\n\n  <span class="token keyword">const</span> formData <span class="token operator">=</span> {\n    name<span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">,</span>\n    age<span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">,</span>\n    city<span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">,</span>\n  }<span class="token comment" spellcheck="true">;</span>\n\n  <span class="token keyword">const</span> formMap <span class="token operator">=</span> <span class="token punctuation">[</span>\n    {\n      key<span class="token punctuation">:</span> <span class="token string">"name"</span><span class="token punctuation">,</span>\n      label<span class="token punctuation">:</span> <span class="token string">"姓名"</span><span class="token punctuation">,</span>\n      rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n        {\n          required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          message<span class="token punctuation">:</span> <span class="token string">"请输入"</span><span class="token punctuation">,</span>\n        }<span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n    {\n      key<span class="token punctuation">:</span> <span class="token string">"age"</span><span class="token punctuation">,</span>\n      label<span class="token punctuation">:</span> <span class="token string">"年龄"</span><span class="token punctuation">,</span>\n      rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n        {\n          required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          message<span class="token punctuation">:</span> <span class="token string">"请输入"</span><span class="token punctuation">,</span>\n        }<span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>\n\n  return <span class="token punctuation">(</span>\n    <span class="token operator">&lt;</span>Space<span class="token operator">></span>\n      <span class="token operator">&lt;</span>DrawerForm\n        size<span class="token operator">=</span><span class="token string">"small"</span>\n        title<span class="token operator">=</span><span class="token string">"自定义按钮文字"</span>\n        trigger<span class="token operator">=</span>{<span class="token operator">&lt;</span>Button type<span class="token operator">=</span><span class="token string">"primary"</span><span class="token operator">></span>自定义按钮文字<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>}\n        drawerProps<span class="token operator">=</span>{{\n          onClose<span class="token punctuation">,</span>\n        }}\n        XFormProps<span class="token operator">=</span>{{\n          formData<span class="token punctuation">,</span>\n          formMap<span class="token punctuation">,</span>\n          form<span class="token punctuation">,</span>\n        }}\n        onFinish<span class="token operator">=</span>{async <span class="token punctuation">(</span>values<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>values<span class="token punctuation">,</span> <span class="token string">"values"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n          await <span class="token function">waitTime</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n          message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">"提交成功"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n          return <span class="token boolean">true</span><span class="token comment" spellcheck="true">;</span>\n        }}\n        submitter<span class="token operator">=</span>{{\n          buttonConfig<span class="token punctuation">:</span> {\n            submitText<span class="token punctuation">:</span> <span class="token string">"OK"</span><span class="token punctuation">,</span>\n            resetText<span class="token punctuation">:</span> <span class="token string">"Cancel"</span><span class="token punctuation">,</span>\n          }<span class="token punctuation">,</span>\n        }}\n      <span class="token operator">/</span><span class="token operator">></span>\n\n      <span class="token operator">&lt;</span>DrawerForm\n        size<span class="token operator">=</span><span class="token string">"small"</span>\n        title<span class="token operator">=</span><span class="token string">"自定义footer"</span>\n        trigger<span class="token operator">=</span>{<span class="token operator">&lt;</span>Button type<span class="token operator">=</span><span class="token string">"primary"</span><span class="token operator">></span>自定义footer<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>}\n        drawerProps<span class="token operator">=</span>{{\n          onClose<span class="token punctuation">,</span>\n        }}\n        XFormProps<span class="token operator">=</span>{{\n          formData<span class="token punctuation">,</span>\n          formMap<span class="token punctuation">,</span>\n          form<span class="token punctuation">,</span>\n        }}\n        onFinish<span class="token operator">=</span>{async <span class="token punctuation">(</span>values<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>values<span class="token punctuation">,</span> <span class="token string">"values"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n          await <span class="token function">waitTime</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n          message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">"提交成功"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n          return <span class="token boolean">true</span><span class="token comment" spellcheck="true">;</span>\n        }}\n        submitter<span class="token operator">=</span>{{\n          buttonConfig<span class="token punctuation">:</span> {\n            submitText<span class="token punctuation">:</span> <span class="token string">"提交"</span><span class="token punctuation">,</span>\n            resetText<span class="token punctuation">:</span> <span class="token string">"关闭"</span><span class="token punctuation">,</span>\n          }<span class="token punctuation">,</span>\n          render<span class="token punctuation">:</span> <span class="token punctuation">(</span>{ submit<span class="token punctuation">,</span> reset<span class="token punctuation">,</span> form }<span class="token punctuation">,</span> defaultDoms<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n            return <span class="token punctuation">[</span>\n              <span class="token operator">&lt;</span>Button\n                key<span class="token operator">=</span><span class="token string">"reset"</span>\n                onClick<span class="token operator">=</span>{<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n                  <span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                }}\n              <span class="token operator">></span>\n                重置\n              <span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span><span class="token punctuation">,</span>\n              <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>defaultDoms<span class="token punctuation">,</span>\n            <span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>\n          }<span class="token punctuation">,</span>\n        }}\n      <span class="token operator">/</span><span class="token operator">></span>\n\n      <span class="token operator">&lt;</span>DrawerForm\n        size<span class="token operator">=</span><span class="token string">"small"</span>\n        title<span class="token operator">=</span><span class="token string">"隐藏footer"</span>\n        trigger<span class="token operator">=</span>{<span class="token operator">&lt;</span>Button type<span class="token operator">=</span><span class="token string">"primary"</span><span class="token operator">></span>隐藏footer<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>}\n        drawerProps<span class="token operator">=</span>{{\n          onClose<span class="token punctuation">,</span>\n        }}\n        XFormProps<span class="token operator">=</span>{{\n          formData<span class="token punctuation">,</span>\n          formMap<span class="token punctuation">,</span>\n          form<span class="token punctuation">,</span>\n        }}\n        onFinish<span class="token operator">=</span>{async <span class="token punctuation">(</span>values<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>values<span class="token punctuation">,</span> <span class="token string">"values"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n          await <span class="token function">waitTime</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n          message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">"提交成功"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n          return <span class="token boolean">true</span><span class="token comment" spellcheck="true">;</span>\n        }}\n        submitter<span class="token operator">=</span>{<span class="token boolean">false</span>}\n      <span class="token operator">/</span><span class="token operator">></span>\n\n      <span class="token operator">&lt;</span>DrawerForm\n        size<span class="token operator">=</span><span class="token string">"small"</span>\n        title<span class="token operator">=</span><span class="token string">"按钮位置"</span>\n        trigger<span class="token operator">=</span>{<span class="token operator">&lt;</span>Button type<span class="token operator">=</span><span class="token string">"primary"</span><span class="token operator">></span>按钮位置<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>}\n        drawerProps<span class="token operator">=</span>{{\n          onClose<span class="token punctuation">,</span>\n        }}\n        XFormProps<span class="token operator">=</span>{{\n          formData<span class="token punctuation">,</span>\n          formMap<span class="token punctuation">,</span>\n          form<span class="token punctuation">,</span>\n        }}\n        onFinish<span class="token operator">=</span>{async <span class="token punctuation">(</span>values<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>values<span class="token punctuation">,</span> <span class="token string">"values"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n          await <span class="token function">waitTime</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n          message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">"提交成功"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n          return <span class="token boolean">true</span><span class="token comment" spellcheck="true">;</span>\n        }}\n        submitterPosition<span class="token operator">=</span><span class="token string">"left"</span>\n      <span class="token operator">/</span><span class="token operator">></span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>Space<span class="token operator">></span>\n  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n}<span class="token comment" spellcheck="true">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token operator">&lt;</span>CustomButton <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span>\n  mountNode\n<span class="token punctuation">)</span>'}],highlightedCodes:{tsx:'<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Form<span class="token punctuation">,</span> message<span class="token punctuation">,</span> Space <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"knowdesign"</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> DrawerForm <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"knowdesign"</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> FormItemType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"../../x-form"</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token function-variable function">CustomButton</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>form<span class="token punctuation">]</span> <span class="token operator">=</span> Form<span class="token punctuation">.</span><span class="token function">useForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token function-variable function">waitTime</span> <span class="token operator">=</span> <span class="token punctuation">(</span>time<span class="token operator">:</span> number <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span> time<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">onClose</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"close drawer"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> formData <span class="token operator">=</span> <span class="token punctuation">{</span>\n    name<span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>\n    age<span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>\n    city<span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> formMap <span class="token operator">=</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      key<span class="token operator">:</span> <span class="token string">"name"</span><span class="token punctuation">,</span>\n      label<span class="token operator">:</span> <span class="token string">"姓名"</span><span class="token punctuation">,</span>\n      rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          required<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          message<span class="token operator">:</span> <span class="token string">"请输入"</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      key<span class="token operator">:</span> <span class="token string">"age"</span><span class="token punctuation">,</span>\n      label<span class="token operator">:</span> <span class="token string">"年龄"</span><span class="token punctuation">,</span>\n      rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          required<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          message<span class="token operator">:</span> <span class="token string">"请输入"</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Space</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DrawerForm</span></span>\n        <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>small<span class="token punctuation">"</span></span>\n        <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>自定义按钮文字<span class="token punctuation">"</span></span>\n        <span class="token attr-name">trigger</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>自定义按钮文字<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">drawerProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          onClose<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">XFormProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          formData<span class="token punctuation">,</span>\n          formMap<span class="token punctuation">,</span>\n          form<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">onFinish</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">async</span> <span class="token punctuation">(</span>values<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>values<span class="token punctuation">,</span> <span class="token string">"values"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token keyword">await</span> <span class="token function">waitTime</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">"提交成功"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">submitter</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          buttonConfig<span class="token operator">:</span> <span class="token punctuation">{</span>\n            submitText<span class="token operator">:</span> <span class="token string">"OK"</span><span class="token punctuation">,</span>\n            resetText<span class="token operator">:</span> <span class="token string">"Cancel"</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token punctuation">/></span></span>\n\n      <span class="token operator">&lt;</span>DrawerForm\n        size<span class="token operator">=</span><span class="token string">"small"</span>\n        title<span class="token operator">=</span><span class="token string">"自定义footer"</span>\n        trigger<span class="token operator">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>自定义footer<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span><span class="token punctuation">}</span>\n        drawerProps<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          onClose<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        XFormProps<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          formData<span class="token punctuation">,</span>\n          formMap<span class="token punctuation">,</span>\n          form<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        onFinish<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">async</span> <span class="token punctuation">(</span>values<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>values<span class="token punctuation">,</span> <span class="token string">"values"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token keyword">await</span> <span class="token function">waitTime</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">"提交成功"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        submitter<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          buttonConfig<span class="token operator">:</span> <span class="token punctuation">{</span>\n            submitText<span class="token operator">:</span> <span class="token string">"提交"</span><span class="token punctuation">,</span>\n            resetText<span class="token operator">:</span> <span class="token string">"关闭"</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> submit<span class="token punctuation">,</span> reset<span class="token punctuation">,</span> form <span class="token punctuation">}</span><span class="token punctuation">,</span> defaultDoms<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token punctuation">[</span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span>\n                <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>reset<span class="token punctuation">"</span></span>\n                <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                  <span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n              <span class="token punctuation">></span></span>\n                重置\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n              <span class="token operator">...</span>defaultDoms<span class="token punctuation">,</span>\n            <span class="token punctuation">]</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span>\n      <span class="token operator">/</span><span class="token operator">></span>\n\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DrawerForm</span></span>\n        <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>small<span class="token punctuation">"</span></span>\n        <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>隐藏footer<span class="token punctuation">"</span></span>\n        <span class="token attr-name">trigger</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>隐藏footer<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">drawerProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          onClose<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">XFormProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          formData<span class="token punctuation">,</span>\n          formMap<span class="token punctuation">,</span>\n          form<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">onFinish</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">async</span> <span class="token punctuation">(</span>values<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>values<span class="token punctuation">,</span> <span class="token string">"values"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token keyword">await</span> <span class="token function">waitTime</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">"提交成功"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">submitter</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span></span>\n      <span class="token punctuation">/></span></span>\n\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DrawerForm</span></span>\n        <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>small<span class="token punctuation">"</span></span>\n        <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>按钮位置<span class="token punctuation">"</span></span>\n        <span class="token attr-name">trigger</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>按钮位置<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">drawerProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          onClose<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">XFormProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          formData<span class="token punctuation">,</span>\n          formMap<span class="token punctuation">,</span>\n          form<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">onFinish</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">async</span> <span class="token punctuation">(</span>values<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>values<span class="token punctuation">,</span> <span class="token string">"values"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token keyword">await</span> <span class="token function">waitTime</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">"提交成功"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">submitterPosition</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span>\n      <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Space</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CustomButton</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n  mountNode\n<span class="token punctuation">)</span>',jsx:'<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Form<span class="token punctuation">,</span> message<span class="token punctuation">,</span> Space <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'knowdesign\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> DrawerForm <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'knowdesign\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">CustomButton</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>form<span class="token punctuation">]</span> <span class="token operator">=</span> Form<span class="token punctuation">.</span><span class="token function">useForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">waitTime</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">time <span class="token operator">=</span> <span class="token number">100</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span> time<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">onClose</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'close drawer\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> formData <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">city</span><span class="token operator">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> formMap <span class="token operator">=</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">\'姓名\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">\'请输入\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">\'年龄\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">\'请输入\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Space</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DrawerForm</span></span>\n        <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>small<span class="token punctuation">"</span></span>\n        <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>自定义按钮文字<span class="token punctuation">"</span></span>\n        <span class="token attr-name">trigger</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>自定义按钮文字<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">drawerProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          onClose<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">XFormProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          formData<span class="token punctuation">,</span>\n          formMap<span class="token punctuation">,</span>\n          form<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">onFinish</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">values</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>values<span class="token punctuation">,</span> <span class="token string">\'values\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token keyword">await</span> <span class="token function">waitTime</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">\'提交成功\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">submitter</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          <span class="token literal-property property">buttonConfig</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token literal-property property">submitText</span><span class="token operator">:</span> <span class="token string">\'OK\'</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">resetText</span><span class="token operator">:</span> <span class="token string">\'Cancel\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token punctuation">/></span></span>\n\n      <span class="token operator">&lt;</span>DrawerForm\n        size<span class="token operator">=</span><span class="token string">"small"</span>\n        title<span class="token operator">=</span><span class="token string">"自定义footer"</span>\n        trigger<span class="token operator">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>自定义footer<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span><span class="token punctuation">}</span>\n        drawerProps<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          onClose<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        XFormProps<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          formData<span class="token punctuation">,</span>\n          formMap<span class="token punctuation">,</span>\n          form<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        onFinish<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">values</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>values<span class="token punctuation">,</span> <span class="token string">\'values\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token keyword">await</span> <span class="token function">waitTime</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">\'提交成功\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        submitter<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          <span class="token literal-property property">buttonConfig</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token literal-property property">submitText</span><span class="token operator">:</span> <span class="token string">\'提交\'</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">resetText</span><span class="token operator">:</span> <span class="token string">\'关闭\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> submit<span class="token punctuation">,</span> reset<span class="token punctuation">,</span> form <span class="token punctuation">}</span><span class="token punctuation">,</span> defaultDoms</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token punctuation">[</span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span>\n                <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>reset<span class="token punctuation">"</span></span>\n                <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                  <span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n              <span class="token punctuation">></span></span>\n                重置\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n              <span class="token operator">...</span>defaultDoms<span class="token punctuation">,</span>\n            <span class="token punctuation">]</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span>\n      <span class="token operator">/</span><span class="token operator">></span>\n\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DrawerForm</span></span>\n        <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>small<span class="token punctuation">"</span></span>\n        <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>隐藏footer<span class="token punctuation">"</span></span>\n        <span class="token attr-name">trigger</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>隐藏footer<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">drawerProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          onClose<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">XFormProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          formData<span class="token punctuation">,</span>\n          formMap<span class="token punctuation">,</span>\n          form<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">onFinish</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">values</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>values<span class="token punctuation">,</span> <span class="token string">\'values\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token keyword">await</span> <span class="token function">waitTime</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">\'提交成功\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">submitter</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span></span>\n      <span class="token punctuation">/></span></span>\n\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DrawerForm</span></span>\n        <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>small<span class="token punctuation">"</span></span>\n        <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>按钮位置<span class="token punctuation">"</span></span>\n        <span class="token attr-name">trigger</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>按钮位置<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">drawerProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          onClose<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">XFormProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          formData<span class="token punctuation">,</span>\n          formMap<span class="token punctuation">,</span>\n          form<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">onFinish</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">values</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>values<span class="token punctuation">,</span> <span class="token string">\'values\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token keyword">await</span> <span class="token function">waitTime</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">\'提交成功\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">submitterPosition</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span>\n      <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Space</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CustomButton</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>\n'},preview:function(){a(0),a(35);var n,s=(n=a(0))&&n.__esModule?n:{default:n},t=a(96);function p(n){return function(n){if(Array.isArray(n))return l(n)}(n)||function(n){if("undefined"!=typeof Symbol&&null!=n[Symbol.iterator]||null!=n["@@iterator"])return Array.from(n)}(n)||u(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function o(n,s,a,t,p,o,e){try{var c=n[o](e),u=c.value}catch(n){return void a(n)}c.done?s(u):Promise.resolve(u).then(t,p)}function e(n){return function(){var s=this,a=arguments;return new Promise((function(t,p){var e=n.apply(s,a);function c(n){o(e,t,p,c,u,"next",n)}function u(n){o(e,t,p,c,u,"throw",n)}c(void 0)}))}}function c(n,s){return function(n){if(Array.isArray(n))return n}(n)||function(n,s){var a=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null==a)return;var t,p,o=[],e=!0,c=!1;try{for(a=a.call(n);!(e=(t=a.next()).done)&&(o.push(t.value),!s||o.length!==s);e=!0);}catch(n){c=!0,p=n}finally{try{e||null==a.return||a.return()}finally{if(c)throw p}}return o}(n,s)||u(n,s)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function u(n,s){if(n){if("string"==typeof n)return l(n,s);var a=Object.prototype.toString.call(n).slice(8,-1);return"Object"===a&&n.constructor&&(a=n.constructor.name),"Map"===a||"Set"===a?Array.from(n):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?l(n,s):void 0}}function l(n,s){(null==s||s>n.length)&&(s=n.length);for(var a=0,t=new Array(s);a<s;a++)t[a]=n[a];return t}var k=function(){var n=c(t.Form.useForm(),1)[0],a=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:100;return new Promise((function(s){setTimeout((function(){s(!0)}),n)}))},o=function(){console.log("close drawer")},u={name:"",age:"",city:""},l=[{key:"name",label:"姓名",rules:[{required:!0,message:"请输入"}]},{key:"age",label:"年龄",rules:[{required:!0,message:"请输入"}]}];return s.default.createElement(t.Space,null,s.default.createElement(t.DrawerForm,{size:"small",title:"自定义按钮文字",trigger:s.default.createElement(t.Button,{type:"primary"},"自定义按钮文字"),drawerProps:{onClose:o},XFormProps:{formData:u,formMap:l,form:n},onFinish:function(){var n=e(regeneratorRuntime.mark((function n(s){return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return console.log(s,"values"),n.next=3,a(2e3);case 3:return t.message.success("提交成功"),n.abrupt("return",!0);case 5:case"end":return n.stop()}}),n)})));return function(s){return n.apply(this,arguments)}}(),submitter:{buttonConfig:{submitText:"OK",resetText:"Cancel"}}}),s.default.createElement(t.DrawerForm,{size:"small",title:"自定义footer",trigger:s.default.createElement(t.Button,{type:"primary"},"自定义footer"),drawerProps:{onClose:o},XFormProps:{formData:u,formMap:l,form:n},onFinish:function(){var n=e(regeneratorRuntime.mark((function n(s){return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return console.log(s,"values"),n.next=3,a(2e3);case 3:return t.message.success("提交成功"),n.abrupt("return",!0);case 5:case"end":return n.stop()}}),n)})));return function(s){return n.apply(this,arguments)}}(),submitter:{buttonConfig:{submitText:"提交",resetText:"关闭"},render:function(n,a){n.submit;var o=n.reset;n.form;return[s.default.createElement(t.Button,{key:"reset",onClick:function(){o()}},"重置")].concat(p(a))}}}),s.default.createElement(t.DrawerForm,{size:"small",title:"隐藏footer",trigger:s.default.createElement(t.Button,{type:"primary"},"隐藏footer"),drawerProps:{onClose:o},XFormProps:{formData:u,formMap:l,form:n},onFinish:function(){var n=e(regeneratorRuntime.mark((function n(s){return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return console.log(s,"values"),n.next=3,a(2e3);case 3:return t.message.success("提交成功"),n.abrupt("return",!0);case 5:case"end":return n.stop()}}),n)})));return function(s){return n.apply(this,arguments)}}(),submitter:!1}),s.default.createElement(t.DrawerForm,{size:"small",title:"按钮位置",trigger:s.default.createElement(t.Button,{type:"primary"},"按钮位置"),drawerProps:{onClose:o},XFormProps:{formData:u,formMap:l,form:n},onFinish:function(){var n=e(regeneratorRuntime.mark((function n(s){return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return console.log(s,"values"),n.next=3,a(2e3);case 3:return t.message.success("提交成功"),n.abrupt("return",!0);case 5:case"end":return n.stop()}}),n)})));return function(s){return n.apply(this,arguments)}}(),submitterPosition:"left"}))};return s.default.createElement(k,null)}}},5234:function(n,s,a){n.exports={content:[],meta:{order:2,title:"XForm",filename:"components/extend/drawer-form/demo/xform.md",id:"components-extend-drawer-form-demo-xform"},toc:["ul"],highlightedCode:["pre",{lang:"tsx",highlighted:'import React<span class="token punctuation">,</span> { useState } from <span class="token string">\'react\'</span>\nimport { Button<span class="token punctuation">,</span> Form<span class="token punctuation">,</span> Space<span class="token punctuation">,</span> message<span class="token punctuation">,</span> DatePicker<span class="token punctuation">,</span> DrawerForm } from <span class="token string">"../../../index.tsx"</span><span class="token comment" spellcheck="true">;</span>\nimport { FormItemType } from <span class="token string">"../../x-form"</span><span class="token comment" spellcheck="true">;</span>\n<span class="token keyword">const</span> Demo <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>form<span class="token punctuation">]</span> <span class="token operator">=</span> Form<span class="token punctuation">.</span><span class="token function">useForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  <span class="token keyword">const</span> waitTime <span class="token operator">=</span> <span class="token punctuation">(</span>time<span class="token punctuation">:</span> number <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n    return new <span class="token function">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n      }<span class="token punctuation">,</span> time<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  }<span class="token comment" spellcheck="true">;</span>\n\n  <span class="token keyword">const</span> onClose <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"close drawer"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  }<span class="token comment" spellcheck="true">;</span>\n\n  <span class="token keyword">const</span> formData <span class="token operator">=</span> {\n    name<span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">,</span>\n    age<span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">,</span>\n    city<span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">,</span>\n    date<span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">,</span>\n    comment<span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">,</span>\n  }<span class="token comment" spellcheck="true">;</span>\n\n  <span class="token keyword">const</span> formMap <span class="token operator">=</span> <span class="token punctuation">[</span>\n    {\n      key<span class="token punctuation">:</span> <span class="token string">"name"</span><span class="token punctuation">,</span>\n      label<span class="token punctuation">:</span> <span class="token string">"姓名"</span><span class="token punctuation">,</span>\n      rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n        {\n          required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          message<span class="token punctuation">:</span> <span class="token string">"请输入"</span><span class="token punctuation">,</span>\n        }<span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n    {\n      key<span class="token punctuation">:</span> <span class="token string">"age"</span><span class="token punctuation">,</span>\n      label<span class="token punctuation">:</span> <span class="token string">"年龄"</span><span class="token punctuation">,</span>\n      rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n        {\n          required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          message<span class="token punctuation">:</span> <span class="token string">"请输入"</span><span class="token punctuation">,</span>\n        }<span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n    {\n      key<span class="token punctuation">:</span> <span class="token string">"city"</span><span class="token punctuation">,</span>\n      label<span class="token punctuation">:</span> <span class="token string">"城市"</span><span class="token punctuation">,</span>\n      type<span class="token punctuation">:</span> FormItemType<span class="token punctuation">.</span><span class="token keyword">select</span><span class="token punctuation">,</span>\n      options<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n        {\n          value<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n          label<span class="token punctuation">:</span> <span class="token string">"北京"</span><span class="token punctuation">,</span>\n        }<span class="token punctuation">,</span>\n        {\n          value<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n          label<span class="token punctuation">:</span> <span class="token string">"南京"</span><span class="token punctuation">,</span>\n        }<span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n        {\n          required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          message<span class="token punctuation">:</span> <span class="token string">"请选择"</span><span class="token punctuation">,</span>\n        }<span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n    {\n      key<span class="token punctuation">:</span> <span class="token string">"date"</span><span class="token punctuation">,</span>\n      type<span class="token punctuation">:</span> FormItemType<span class="token punctuation">.</span>custom<span class="token punctuation">,</span>\n      customFormItem<span class="token punctuation">:</span> <span class="token punctuation">(</span>\n        <span class="token operator">&lt;</span>DatePicker placeholder<span class="token operator">=</span><span class="token string">"请选择时间"</span> format<span class="token operator">=</span><span class="token string">"YYYY-MM-DD"</span> <span class="token operator">/</span><span class="token operator">></span>\n      <span class="token punctuation">)</span><span class="token punctuation">,</span>\n      label<span class="token punctuation">:</span> <span class="token string">"日期"</span><span class="token punctuation">,</span>\n      attrs<span class="token punctuation">:</span> {\n        placeholder<span class="token punctuation">:</span> <span class="token string">"请选择日期"</span><span class="token punctuation">,</span>\n      }<span class="token punctuation">,</span>\n      rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n        {\n          required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          message<span class="token punctuation">:</span> <span class="token string">"请选择日期"</span><span class="token punctuation">,</span>\n        }<span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n    {\n      key<span class="token punctuation">:</span> <span class="token string">"comment"</span><span class="token punctuation">,</span>\n      type<span class="token punctuation">:</span> FormItemType<span class="token punctuation">.</span>textArea<span class="token punctuation">,</span>\n      attrs<span class="token punctuation">:</span> {\n        placeholder<span class="token punctuation">:</span> <span class="token string">"请输入备注"</span><span class="token punctuation">,</span>\n        maxLength<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n      }<span class="token punctuation">,</span>\n      label<span class="token punctuation">:</span> <span class="token string">"备注"</span><span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>\n\n  return <span class="token punctuation">(</span>\n    <span class="token operator">&lt;</span>Space<span class="token operator">></span>\n      <span class="token operator">&lt;</span>DrawerForm\n        size<span class="token operator">=</span><span class="token string">"middle"</span>\n        title<span class="token operator">=</span><span class="token string">"多列表单"</span>\n        trigger<span class="token operator">=</span>{<span class="token operator">&lt;</span>Button type<span class="token operator">=</span><span class="token string">"primary"</span><span class="token operator">></span>多列表单布局<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>}\n        drawerProps<span class="token operator">=</span>{{\n          onClose<span class="token punctuation">,</span>\n        }}\n        XFormProps<span class="token operator">=</span>{{\n          formData<span class="token punctuation">,</span>\n          formMap<span class="token punctuation">,</span>\n          form<span class="token punctuation">,</span>\n          formItemColSpan<span class="token punctuation">:</span> <span class="token number">12</span><span class="token punctuation">,</span>\n          layout<span class="token punctuation">:</span> <span class="token string">\'vertical\'</span>\n        }}\n        onFinish<span class="token operator">=</span>{async <span class="token punctuation">(</span>values<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>values<span class="token punctuation">,</span> <span class="token string">"values"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n          await <span class="token function">waitTime</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n          message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">"提交成功"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n          return <span class="token boolean">true</span><span class="token comment" spellcheck="true">;</span>\n        }}\n      <span class="token operator">/</span><span class="token operator">></span>\n\n      <span class="token operator">&lt;</span>DrawerForm\n        size<span class="token operator">=</span><span class="token string">"middle"</span>\n        title<span class="token operator">=</span><span class="token string">"纵向表单"</span>\n        trigger<span class="token operator">=</span>{<span class="token operator">&lt;</span>Button type<span class="token operator">=</span><span class="token string">"primary"</span><span class="token operator">></span>纵向表单<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>}\n        drawerProps<span class="token operator">=</span>{{\n          onClose<span class="token punctuation">,</span>\n        }}\n        XFormProps<span class="token operator">=</span>{{\n          formData<span class="token punctuation">,</span>\n          formMap<span class="token punctuation">,</span>\n          form<span class="token punctuation">,</span>\n          layout<span class="token punctuation">:</span> <span class="token string">"vertical"</span><span class="token punctuation">,</span>\n        }}\n        onFinish<span class="token operator">=</span>{async <span class="token punctuation">(</span>values<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>values<span class="token punctuation">,</span> <span class="token string">"values"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n          await <span class="token function">waitTime</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n          message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">"提交成功"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n          return <span class="token boolean">true</span><span class="token comment" spellcheck="true">;</span>\n        }}\n      <span class="token operator">/</span><span class="token operator">></span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>Space<span class="token operator">></span>\n  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n}<span class="token comment" spellcheck="true">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token operator">&lt;</span>Demo <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span>\n  mountNode\n<span class="token punctuation">)</span>'}],highlightedCodes:{tsx:'<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Form<span class="token punctuation">,</span> Space<span class="token punctuation">,</span> message<span class="token punctuation">,</span> DatePicker<span class="token punctuation">,</span> DrawerForm <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"../../../index.tsx"</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> FormItemType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"../../x-form"</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token function-variable function">Demo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>form<span class="token punctuation">]</span> <span class="token operator">=</span> Form<span class="token punctuation">.</span><span class="token function">useForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token function-variable function">waitTime</span> <span class="token operator">=</span> <span class="token punctuation">(</span>time<span class="token operator">:</span> number <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span> time<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">onClose</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"close drawer"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> formData <span class="token operator">=</span> <span class="token punctuation">{</span>\n    name<span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>\n    age<span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>\n    city<span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>\n    date<span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>\n    comment<span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> formMap <span class="token operator">=</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      key<span class="token operator">:</span> <span class="token string">"name"</span><span class="token punctuation">,</span>\n      label<span class="token operator">:</span> <span class="token string">"姓名"</span><span class="token punctuation">,</span>\n      rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          required<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          message<span class="token operator">:</span> <span class="token string">"请输入"</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      key<span class="token operator">:</span> <span class="token string">"age"</span><span class="token punctuation">,</span>\n      label<span class="token operator">:</span> <span class="token string">"年龄"</span><span class="token punctuation">,</span>\n      rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          required<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          message<span class="token operator">:</span> <span class="token string">"请输入"</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      key<span class="token operator">:</span> <span class="token string">"city"</span><span class="token punctuation">,</span>\n      label<span class="token operator">:</span> <span class="token string">"城市"</span><span class="token punctuation">,</span>\n      type<span class="token operator">:</span> FormItemType<span class="token punctuation">.</span>select<span class="token punctuation">,</span>\n      options<span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          value<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n          label<span class="token operator">:</span> <span class="token string">"北京"</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n          value<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n          label<span class="token operator">:</span> <span class="token string">"南京"</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          required<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          message<span class="token operator">:</span> <span class="token string">"请选择"</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      key<span class="token operator">:</span> <span class="token string">"date"</span><span class="token punctuation">,</span>\n      type<span class="token operator">:</span> FormItemType<span class="token punctuation">.</span>custom<span class="token punctuation">,</span>\n      customFormItem<span class="token operator">:</span> <span class="token punctuation">(</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DatePicker</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请选择时间<span class="token punctuation">"</span></span> <span class="token attr-name">format</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>YYYY-MM-DD<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n      <span class="token punctuation">)</span><span class="token punctuation">,</span>\n      label<span class="token operator">:</span> <span class="token string">"日期"</span><span class="token punctuation">,</span>\n      attrs<span class="token operator">:</span> <span class="token punctuation">{</span>\n        placeholder<span class="token operator">:</span> <span class="token string">"请选择日期"</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          required<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          message<span class="token operator">:</span> <span class="token string">"请选择日期"</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      key<span class="token operator">:</span> <span class="token string">"comment"</span><span class="token punctuation">,</span>\n      type<span class="token operator">:</span> FormItemType<span class="token punctuation">.</span>textArea<span class="token punctuation">,</span>\n      attrs<span class="token operator">:</span> <span class="token punctuation">{</span>\n        placeholder<span class="token operator">:</span> <span class="token string">"请输入备注"</span><span class="token punctuation">,</span>\n        maxLength<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      label<span class="token operator">:</span> <span class="token string">"备注"</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Space</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DrawerForm</span></span>\n        <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>middle<span class="token punctuation">"</span></span>\n        <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>多列表单<span class="token punctuation">"</span></span>\n        <span class="token attr-name">trigger</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>多列表单布局<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">drawerProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          onClose<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">XFormProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          formData<span class="token punctuation">,</span>\n          formMap<span class="token punctuation">,</span>\n          form<span class="token punctuation">,</span>\n          formItemColSpan<span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span>\n          layout<span class="token operator">:</span> <span class="token string">\'vertical\'</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">onFinish</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">async</span> <span class="token punctuation">(</span>values<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>values<span class="token punctuation">,</span> <span class="token string">"values"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token keyword">await</span> <span class="token function">waitTime</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">"提交成功"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token punctuation">/></span></span>\n\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DrawerForm</span></span>\n        <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>middle<span class="token punctuation">"</span></span>\n        <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>纵向表单<span class="token punctuation">"</span></span>\n        <span class="token attr-name">trigger</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>纵向表单<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">drawerProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          onClose<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">XFormProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          formData<span class="token punctuation">,</span>\n          formMap<span class="token punctuation">,</span>\n          form<span class="token punctuation">,</span>\n          layout<span class="token operator">:</span> <span class="token string">"vertical"</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">onFinish</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">async</span> <span class="token punctuation">(</span>values<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>values<span class="token punctuation">,</span> <span class="token string">"values"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token keyword">await</span> <span class="token function">waitTime</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">"提交成功"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Space</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Demo</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n  mountNode\n<span class="token punctuation">)</span>',jsx:'<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Form<span class="token punctuation">,</span> Space<span class="token punctuation">,</span> message<span class="token punctuation">,</span> DatePicker<span class="token punctuation">,</span> DrawerForm <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'../../../index.tsx\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> FormItemType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'../../x-form\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">Demo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>form<span class="token punctuation">]</span> <span class="token operator">=</span> Form<span class="token punctuation">.</span><span class="token function">useForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">waitTime</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">time <span class="token operator">=</span> <span class="token number">100</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span> time<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">onClose</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'close drawer\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> formData <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">city</span><span class="token operator">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">date</span><span class="token operator">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">comment</span><span class="token operator">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> formMap <span class="token operator">=</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">\'姓名\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">\'请输入\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">\'年龄\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">\'请输入\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">\'city\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">\'城市\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">type</span><span class="token operator">:</span> FormItemType<span class="token punctuation">.</span>select<span class="token punctuation">,</span>\n      <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">\'北京\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n          <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">\'南京\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">\'请选择\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">\'date\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">type</span><span class="token operator">:</span> FormItemType<span class="token punctuation">.</span>custom<span class="token punctuation">,</span>\n      <span class="token literal-property property">customFormItem</span><span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DatePicker</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请选择时间<span class="token punctuation">"</span></span> <span class="token attr-name">format</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>YYYY-MM-DD<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n      <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">\'日期\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">attrs</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">placeholder</span><span class="token operator">:</span> <span class="token string">\'请选择日期\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">\'请选择日期\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">\'comment\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">type</span><span class="token operator">:</span> FormItemType<span class="token punctuation">.</span>textArea<span class="token punctuation">,</span>\n      <span class="token literal-property property">attrs</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">placeholder</span><span class="token operator">:</span> <span class="token string">\'请输入备注\'</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">maxLength</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">\'备注\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Space</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DrawerForm</span></span>\n        <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>middle<span class="token punctuation">"</span></span>\n        <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>多列表单<span class="token punctuation">"</span></span>\n        <span class="token attr-name">trigger</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>多列表单布局<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">drawerProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          onClose<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">XFormProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          formData<span class="token punctuation">,</span>\n          formMap<span class="token punctuation">,</span>\n          form<span class="token punctuation">,</span>\n          <span class="token literal-property property">formItemColSpan</span><span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">layout</span><span class="token operator">:</span> <span class="token string">\'vertical\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">onFinish</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">values</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>values<span class="token punctuation">,</span> <span class="token string">\'values\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token keyword">await</span> <span class="token function">waitTime</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">\'提交成功\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token punctuation">/></span></span>\n\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DrawerForm</span></span>\n        <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>middle<span class="token punctuation">"</span></span>\n        <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>纵向表单<span class="token punctuation">"</span></span>\n        <span class="token attr-name">trigger</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>纵向表单<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">drawerProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          onClose<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">XFormProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          formData<span class="token punctuation">,</span>\n          formMap<span class="token punctuation">,</span>\n          form<span class="token punctuation">,</span>\n          <span class="token literal-property property">layout</span><span class="token operator">:</span> <span class="token string">\'vertical\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">onFinish</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">values</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>values<span class="token punctuation">,</span> <span class="token string">\'values\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token keyword">await</span> <span class="token function">waitTime</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">\'提交成功\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Space</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Demo</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>\n'},preview:function(){a(0),a(35);var n,s=(n=a(0))&&n.__esModule?n:{default:n},t=a(96),p=a(324);function o(n,s,a,t,p,o,e){try{var c=n[o](e),u=c.value}catch(n){return void a(n)}c.done?s(u):Promise.resolve(u).then(t,p)}function e(n){return function(){var s=this,a=arguments;return new Promise((function(t,p){var e=n.apply(s,a);function c(n){o(e,t,p,c,u,"next",n)}function u(n){o(e,t,p,c,u,"throw",n)}c(void 0)}))}}function c(n,s){return function(n){if(Array.isArray(n))return n}(n)||function(n,s){var a=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null==a)return;var t,p,o=[],e=!0,c=!1;try{for(a=a.call(n);!(e=(t=a.next()).done)&&(o.push(t.value),!s||o.length!==s);e=!0);}catch(n){c=!0,p=n}finally{try{e||null==a.return||a.return()}finally{if(c)throw p}}return o}(n,s)||function(n,s){if(!n)return;if("string"==typeof n)return u(n,s);var a=Object.prototype.toString.call(n).slice(8,-1);"Object"===a&&n.constructor&&(a=n.constructor.name);if("Map"===a||"Set"===a)return Array.from(n);if("Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a))return u(n,s)}(n,s)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function u(n,s){(null==s||s>n.length)&&(s=n.length);for(var a=0,t=new Array(s);a<s;a++)t[a]=n[a];return t}var l=function(){var n=c(t.Form.useForm(),1)[0],a=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:100;return new Promise((function(s){setTimeout((function(){s(!0)}),n)}))},o=function(){console.log("close drawer")},u={name:"",age:"",city:"",date:"",comment:""},l=[{key:"name",label:"姓名",rules:[{required:!0,message:"请输入"}]},{key:"age",label:"年龄",rules:[{required:!0,message:"请输入"}]},{key:"city",label:"城市",type:p.FormItemType.select,options:[{value:1,label:"北京"},{value:2,label:"南京"}],rules:[{required:!0,message:"请选择"}]},{key:"date",type:p.FormItemType.custom,customFormItem:s.default.createElement(t.DatePicker,{placeholder:"请选择时间",format:"YYYY-MM-DD"}),label:"日期",attrs:{placeholder:"请选择日期"},rules:[{required:!0,message:"请选择日期"}]},{key:"comment",type:p.FormItemType.textArea,attrs:{placeholder:"请输入备注",maxLength:10},label:"备注"}];return s.default.createElement(t.Space,null,s.default.createElement(t.DrawerForm,{size:"middle",title:"多列表单",trigger:s.default.createElement(t.Button,{type:"primary"},"多列表单布局"),drawerProps:{onClose:o},XFormProps:{formData:u,formMap:l,form:n,formItemColSpan:12,layout:"vertical"},onFinish:function(){var n=e(regeneratorRuntime.mark((function n(s){return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return console.log(s,"values"),n.next=3,a(2e3);case 3:return t.message.success("提交成功"),n.abrupt("return",!0);case 5:case"end":return n.stop()}}),n)})));return function(s){return n.apply(this,arguments)}}()}),s.default.createElement(t.DrawerForm,{size:"middle",title:"纵向表单",trigger:s.default.createElement(t.Button,{type:"primary"},"纵向表单"),drawerProps:{onClose:o},XFormProps:{formData:u,formMap:l,form:n,layout:"vertical"},onFinish:function(){var n=e(regeneratorRuntime.mark((function n(s){return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return console.log(s,"values"),n.next=3,a(2e3);case 3:return t.message.success("提交成功"),n.abrupt("return",!0);case 5:case"end":return n.stop()}}),n)})));return function(s){return n.apply(this,arguments)}}()}))};return s.default.createElement(l,null)}}}}]);