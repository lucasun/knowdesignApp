(window.webpackJsonp=window.webpackJsonp||[]).push([[191],{4172:function(n,s,a){n.exports={line:a(5254),noData:a(5256),pie:a(5257)}},5254:function(n,s,a){n.exports={content:[],meta:{order:0,title:"折线图",filename:"components/extend/single-chart/demo/line.md",id:"components-extend-single-chart-demo-line"},toc:["ul"],highlightedCode:["pre",{lang:"tsx",highlighted:'<span class="token operator">/</span><span class="token operator">/</span> import React<span class="token punctuation">,</span> { useState<span class="token punctuation">,</span> useEffect<span class="token punctuation">,</span> useRef } from <span class="token string">"react"</span><span class="token comment" spellcheck="true">;</span>\n<span class="token operator">/</span><span class="token operator">/</span> import { SingleChart<span class="token punctuation">,</span> Utils } from <span class="token string">"knowdesign"</span><span class="token comment" spellcheck="true">;</span>\n<span class="token operator">/</span><span class="token operator">/</span> <span class="token keyword">const</span> { EventBus } <span class="token operator">=</span> Utils<span class="token comment" spellcheck="true">;</span>\n<span class="token operator">/</span><span class="token operator">/</span> <span class="token keyword">const</span> Demo <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n<span class="token operator">/</span><span class="token operator">/</span>   <span class="token keyword">const</span> <span class="token punctuation">[</span>option<span class="token punctuation">,</span> setOption<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>any<span class="token operator">></span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n<span class="token operator">/</span><span class="token operator">/</span>   <span class="token keyword">const</span> <span class="token punctuation">[</span>loading<span class="token punctuation">,</span> setLoading<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>boolean<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n<span class="token operator">/</span><span class="token operator">/</span>   <span class="token keyword">const</span> eventBus <span class="token operator">=</span> new <span class="token function">EventBus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n<span class="token operator">/</span><span class="token operator">/</span>   <span class="token keyword">const</span> ref <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n<span class="token operator">/</span><span class="token operator">/</span>   <span class="token keyword">const</span> queryChartData <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> any <span class="token operator">=</span><span class="token operator">></span> {\n<span class="token operator">/</span><span class="token operator">/</span>     <span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>\n<span class="token operator">/</span><span class="token operator">/</span>     return new <span class="token function">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n<span class="token operator">/</span><span class="token operator">/</span>       <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n<span class="token operator">/</span><span class="token operator">/</span>         <span class="token function">resolve</span><span class="token punctuation">(</span>{\n<span class="token operator">/</span><span class="token operator">/</span>           code<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n<span class="token operator">/</span><span class="token operator">/</span>           data<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n<span class="token operator">/</span><span class="token operator">/</span>             {\n<span class="token operator">/</span><span class="token operator">/</span>               week<span class="token punctuation">:</span> <span class="token string">"Mon"</span><span class="token punctuation">,</span>\n<span class="token operator">/</span><span class="token operator">/</span>               value<span class="token punctuation">:</span> <span class="token number">700</span><span class="token punctuation">,</span>\n<span class="token operator">/</span><span class="token operator">/</span>             }<span class="token punctuation">,</span>\n<span class="token operator">/</span><span class="token operator">/</span>             {\n<span class="token operator">/</span><span class="token operator">/</span>               week<span class="token punctuation">:</span> <span class="token string">"Tue"</span><span class="token punctuation">,</span>\n<span class="token operator">/</span><span class="token operator">/</span>               value<span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">,</span>\n<span class="token operator">/</span><span class="token operator">/</span>             }<span class="token punctuation">,</span>\n<span class="token operator">/</span><span class="token operator">/</span>             {\n<span class="token operator">/</span><span class="token operator">/</span>               week<span class="token punctuation">:</span> <span class="token string">"Wed"</span><span class="token punctuation">,</span>\n<span class="token operator">/</span><span class="token operator">/</span>               value<span class="token punctuation">:</span> <span class="token number">400</span><span class="token punctuation">,</span>\n<span class="token operator">/</span><span class="token operator">/</span>             }<span class="token punctuation">,</span>\n<span class="token operator">/</span><span class="token operator">/</span>             {\n<span class="token operator">/</span><span class="token operator">/</span>               week<span class="token punctuation">:</span> <span class="token string">"Thu"</span><span class="token punctuation">,</span>\n<span class="token operator">/</span><span class="token operator">/</span>               value<span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">,</span>\n<span class="token operator">/</span><span class="token operator">/</span>             }<span class="token punctuation">,</span>\n<span class="token operator">/</span><span class="token operator">/</span>             {\n<span class="token operator">/</span><span class="token operator">/</span>               week<span class="token punctuation">:</span> <span class="token string">"Fri"</span><span class="token punctuation">,</span>\n<span class="token operator">/</span><span class="token operator">/</span>               value<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n<span class="token operator">/</span><span class="token operator">/</span>             }<span class="token punctuation">,</span>\n<span class="token operator">/</span><span class="token operator">/</span>             {\n<span class="token operator">/</span><span class="token operator">/</span>               week<span class="token punctuation">:</span> <span class="token string">"Sat"</span><span class="token punctuation">,</span>\n<span class="token operator">/</span><span class="token operator">/</span>               value<span class="token punctuation">:</span> <span class="token number">280</span><span class="token punctuation">,</span>\n<span class="token operator">/</span><span class="token operator">/</span>             }<span class="token punctuation">,</span>\n<span class="token operator">/</span><span class="token operator">/</span>             {\n<span class="token operator">/</span><span class="token operator">/</span>               week<span class="token punctuation">:</span> <span class="token string">"Sun"</span><span class="token punctuation">,</span>\n<span class="token operator">/</span><span class="token operator">/</span>               value<span class="token punctuation">:</span> <span class="token number">120</span><span class="token punctuation">,</span>\n<span class="token operator">/</span><span class="token operator">/</span>             }<span class="token punctuation">,</span>\n<span class="token operator">/</span><span class="token operator">/</span>           <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token operator">/</span><span class="token operator">/</span>         }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n<span class="token operator">/</span><span class="token operator">/</span>         <span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>\n<span class="token operator">/</span><span class="token operator">/</span>       }<span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n<span class="token operator">/</span><span class="token operator">/</span>     }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n<span class="token operator">/</span><span class="token operator">/</span>   }<span class="token comment" spellcheck="true">;</span>\n\n<span class="token operator">/</span><span class="token operator">/</span>   <span class="token keyword">const</span> getChartOpion <span class="token operator">=</span> async <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n<span class="token operator">/</span><span class="token operator">/</span>     <span class="token keyword">const</span> { data } <span class="token operator">=</span> await <span class="token function">queryChartData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n<span class="token operator">/</span><span class="token operator">/</span>     <span class="token function">setOption</span><span class="token punctuation">(</span>{\n<span class="token operator">/</span><span class="token operator">/</span>       title<span class="token punctuation">:</span> {\n<span class="token operator">/</span><span class="token operator">/</span>         text<span class="token punctuation">:</span> <span class="token string">"Line Demo"</span><span class="token punctuation">,</span>\n<span class="token operator">/</span><span class="token operator">/</span>       }<span class="token punctuation">,</span>\n<span class="token operator">/</span><span class="token operator">/</span>       tooltip<span class="token punctuation">:</span> {\n<span class="token operator">/</span><span class="token operator">/</span>         trigger<span class="token punctuation">:</span> <span class="token string">"axis"</span><span class="token punctuation">,</span>\n<span class="token operator">/</span><span class="token operator">/</span>       }<span class="token punctuation">,</span>\n<span class="token operator">/</span><span class="token operator">/</span>       legend<span class="token punctuation">:</span> {\n<span class="token operator">/</span><span class="token operator">/</span>         data<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'Email\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token operator">/</span><span class="token operator">/</span>       }<span class="token punctuation">,</span>\n<span class="token operator">/</span><span class="token operator">/</span>       xAxis<span class="token punctuation">:</span> {\n<span class="token operator">/</span><span class="token operator">/</span>         type<span class="token punctuation">:</span> <span class="token string">"category"</span><span class="token punctuation">,</span>\n<span class="token operator">/</span><span class="token operator">/</span>         boundaryGap<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n<span class="token operator">/</span><span class="token operator">/</span>         data<span class="token punctuation">:</span> data<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> item<span class="token punctuation">.</span>week<span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token operator">/</span><span class="token operator">/</span>       }<span class="token punctuation">,</span>\n<span class="token operator">/</span><span class="token operator">/</span>       yAxis<span class="token punctuation">:</span> {\n<span class="token operator">/</span><span class="token operator">/</span>         type<span class="token punctuation">:</span> <span class="token string">"value"</span><span class="token punctuation">,</span>\n<span class="token operator">/</span><span class="token operator">/</span>       }<span class="token punctuation">,</span>\n<span class="token operator">/</span><span class="token operator">/</span>       series<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n<span class="token operator">/</span><span class="token operator">/</span>         {\n<span class="token operator">/</span><span class="token operator">/</span>           name<span class="token punctuation">:</span> <span class="token string">"Email"</span><span class="token punctuation">,</span>\n<span class="token operator">/</span><span class="token operator">/</span>           type<span class="token punctuation">:</span> <span class="token string">"line"</span><span class="token punctuation">,</span>\n<span class="token operator">/</span><span class="token operator">/</span>           data<span class="token punctuation">:</span> data<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> item<span class="token punctuation">.</span>value<span class="token punctuation">)</span>\n<span class="token operator">/</span><span class="token operator">/</span>         }<span class="token punctuation">,</span>\n<span class="token operator">/</span><span class="token operator">/</span>       <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token operator">/</span><span class="token operator">/</span>     }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n<span class="token operator">/</span><span class="token operator">/</span>   }<span class="token comment" spellcheck="true">;</span>\n<span class="token operator">/</span><span class="token operator">/</span>   <span class="token keyword">const</span> updateAxisPointer <span class="token operator">=</span> <span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n<span class="token operator">/</span><span class="token operator">/</span>     <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n<span class="token operator">/</span><span class="token operator">/</span>           console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ref<span class="token punctuation">,</span> <span class="token string">\'ref\'</span><span class="token punctuation">)</span>\n<span class="token operator">/</span><span class="token operator">/</span>     }<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>\n<span class="token operator">/</span><span class="token operator">/</span>   }<span class="token comment" spellcheck="true">;</span>\n\n\n<span class="token operator">/</span><span class="token operator">/</span>   <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n<span class="token operator">/</span><span class="token operator">/</span>     <span class="token function">getChartOpion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n<span class="token operator">/</span><span class="token operator">/</span>   }<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n<span class="token operator">/</span><span class="token operator">/</span>   return <span class="token punctuation">(</span>\n<span class="token operator">/</span><span class="token operator">/</span>     <span class="token operator">&lt;></span>\n<span class="token operator">/</span><span class="token operator">/</span>       <span class="token operator">&lt;</span>SingleChart\n<span class="token operator">/</span><span class="token operator">/</span>         loading<span class="token operator">=</span>{loading}\n<span class="token operator">/</span><span class="token operator">/</span>         wrapStyle<span class="token operator">=</span>{{\n<span class="token operator">/</span><span class="token operator">/</span>           width<span class="token punctuation">:</span> <span class="token string">"auto"</span><span class="token punctuation">,</span>\n<span class="token operator">/</span><span class="token operator">/</span>           height<span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">,</span>\n<span class="token operator">/</span><span class="token operator">/</span>         }}\n<span class="token operator">/</span><span class="token operator">/</span>         option<span class="token operator">=</span>{option}\n<span class="token operator">/</span><span class="token operator">/</span>         onEvents<span class="token operator">=</span>{{\n<span class="token operator">/</span><span class="token operator">/</span>           <span class="token string">\'updateAxisPointer\'</span><span class="token punctuation">:</span> updateAxisPointer\n<span class="token operator">/</span><span class="token operator">/</span>         }}\n<span class="token operator">/</span><span class="token operator">/</span>       <span class="token operator">/</span><span class="token operator">></span>\n<span class="token operator">/</span><span class="token operator">/</span>       <span class="token operator">&lt;</span>SingleChart\n<span class="token operator">/</span><span class="token operator">/</span>         ref<span class="token operator">=</span>{ref}\n<span class="token operator">/</span><span class="token operator">/</span>         loading<span class="token operator">=</span>{loading}\n<span class="token operator">/</span><span class="token operator">/</span>         wrapStyle<span class="token operator">=</span>{{\n<span class="token operator">/</span><span class="token operator">/</span>           width<span class="token punctuation">:</span> <span class="token string">"auto"</span><span class="token punctuation">,</span>\n<span class="token operator">/</span><span class="token operator">/</span>           height<span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">,</span>\n<span class="token operator">/</span><span class="token operator">/</span>         }}\n<span class="token operator">/</span><span class="token operator">/</span>         option<span class="token operator">=</span>{option}\n<span class="token operator">/</span><span class="token operator">/</span>         onEvents<span class="token operator">=</span>{{\n<span class="token operator">/</span><span class="token operator">/</span>           <span class="token string">\'updateAxisPointer\'</span><span class="token punctuation">:</span> updateAxisPointer\n<span class="token operator">/</span><span class="token operator">/</span>         }}\n<span class="token operator">/</span><span class="token operator">/</span>       <span class="token operator">/</span><span class="token operator">></span>\n<span class="token operator">/</span><span class="token operator">/</span>     <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">></span>\n<span class="token operator">/</span><span class="token operator">/</span>   <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n<span class="token operator">/</span><span class="token operator">/</span> }<span class="token comment" spellcheck="true">;</span>\n\nimport Demo from <span class="token string">\'../lineDemo.tsx\'</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token operator">&lt;</span>Demo <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span>\n  mountNode\n<span class="token punctuation">)</span>'}],highlightedCodes:{tsx:'<span class="token comment">// import React, { useState, useEffect, useRef } from "react";</span>\n<span class="token comment">// import { SingleChart, Utils } from "knowdesign";</span>\n<span class="token comment">// const { EventBus } = Utils;</span>\n<span class="token comment">// const Demo = () => {</span>\n<span class="token comment">//   const [option, setOption] = useState&lt;any>(null);</span>\n<span class="token comment">//   const [loading, setLoading] = useState&lt;boolean>();</span>\n<span class="token comment">//   const eventBus = new EventBus();</span>\n<span class="token comment">//   const ref = useRef(null);</span>\n\n<span class="token comment">//   const queryChartData = (): any => {</span>\n<span class="token comment">//     setLoading(true)</span>\n<span class="token comment">//     return new Promise((resolve) => {</span>\n<span class="token comment">//       setTimeout(() => {</span>\n<span class="token comment">//         resolve({</span>\n<span class="token comment">//           code: 0,</span>\n<span class="token comment">//           data: [</span>\n<span class="token comment">//             {</span>\n<span class="token comment">//               week: "Mon",</span>\n<span class="token comment">//               value: 700,</span>\n<span class="token comment">//             },</span>\n<span class="token comment">//             {</span>\n<span class="token comment">//               week: "Tue",</span>\n<span class="token comment">//               value: 200,</span>\n<span class="token comment">//             },</span>\n<span class="token comment">//             {</span>\n<span class="token comment">//               week: "Wed",</span>\n<span class="token comment">//               value: 400,</span>\n<span class="token comment">//             },</span>\n<span class="token comment">//             {</span>\n<span class="token comment">//               week: "Thu",</span>\n<span class="token comment">//               value: 200,</span>\n<span class="token comment">//             },</span>\n<span class="token comment">//             {</span>\n<span class="token comment">//               week: "Fri",</span>\n<span class="token comment">//               value: 100,</span>\n<span class="token comment">//             },</span>\n<span class="token comment">//             {</span>\n<span class="token comment">//               week: "Sat",</span>\n<span class="token comment">//               value: 280,</span>\n<span class="token comment">//             },</span>\n<span class="token comment">//             {</span>\n<span class="token comment">//               week: "Sun",</span>\n<span class="token comment">//               value: 120,</span>\n<span class="token comment">//             },</span>\n<span class="token comment">//           ],</span>\n<span class="token comment">//         });</span>\n<span class="token comment">//         setLoading(false)</span>\n<span class="token comment">//       }, 3000);</span>\n<span class="token comment">//     });</span>\n<span class="token comment">//   };</span>\n\n<span class="token comment">//   const getChartOpion = async () => {</span>\n<span class="token comment">//     const { data } = await queryChartData();</span>\n<span class="token comment">//     setOption({</span>\n<span class="token comment">//       title: {</span>\n<span class="token comment">//         text: "Line Demo",</span>\n<span class="token comment">//       },</span>\n<span class="token comment">//       tooltip: {</span>\n<span class="token comment">//         trigger: "axis",</span>\n<span class="token comment">//       },</span>\n<span class="token comment">//       legend: {</span>\n<span class="token comment">//         data: [\'Email\'],</span>\n<span class="token comment">//       },</span>\n<span class="token comment">//       xAxis: {</span>\n<span class="token comment">//         type: "category",</span>\n<span class="token comment">//         boundaryGap: false,</span>\n<span class="token comment">//         data: data?.map((item) => item.week),</span>\n<span class="token comment">//       },</span>\n<span class="token comment">//       yAxis: {</span>\n<span class="token comment">//         type: "value",</span>\n<span class="token comment">//       },</span>\n<span class="token comment">//       series: [</span>\n<span class="token comment">//         {</span>\n<span class="token comment">//           name: "Email",</span>\n<span class="token comment">//           type: "line",</span>\n<span class="token comment">//           data: data?.map((item) => item.value)</span>\n<span class="token comment">//         },</span>\n<span class="token comment">//       ],</span>\n<span class="token comment">//     });</span>\n<span class="token comment">//   };</span>\n<span class="token comment">//   const updateAxisPointer = (event) => {</span>\n<span class="token comment">//     setTimeout(() => {</span>\n<span class="token comment">//           console.log(ref, \'ref\')</span>\n<span class="token comment">//     }, 0)</span>\n<span class="token comment">//   };</span>\n\n\n<span class="token comment">//   useEffect(() => {</span>\n<span class="token comment">//     getChartOpion();</span>\n<span class="token comment">//   }, []);</span>\n<span class="token comment">//   return (</span>\n<span class="token comment">//     &lt;></span>\n<span class="token comment">//       &lt;SingleChart</span>\n<span class="token comment">//         loading={loading}</span>\n<span class="token comment">//         wrapStyle={{</span>\n<span class="token comment">//           width: "auto",</span>\n<span class="token comment">//           height: 300,</span>\n<span class="token comment">//         }}</span>\n<span class="token comment">//         option={option}</span>\n<span class="token comment">//         onEvents={{</span>\n<span class="token comment">//           \'updateAxisPointer\': updateAxisPointer</span>\n<span class="token comment">//         }}</span>\n<span class="token comment">//       /></span>\n<span class="token comment">//       &lt;SingleChart</span>\n<span class="token comment">//         ref={ref}</span>\n<span class="token comment">//         loading={loading}</span>\n<span class="token comment">//         wrapStyle={{</span>\n<span class="token comment">//           width: "auto",</span>\n<span class="token comment">//           height: 300,</span>\n<span class="token comment">//         }}</span>\n<span class="token comment">//         option={option}</span>\n<span class="token comment">//         onEvents={{</span>\n<span class="token comment">//           \'updateAxisPointer\': updateAxisPointer</span>\n<span class="token comment">//         }}</span>\n<span class="token comment">//       /></span>\n<span class="token comment">//     &lt;/></span>\n<span class="token comment">//   );</span>\n<span class="token comment">// };</span>\n\n<span class="token keyword">import</span> Demo <span class="token keyword">from</span> <span class="token string">\'../lineDemo.tsx\'</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Demo</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n  mountNode\n<span class="token punctuation">)</span>',jsx:'<span class="token comment">// import React, { useState, useEffect, useRef } from "react";</span>\n<span class="token comment">// import { SingleChart, Utils } from "knowdesign";</span>\n<span class="token comment">// const { EventBus } = Utils;</span>\n<span class="token comment">// const Demo = () => {</span>\n<span class="token comment">//   const [option, setOption] = useState&lt;any>(null);</span>\n<span class="token comment">//   const [loading, setLoading] = useState&lt;boolean>();</span>\n<span class="token comment">//   const eventBus = new EventBus();</span>\n<span class="token comment">//   const ref = useRef(null);</span>\n<span class="token comment">//   const queryChartData = (): any => {</span>\n<span class="token comment">//     setLoading(true)</span>\n<span class="token comment">//     return new Promise((resolve) => {</span>\n<span class="token comment">//       setTimeout(() => {</span>\n<span class="token comment">//         resolve({</span>\n<span class="token comment">//           code: 0,</span>\n<span class="token comment">//           data: [</span>\n<span class="token comment">//             {</span>\n<span class="token comment">//               week: "Mon",</span>\n<span class="token comment">//               value: 700,</span>\n<span class="token comment">//             },</span>\n<span class="token comment">//             {</span>\n<span class="token comment">//               week: "Tue",</span>\n<span class="token comment">//               value: 200,</span>\n<span class="token comment">//             },</span>\n<span class="token comment">//             {</span>\n<span class="token comment">//               week: "Wed",</span>\n<span class="token comment">//               value: 400,</span>\n<span class="token comment">//             },</span>\n<span class="token comment">//             {</span>\n<span class="token comment">//               week: "Thu",</span>\n<span class="token comment">//               value: 200,</span>\n<span class="token comment">//             },</span>\n<span class="token comment">//             {</span>\n<span class="token comment">//               week: "Fri",</span>\n<span class="token comment">//               value: 100,</span>\n<span class="token comment">//             },</span>\n<span class="token comment">//             {</span>\n<span class="token comment">//               week: "Sat",</span>\n<span class="token comment">//               value: 280,</span>\n<span class="token comment">//             },</span>\n<span class="token comment">//             {</span>\n<span class="token comment">//               week: "Sun",</span>\n<span class="token comment">//               value: 120,</span>\n<span class="token comment">//             },</span>\n<span class="token comment">//           ],</span>\n<span class="token comment">//         });</span>\n<span class="token comment">//         setLoading(false)</span>\n<span class="token comment">//       }, 3000);</span>\n<span class="token comment">//     });</span>\n<span class="token comment">//   };</span>\n<span class="token comment">//   const getChartOpion = async () => {</span>\n<span class="token comment">//     const { data } = await queryChartData();</span>\n<span class="token comment">//     setOption({</span>\n<span class="token comment">//       title: {</span>\n<span class="token comment">//         text: "Line Demo",</span>\n<span class="token comment">//       },</span>\n<span class="token comment">//       tooltip: {</span>\n<span class="token comment">//         trigger: "axis",</span>\n<span class="token comment">//       },</span>\n<span class="token comment">//       legend: {</span>\n<span class="token comment">//         data: [\'Email\'],</span>\n<span class="token comment">//       },</span>\n<span class="token comment">//       xAxis: {</span>\n<span class="token comment">//         type: "category",</span>\n<span class="token comment">//         boundaryGap: false,</span>\n<span class="token comment">//         data: data?.map((item) => item.week),</span>\n<span class="token comment">//       },</span>\n<span class="token comment">//       yAxis: {</span>\n<span class="token comment">//         type: "value",</span>\n<span class="token comment">//       },</span>\n<span class="token comment">//       series: [</span>\n<span class="token comment">//         {</span>\n<span class="token comment">//           name: "Email",</span>\n<span class="token comment">//           type: "line",</span>\n<span class="token comment">//           data: data?.map((item) => item.value)</span>\n<span class="token comment">//         },</span>\n<span class="token comment">//       ],</span>\n<span class="token comment">//     });</span>\n<span class="token comment">//   };</span>\n<span class="token comment">//   const updateAxisPointer = (event) => {</span>\n<span class="token comment">//     setTimeout(() => {</span>\n<span class="token comment">//           console.log(ref, \'ref\')</span>\n<span class="token comment">//     }, 0)</span>\n<span class="token comment">//   };</span>\n<span class="token comment">//   useEffect(() => {</span>\n<span class="token comment">//     getChartOpion();</span>\n<span class="token comment">//   }, []);</span>\n<span class="token comment">//   return (</span>\n<span class="token comment">//     &lt;></span>\n<span class="token comment">//       &lt;SingleChart</span>\n<span class="token comment">//         loading={loading}</span>\n<span class="token comment">//         wrapStyle={{</span>\n<span class="token comment">//           width: "auto",</span>\n<span class="token comment">//           height: 300,</span>\n<span class="token comment">//         }}</span>\n<span class="token comment">//         option={option}</span>\n<span class="token comment">//         onEvents={{</span>\n<span class="token comment">//           \'updateAxisPointer\': updateAxisPointer</span>\n<span class="token comment">//         }}</span>\n<span class="token comment">//       /></span>\n<span class="token comment">//       &lt;SingleChart</span>\n<span class="token comment">//         ref={ref}</span>\n<span class="token comment">//         loading={loading}</span>\n<span class="token comment">//         wrapStyle={{</span>\n<span class="token comment">//           width: "auto",</span>\n<span class="token comment">//           height: 300,</span>\n<span class="token comment">//         }}</span>\n<span class="token comment">//         option={option}</span>\n<span class="token comment">//         onEvents={{</span>\n<span class="token comment">//           \'updateAxisPointer\': updateAxisPointer</span>\n<span class="token comment">//         }}</span>\n<span class="token comment">//       /></span>\n<span class="token comment">//     &lt;/></span>\n<span class="token comment">//   );</span>\n<span class="token comment">// };</span>\n<span class="token keyword">import</span> Demo <span class="token keyword">from</span> <span class="token string">\'../lineDemo.tsx\'</span><span class="token punctuation">;</span>\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Demo</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>\n'},preview:function(){var n,s=a(0),t=(a(35),(n=a(5255))&&n.__esModule?n:{default:n});return s.createElement(t.default,null)}}},5255:function(n,s,a){"use strict";a.r(s);var t=a(0),p=a.n(t),o=a(152),e=a(763),c=a(113),l=a(188),u=a(503),r=a(1146);function k(n,s){return function(n){if(Array.isArray(n))return n}(n)||function(n,s){var a=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null==a)return;var t,p,o=[],e=!0,c=!1;try{for(a=a.call(n);!(e=(t=a.next()).done)&&(o.push(t.value),!s||o.length!==s);e=!0);}catch(n){c=!0,p=n}finally{try{e||null==a.return||a.return()}finally{if(c)throw p}}return o}(n,s)||function(n,s){if(!n)return;if("string"==typeof n)return i(n,s);var a=Object.prototype.toString.call(n).slice(8,-1);"Object"===a&&n.constructor&&(a=n.constructor.name);if("Map"===a||"Set"===a)return Array.from(n);if("Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a))return i(n,s)}(n,s)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function i(n,s){(null==s||s>n.length)&&(s=n.length);for(var a=0,t=new Array(s);a<s;a++)t[a]=n[a];return t}var m=new(0,a(60).Utils.EventBus);o.a.Option;s.default=function(){var n=k(Object(t.useState)(1),2),s=n[0],a=n[1],o={tooltip:{trigger:"axis"},legend:{data:["Email"]},xAxis:{type:"category",boundaryGap:!1},yAxis:{type:"value"},series:[{name:"Email",type:"line"}]},i=k(Object(t.useState)({time:1}),2);i[0],i[1];return p.a.useEffect((function(){m.emit("chartReload",{time:s})}),[]),p.a.createElement("div",null,p.a.createElement(e.b,null,p.a.createElement(c.a,{onClick:function(){m.emit("chartReload",{time:s})}},"刷新"),p.a.createElement(l.a.Group,{defaultValue:s,buttonStyle:"solid",onChange:function(n){a(n.target.value),m.emit("chartReload",{time:n.target.value})}},p.a.createElement(l.a.Button,{value:1},"近15分钟"),p.a.createElement(l.a.Button,{value:2},"近一小时"),p.a.createElement(l.a.Button,{value:3},"近一天"))),p.a.createElement(u.default,{gutter:10,grid:12},p.a.createElement(r.a,{title:"测试001",wrapStyle:{width:"auto",height:300},showLargeChart:!0,eventBus:m,connectEventName:"conenctLine",url:"/api/test",request:function(){return new Promise((function(n){setTimeout((function(){n({code:0,data:[{week:"Mon",value:(1e3*Math.random()).toFixed()},{week:"Tue",value:200},{week:"Wed",value:400},{week:"Thu",value:200},{week:"Fri",value:100},{week:"Sat",value:280},{week:"Sun",value:120}]})}),2e3)}))},resCallback:function(n){return n.data},xAxisCallback:function(n){return null==n?void 0:n.map((function(n){return n.week}))},option:o}),p.a.createElement(r.a,{title:"测试002",wrapStyle:{width:"auto",height:300},showLargeChart:!0,eventBus:m,url:"/api/test",connectEventName:"conenctLine",request:function(n,s){return new Promise((function(n){setTimeout((function(){n({code:0,data:[{week:"Mon",value:(1e3*Math.random()).toFixed()},{week:"Tue",value:200},{week:"Wed",value:400},{week:"Thu",value:200},{week:"Fri",value:100},{week:"Sat",value:280},{week:"Sun",value:120}]})}),3e3)}))},resCallback:function(n){return n.data},xAxisCallback:function(n){return null==n?void 0:n.map((function(n){return n.week}))},option:o})))}},5256:function(n,s,a){n.exports={content:[],meta:{order:2,title:"无数据状态",filename:"components/extend/single-chart/demo/noData.md",id:"components-extend-single-chart-demo-noData"},toc:["ul"],highlightedCode:["pre",{lang:"tsx",highlighted:'import React<span class="token punctuation">,</span> { useState<span class="token punctuation">,</span> useEffect } from <span class="token string">"react"</span><span class="token comment" spellcheck="true">;</span>\nimport { SingleChart } from <span class="token string">"knowdesign"</span><span class="token comment" spellcheck="true">;</span>\n\n<span class="token keyword">const</span> Demo <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>option<span class="token punctuation">,</span> setOption<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>any<span class="token operator">></span><span class="token punctuation">(</span>{\n    title<span class="token punctuation">:</span> {\n      text<span class="token punctuation">:</span> <span class="token string">"NoData Demo"</span><span class="token punctuation">,</span>\n      left<span class="token punctuation">:</span> <span class="token string">"center"</span><span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n    tooltip<span class="token punctuation">:</span> {\n      trigger<span class="token punctuation">:</span> <span class="token string">"item"</span><span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n    legend<span class="token punctuation">:</span> {\n      orient<span class="token punctuation">:</span> <span class="token string">"vertical"</span><span class="token punctuation">,</span>\n      left<span class="token punctuation">:</span> <span class="token string">"left"</span><span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n    series<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      {\n        name<span class="token punctuation">:</span> <span class="token string">"Access From"</span><span class="token punctuation">,</span>\n        type<span class="token punctuation">:</span> <span class="token string">"pie"</span><span class="token punctuation">,</span>\n        radius<span class="token punctuation">:</span> <span class="token string">"50%"</span><span class="token punctuation">,</span>\n        emphasis<span class="token punctuation">:</span> {\n          itemStyle<span class="token punctuation">:</span> {\n            shadowBlur<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n            shadowOffsetX<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n            shadowColor<span class="token punctuation">:</span> <span class="token string">"rgba(0, 0, 0, 0.5)"</span><span class="token punctuation">,</span>\n          }<span class="token punctuation">,</span>\n        }<span class="token punctuation">,</span>\n      }<span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  <span class="token keyword">const</span> queryChartData <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> any <span class="token operator">=</span><span class="token operator">></span> {\n    return new <span class="token function">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n      }<span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  }<span class="token comment" spellcheck="true">;</span>\n\n  return <span class="token punctuation">(</span>\n    <span class="token operator">&lt;</span>SingleChart\n      url<span class="token operator">=</span><span class="token string">"/api/test"</span>\n      reqParams<span class="token operator">=</span>{{}}\n      request<span class="token operator">=</span>{queryChartData}\n      wrapStyle<span class="token operator">=</span>{{\n        width<span class="token punctuation">:</span> <span class="token string">"auto"</span><span class="token punctuation">,</span>\n        height<span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">,</span>\n      }}\n      option<span class="token operator">=</span>{option}\n    <span class="token operator">/</span><span class="token operator">></span>\n  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n}<span class="token comment" spellcheck="true">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>Demo <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>'}],highlightedCodes:{tsx:'<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> useEffect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> SingleChart <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"knowdesign"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">Demo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>option<span class="token punctuation">,</span> setOption<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>any<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token punctuation">{</span>\n      text<span class="token operator">:</span> <span class="token string">"NoData Demo"</span><span class="token punctuation">,</span>\n      left<span class="token operator">:</span> <span class="token string">"center"</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    tooltip<span class="token operator">:</span> <span class="token punctuation">{</span>\n      trigger<span class="token operator">:</span> <span class="token string">"item"</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    legend<span class="token operator">:</span> <span class="token punctuation">{</span>\n      orient<span class="token operator">:</span> <span class="token string">"vertical"</span><span class="token punctuation">,</span>\n      left<span class="token operator">:</span> <span class="token string">"left"</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    series<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        name<span class="token operator">:</span> <span class="token string">"Access From"</span><span class="token punctuation">,</span>\n        type<span class="token operator">:</span> <span class="token string">"pie"</span><span class="token punctuation">,</span>\n        radius<span class="token operator">:</span> <span class="token string">"50%"</span><span class="token punctuation">,</span>\n        emphasis<span class="token operator">:</span> <span class="token punctuation">{</span>\n          itemStyle<span class="token operator">:</span> <span class="token punctuation">{</span>\n            shadowBlur<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n            shadowOffsetX<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n            shadowColor<span class="token operator">:</span> <span class="token string">"rgba(0, 0, 0, 0.5)"</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> queryChartData <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> any <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">SingleChart</span></span>\n      <span class="token attr-name">url</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/api/test<span class="token punctuation">"</span></span>\n      <span class="token attr-name">reqParams</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token attr-name">request</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>queryChartData<span class="token punctuation">}</span></span>\n      <span class="token attr-name">wrapStyle</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n        width<span class="token operator">:</span> <span class="token string">"auto"</span><span class="token punctuation">,</span>\n        height<span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token attr-name">option</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>option<span class="token punctuation">}</span></span>\n    <span class="token punctuation">/></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Demo</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>',jsx:'<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> SingleChart <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'knowdesign\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">Demo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>option<span class="token punctuation">,</span> setOption<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">\'NoData Demo\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">left</span><span class="token operator">:</span> <span class="token string">\'center\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">tooltip</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">trigger</span><span class="token operator">:</span> <span class="token string">\'item\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">legend</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">orient</span><span class="token operator">:</span> <span class="token string">\'vertical\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">left</span><span class="token operator">:</span> <span class="token string">\'left\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">series</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'Access From\'</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'pie\'</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">radius</span><span class="token operator">:</span> <span class="token string">\'50%\'</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">emphasis</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token literal-property property">itemStyle</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token literal-property property">shadowBlur</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">shadowOffsetX</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">shadowColor</span><span class="token operator">:</span> <span class="token string">\'rgba(0, 0, 0, 0.5)\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">queryChartData</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">SingleChart</span></span>\n      <span class="token attr-name">url</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/api/test<span class="token punctuation">"</span></span>\n      <span class="token attr-name">reqParams</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token attr-name">request</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>queryChartData<span class="token punctuation">}</span></span>\n      <span class="token attr-name">wrapStyle</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">\'auto\'</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token attr-name">option</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>option<span class="token punctuation">}</span></span>\n    <span class="token punctuation">/></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Demo</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>\n'},preview:function(){a(0),a(35);function n(s){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(s)}var s=function(s,a){if(!a&&s&&s.__esModule)return s;if(null===s||"object"!==n(s)&&"function"!=typeof s)return{default:s};var t=p(a);if(t&&t.has(s))return t.get(s);var o={},e=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var c in s)if("default"!==c&&Object.prototype.hasOwnProperty.call(s,c)){var l=e?Object.getOwnPropertyDescriptor(s,c):null;l&&(l.get||l.set)?Object.defineProperty(o,c,l):o[c]=s[c]}o.default=s,t&&t.set(s,o);return o}(a(0)),t=a(96);function p(n){if("function"!=typeof WeakMap)return null;var s=new WeakMap,a=new WeakMap;return(p=function(n){return n?a:s})(n)}function o(n,s){return function(n){if(Array.isArray(n))return n}(n)||function(n,s){var a=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null==a)return;var t,p,o=[],e=!0,c=!1;try{for(a=a.call(n);!(e=(t=a.next()).done)&&(o.push(t.value),!s||o.length!==s);e=!0);}catch(n){c=!0,p=n}finally{try{e||null==a.return||a.return()}finally{if(c)throw p}}return o}(n,s)||function(n,s){if(!n)return;if("string"==typeof n)return e(n,s);var a=Object.prototype.toString.call(n).slice(8,-1);"Object"===a&&n.constructor&&(a=n.constructor.name);if("Map"===a||"Set"===a)return Array.from(n);if("Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a))return e(n,s)}(n,s)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function e(n,s){(null==s||s>n.length)&&(s=n.length);for(var a=0,t=new Array(s);a<s;a++)t[a]=n[a];return t}var c=function(){var n=o((0,s.useState)({title:{text:"NoData Demo",left:"center"},tooltip:{trigger:"item"},legend:{orient:"vertical",left:"left"},series:[{name:"Access From",type:"pie",radius:"50%",emphasis:{itemStyle:{shadowBlur:10,shadowOffsetX:0,shadowColor:"rgba(0, 0, 0, 0.5)"}}}]}),2),a=n[0];n[1];return s.default.createElement(t.SingleChart,{url:"/api/test",reqParams:{},request:function(){return new Promise((function(n){setTimeout((function(){n(null)}),3e3)}))},wrapStyle:{width:"auto",height:300},option:a})};return s.default.createElement(c,null)}}},5257:function(n,s,a){n.exports={content:[],meta:{order:1,title:"饼图",filename:"components/extend/single-chart/demo/pie.md",id:"components-extend-single-chart-demo-pie"},toc:["ul"],highlightedCode:["pre",{lang:"tsx",highlighted:'import React<span class="token punctuation">,</span> { useState<span class="token punctuation">,</span> useEffect } from <span class="token string">"react"</span><span class="token comment" spellcheck="true">;</span>\nimport { SingleChart } from <span class="token string">"knowdesign"</span><span class="token comment" spellcheck="true">;</span>\n\n<span class="token keyword">const</span> Demo <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>option<span class="token punctuation">,</span> setOption<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>any<span class="token operator">></span><span class="token punctuation">(</span>{\n    title<span class="token punctuation">:</span> {\n      text<span class="token punctuation">:</span> <span class="token string">"Pie Demo"</span><span class="token punctuation">,</span>\n      left<span class="token punctuation">:</span> <span class="token string">"center"</span><span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n    tooltip<span class="token punctuation">:</span> {\n      trigger<span class="token punctuation">:</span> <span class="token string">"item"</span><span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n    legend<span class="token punctuation">:</span> {\n      orient<span class="token punctuation">:</span> <span class="token string">"vertical"</span><span class="token punctuation">,</span>\n      left<span class="token punctuation">:</span> <span class="token string">"left"</span><span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n    series<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      {\n        name<span class="token punctuation">:</span> <span class="token string">"Access From"</span><span class="token punctuation">,</span>\n        type<span class="token punctuation">:</span> <span class="token string">"pie"</span><span class="token punctuation">,</span>\n        radius<span class="token punctuation">:</span> <span class="token string">"50%"</span><span class="token punctuation">,</span>\n        emphasis<span class="token punctuation">:</span> {\n          itemStyle<span class="token punctuation">:</span> {\n            shadowBlur<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n            shadowOffsetX<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n            shadowColor<span class="token punctuation">:</span> <span class="token string">"rgba(0, 0, 0, 0.5)"</span><span class="token punctuation">,</span>\n          }<span class="token punctuation">,</span>\n        }<span class="token punctuation">,</span>\n      }<span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n  <span class="token keyword">const</span> queryChartData <span class="token operator">=</span> <span class="token punctuation">(</span>url<span class="token punctuation">,</span> params<span class="token punctuation">)</span><span class="token punctuation">:</span> any <span class="token operator">=</span><span class="token operator">></span> {\n    return new <span class="token function">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n        <span class="token function">resolve</span><span class="token punctuation">(</span>{\n          code<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n          data<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n            { value<span class="token punctuation">:</span> <span class="token number">1048</span><span class="token punctuation">,</span> name<span class="token punctuation">:</span> <span class="token string">"Search Engine"</span> }<span class="token punctuation">,</span>\n            { value<span class="token punctuation">:</span> <span class="token number">735</span><span class="token punctuation">,</span> name<span class="token punctuation">:</span> <span class="token string">"Direct"</span> }<span class="token punctuation">,</span>\n            { value<span class="token punctuation">:</span> <span class="token number">580</span><span class="token punctuation">,</span> name<span class="token punctuation">:</span> <span class="token string">"Email"</span> }<span class="token punctuation">,</span>\n            { value<span class="token punctuation">:</span> <span class="token number">484</span><span class="token punctuation">,</span> name<span class="token punctuation">:</span> <span class="token string">"Union Ads"</span> }<span class="token punctuation">,</span>\n            { value<span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">,</span> name<span class="token punctuation">:</span> <span class="token string">"Video Ads"</span> }<span class="token punctuation">,</span>\n          <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n      }<span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  }<span class="token comment" spellcheck="true">;</span>\n\n  return <span class="token punctuation">(</span>\n    <span class="token operator">&lt;</span>SingleChart\n      url<span class="token operator">=</span><span class="token string">"/api/test"</span>\n      reqParams<span class="token operator">=</span>{{\n        name<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n        age<span class="token punctuation">:</span> <span class="token number">12</span>\n      }}\n      request<span class="token operator">=</span>{queryChartData}\n      resCallback<span class="token operator">=</span>{<span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> res<span class="token punctuation">.</span>data}\n      wrapStyle<span class="token operator">=</span>{{\n        width<span class="token punctuation">:</span> <span class="token string">"auto"</span><span class="token punctuation">,</span>\n        height<span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">,</span>\n      }}\n      option<span class="token operator">=</span>{option}\n    <span class="token operator">/</span><span class="token operator">></span>\n  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n}<span class="token comment" spellcheck="true">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>Demo <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>'}],highlightedCodes:{tsx:'<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> useEffect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> SingleChart <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"knowdesign"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">Demo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>option<span class="token punctuation">,</span> setOption<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>any<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token punctuation">{</span>\n      text<span class="token operator">:</span> <span class="token string">"Pie Demo"</span><span class="token punctuation">,</span>\n      left<span class="token operator">:</span> <span class="token string">"center"</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    tooltip<span class="token operator">:</span> <span class="token punctuation">{</span>\n      trigger<span class="token operator">:</span> <span class="token string">"item"</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    legend<span class="token operator">:</span> <span class="token punctuation">{</span>\n      orient<span class="token operator">:</span> <span class="token string">"vertical"</span><span class="token punctuation">,</span>\n      left<span class="token operator">:</span> <span class="token string">"left"</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    series<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        name<span class="token operator">:</span> <span class="token string">"Access From"</span><span class="token punctuation">,</span>\n        type<span class="token operator">:</span> <span class="token string">"pie"</span><span class="token punctuation">,</span>\n        radius<span class="token operator">:</span> <span class="token string">"50%"</span><span class="token punctuation">,</span>\n        emphasis<span class="token operator">:</span> <span class="token punctuation">{</span>\n          itemStyle<span class="token operator">:</span> <span class="token punctuation">{</span>\n            shadowBlur<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n            shadowOffsetX<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n            shadowColor<span class="token operator">:</span> <span class="token string">"rgba(0, 0, 0, 0.5)"</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> queryChartData <span class="token operator">=</span> <span class="token punctuation">(</span>url<span class="token punctuation">,</span> params<span class="token punctuation">)</span><span class="token operator">:</span> any <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n          code<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n          data<span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token punctuation">{</span> value<span class="token operator">:</span> <span class="token number">1048</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">"Search Engine"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">{</span> value<span class="token operator">:</span> <span class="token number">735</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">"Direct"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">{</span> value<span class="token operator">:</span> <span class="token number">580</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">"Email"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">{</span> value<span class="token operator">:</span> <span class="token number">484</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">"Union Ads"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">{</span> value<span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">"Video Ads"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">SingleChart</span></span>\n      <span class="token attr-name">url</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/api/test<span class="token punctuation">"</span></span>\n      <span class="token attr-name">reqParams</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n        name<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n        age<span class="token operator">:</span> <span class="token number">12</span>\n      <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token attr-name">request</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>queryChartData<span class="token punctuation">}</span></span>\n      <span class="token attr-name">resCallback</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token operator">=></span> res<span class="token punctuation">.</span>data<span class="token punctuation">}</span></span>\n      <span class="token attr-name">wrapStyle</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n        width<span class="token operator">:</span> <span class="token string">"auto"</span><span class="token punctuation">,</span>\n        height<span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token attr-name">option</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>option<span class="token punctuation">}</span></span>\n    <span class="token punctuation">/></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Demo</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>',jsx:'<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> SingleChart <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'knowdesign\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">Demo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>option<span class="token punctuation">,</span> setOption<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">\'Pie Demo\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">left</span><span class="token operator">:</span> <span class="token string">\'center\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">tooltip</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">trigger</span><span class="token operator">:</span> <span class="token string">\'item\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">legend</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">orient</span><span class="token operator">:</span> <span class="token string">\'vertical\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">left</span><span class="token operator">:</span> <span class="token string">\'left\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">series</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'Access From\'</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'pie\'</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">radius</span><span class="token operator">:</span> <span class="token string">\'50%\'</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">emphasis</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token literal-property property">itemStyle</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token literal-property property">shadowBlur</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">shadowOffsetX</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">shadowColor</span><span class="token operator">:</span> <span class="token string">\'rgba(0, 0, 0, 0.5)\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">queryChartData</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> params</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n          <span class="token literal-property property">code</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token punctuation">{</span>\n              <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">1048</span><span class="token punctuation">,</span>\n              <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'Search Engine\'</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">{</span>\n              <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">735</span><span class="token punctuation">,</span>\n              <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'Direct\'</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">{</span>\n              <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">580</span><span class="token punctuation">,</span>\n              <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'Email\'</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">{</span>\n              <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">484</span><span class="token punctuation">,</span>\n              <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'Union Ads\'</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">{</span>\n              <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span>\n              <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'Video Ads\'</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">SingleChart</span></span>\n      <span class="token attr-name">url</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/api/test<span class="token punctuation">"</span></span>\n      <span class="token attr-name">reqParams</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token attr-name">request</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>queryChartData<span class="token punctuation">}</span></span>\n      <span class="token attr-name">resCallback</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=></span> res<span class="token punctuation">.</span>data<span class="token punctuation">}</span></span>\n      <span class="token attr-name">wrapStyle</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">\'auto\'</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token attr-name">option</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>option<span class="token punctuation">}</span></span>\n    <span class="token punctuation">/></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Demo</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>\n'},preview:function(){a(0),a(35);function n(s){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(s)}var s=function(s,a){if(!a&&s&&s.__esModule)return s;if(null===s||"object"!==n(s)&&"function"!=typeof s)return{default:s};var t=p(a);if(t&&t.has(s))return t.get(s);var o={},e=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var c in s)if("default"!==c&&Object.prototype.hasOwnProperty.call(s,c)){var l=e?Object.getOwnPropertyDescriptor(s,c):null;l&&(l.get||l.set)?Object.defineProperty(o,c,l):o[c]=s[c]}o.default=s,t&&t.set(s,o);return o}(a(0)),t=a(96);function p(n){if("function"!=typeof WeakMap)return null;var s=new WeakMap,a=new WeakMap;return(p=function(n){return n?a:s})(n)}function o(n,s){return function(n){if(Array.isArray(n))return n}(n)||function(n,s){var a=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null==a)return;var t,p,o=[],e=!0,c=!1;try{for(a=a.call(n);!(e=(t=a.next()).done)&&(o.push(t.value),!s||o.length!==s);e=!0);}catch(n){c=!0,p=n}finally{try{e||null==a.return||a.return()}finally{if(c)throw p}}return o}(n,s)||function(n,s){if(!n)return;if("string"==typeof n)return e(n,s);var a=Object.prototype.toString.call(n).slice(8,-1);"Object"===a&&n.constructor&&(a=n.constructor.name);if("Map"===a||"Set"===a)return Array.from(n);if("Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a))return e(n,s)}(n,s)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function e(n,s){(null==s||s>n.length)&&(s=n.length);for(var a=0,t=new Array(s);a<s;a++)t[a]=n[a];return t}var c=function(){var n=o((0,s.useState)({title:{text:"Pie Demo",left:"center"},tooltip:{trigger:"item"},legend:{orient:"vertical",left:"left"},series:[{name:"Access From",type:"pie",radius:"50%",emphasis:{itemStyle:{shadowBlur:10,shadowOffsetX:0,shadowColor:"rgba(0, 0, 0, 0.5)"}}}]}),2),a=n[0];n[1];return s.default.createElement(t.SingleChart,{url:"/api/test",reqParams:{name:1,age:12},request:function(n,s){return new Promise((function(n){setTimeout((function(){n({code:0,data:[{value:1048,name:"Search Engine"},{value:735,name:"Direct"},{value:580,name:"Email"},{value:484,name:"Union Ads"},{value:300,name:"Video Ads"}]})}),3e3)}))},resCallback:function(n){return n.data},wrapStyle:{width:"auto",height:300},option:a})};return s.default.createElement(c,null)}}}}]);