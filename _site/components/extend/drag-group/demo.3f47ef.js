(window.webpackJsonp=window.webpackJsonp||[]).push([[167],{4148:function(n,s,a){n.exports={card:a(5230),custom:a(5231)}},4251:function(n,s,a){"use strict";function t(n,s,a){const t=s<0?n.length+s:s;if(t>=0&&t<n.length){const t=a<0?n.length+a:a,[p]=n.splice(s,1);n.splice(t,0,p)}}function p(n,s,a){return t(n=[...n],s,a),n}a.r(s),a.d(s,"arrayMoveMutable",(function(){return t})),a.d(s,"arrayMoveImmutable",(function(){return p}))},5230:function(n,s,a){n.exports={content:[["p","card拖拽示例"]],meta:{order:1,title:"card拖拽",filename:"components/extend/drag-group/demo/card.md",id:"components-extend-drag-group-demo-card"},toc:["ul"],highlightedCode:["pre",{lang:"tsx",highlighted:'import React<span class="token punctuation">,</span> { useState } from <span class="token string">\'react\'</span><span class="token comment" spellcheck="true">;</span>\nimport DragGroup from <span class="token string">\'../DragGroup\'</span><span class="token comment" spellcheck="true">;</span>\nimport { arrayMoveImmutable } from <span class="token string">\'array-move\'</span><span class="token comment" spellcheck="true">;</span>\nimport { Card } from <span class="token string">\'knowdesign\'</span><span class="token comment" spellcheck="true">;</span>\nlet datas <span class="token operator">=</span> <span class="token punctuation">[</span>\n  {\n    id<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'item1\'</span>\n  }<span class="token punctuation">,</span>\n  {\n    id<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'item2\'</span>\n  }<span class="token punctuation">,</span>\n  {\n    id<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'item3\'</span>\n  }<span class="token punctuation">,</span>\n  {\n  id<span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span>\n  name<span class="token punctuation">:</span> <span class="token string">\'item4\'</span>\n  }<span class="token punctuation">,</span>\n  {\n    id<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'item5\'</span>\n  }\n<span class="token punctuation">]</span>    \n<span class="token keyword">const</span> Containerskk <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> JSX<span class="token punctuation">.</span>Element <span class="token operator">=</span><span class="token operator">></span> {\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>lists<span class="token punctuation">,</span> setlists<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span>JSON<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>datas<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  <span class="token keyword">const</span> sortEnd <span class="token operator">=</span> <span class="token punctuation">(</span>{ oldIndex<span class="token punctuation">,</span> newIndex<span class="token punctuation">,</span> collection }<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n    <span class="token keyword">const</span> listsNew <span class="token operator">=</span> <span class="token function">arrayMoveImmutable</span><span class="token punctuation">(</span>lists<span class="token punctuation">,</span> oldIndex<span class="token punctuation">,</span> newIndex<span class="token punctuation">)</span>\n    <span class="token function">setlists</span><span class="token punctuation">(</span>listsNew<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  }<span class="token comment" spellcheck="true">;       </span>\n  return <span class="token punctuation">(</span>\n    <span class="token operator">&lt;></span>\n      <span class="token operator">&lt;</span>DragGroup\n        dragContainerProps<span class="token operator">=</span>{{\n          onSortEnd<span class="token punctuation">:</span> sortEnd<span class="token punctuation">,</span>\n          axis<span class="token punctuation">:</span> <span class="token string">"xy"</span><span class="token punctuation">,</span>\n          useDragHandle<span class="token punctuation">:</span> <span class="token boolean">true</span>\n        }}\n      <span class="token operator">></span>\n        {lists<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>\n          <span class="token operator">&lt;</span>Card title<span class="token operator">=</span>{item<span class="token punctuation">.</span>name} key<span class="token operator">=</span>{index}<span class="token operator">></span>\n            <span class="token operator">&lt;</span>p<span class="token operator">></span>Card content<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>\n            <span class="token operator">&lt;</span>p<span class="token operator">></span>Card content<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>\n            <span class="token operator">&lt;</span>p<span class="token operator">></span>Card content<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>\n          <span class="token operator">&lt;</span><span class="token operator">/</span>Card<span class="token operator">></span>\n        <span class="token punctuation">)</span><span class="token punctuation">)</span>}\n      <span class="token operator">&lt;</span><span class="token operator">/</span>DragGroup<span class="token operator">></span>           \n    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">></span>\n  <span class="token punctuation">)</span>\n}\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token operator">&lt;</span>div<span class="token operator">></span>\n    <span class="token operator">&lt;</span>Containerskk <span class="token operator">/</span><span class="token operator">></span>\n  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token punctuation">,</span>\n  mountNode<span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>'}],highlightedCodes:{tsx:'<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> DragGroup <span class="token keyword">from</span> <span class="token string">\'../DragGroup\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> arrayMoveImmutable <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'array-move\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Card <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'knowdesign\'</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> datas <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    id<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'item1\'</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    id<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'item2\'</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    id<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'item3\'</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n  id<span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>\n  name<span class="token operator">:</span> <span class="token string">\'item4\'</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    id<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'item5\'</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">]</span>    \n<span class="token keyword">const</span> Containerskk <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">JSX</span><span class="token punctuation">.</span>Element <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>lists<span class="token punctuation">,</span> setlists<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>datas<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token function-variable function">sortEnd</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> oldIndex<span class="token punctuation">,</span> newIndex<span class="token punctuation">,</span> collection <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> listsNew <span class="token operator">=</span> <span class="token function">arrayMoveImmutable</span><span class="token punctuation">(</span>lists<span class="token punctuation">,</span> oldIndex<span class="token punctuation">,</span> newIndex<span class="token punctuation">)</span>\n    <span class="token function">setlists</span><span class="token punctuation">(</span>listsNew<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>       \n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DragGroup</span></span>\n        <span class="token attr-name">dragContainerProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          onSortEnd<span class="token operator">:</span> sortEnd<span class="token punctuation">,</span>\n          axis<span class="token operator">:</span> <span class="token string">"xy"</span><span class="token punctuation">,</span>\n          useDragHandle<span class="token operator">:</span> <span class="token boolean">true</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token punctuation">></span></span>\n        <span class="token punctuation">{</span>lists<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Card</span></span> <span class="token attr-name">title</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>name<span class="token punctuation">}</span></span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>index<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Card content<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Card content<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Card content<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Card</span></span><span class="token punctuation">></span></span>\n        <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">DragGroup</span></span><span class="token punctuation">></span></span>           \n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Containerskk</span></span> <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n  mountNode<span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>',jsx:'<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> DragGroup <span class="token keyword">from</span> <span class="token string">\'../DragGroup\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> arrayMoveImmutable <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'array-move\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Card <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'knowdesign\'</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> datas <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'item1\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'item2\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'item3\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'item4\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'item5\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">Containerskk</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>lists<span class="token punctuation">,</span> setlists<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>datas<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">sortEnd</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> oldIndex<span class="token punctuation">,</span> newIndex<span class="token punctuation">,</span> collection <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> listsNew <span class="token operator">=</span> <span class="token function">arrayMoveImmutable</span><span class="token punctuation">(</span>lists<span class="token punctuation">,</span> oldIndex<span class="token punctuation">,</span> newIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">setlists</span><span class="token punctuation">(</span>listsNew<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DragGroup</span></span>\n        <span class="token attr-name">dragContainerProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          <span class="token literal-property property">onSortEnd</span><span class="token operator">:</span> sortEnd<span class="token punctuation">,</span>\n          <span class="token literal-property property">axis</span><span class="token operator">:</span> <span class="token string">\'xy\'</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">useDragHandle</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token punctuation">></span></span>\n        <span class="token punctuation">{</span>lists<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Card</span></span> <span class="token attr-name">title</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>name<span class="token punctuation">}</span></span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>index<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Card content<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Card content<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Card content<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Card</span></span><span class="token punctuation">></span></span>\n        <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">DragGroup</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Containerskk</span></span> <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n  mountNode<span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n'},preview:function(){a(0),a(35);function n(s){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(s)}var s,t=function(s,a){if(!a&&s&&s.__esModule)return s;if(null===s||"object"!==n(s)&&"function"!=typeof s)return{default:s};var t=c(a);if(t&&t.has(s))return t.get(s);var p={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var e in s)if("default"!==e&&Object.prototype.hasOwnProperty.call(s,e)){var l=o?Object.getOwnPropertyDescriptor(s,e):null;l&&(l.get||l.set)?Object.defineProperty(p,e,l):p[e]=s[e]}p.default=s,t&&t.set(s,p);return p}(a(0)),p=(s=a(797))&&s.__esModule?s:{default:s},o=a(4251),e=a(96);function c(n){if("function"!=typeof WeakMap)return null;var s=new WeakMap,a=new WeakMap;return(c=function(n){return n?a:s})(n)}function l(n,s){return function(n){if(Array.isArray(n))return n}(n)||function(n,s){var a=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null==a)return;var t,p,o=[],e=!0,c=!1;try{for(a=a.call(n);!(e=(t=a.next()).done)&&(o.push(t.value),!s||o.length!==s);e=!0);}catch(n){c=!0,p=n}finally{try{e||null==a.return||a.return()}finally{if(c)throw p}}return o}(n,s)||function(n,s){if(!n)return;if("string"==typeof n)return u(n,s);var a=Object.prototype.toString.call(n).slice(8,-1);"Object"===a&&n.constructor&&(a=n.constructor.name);if("Map"===a||"Set"===a)return Array.from(n);if("Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a))return u(n,s)}(n,s)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function u(n,s){(null==s||s>n.length)&&(s=n.length);for(var a=0,t=new Array(s);a<s;a++)t[a]=n[a];return t}var k=[{id:1,name:"item1"},{id:2,name:"item2"},{id:3,name:"item3"},{id:4,name:"item4"},{id:5,name:"item5"}],r=function(){var n=l((0,t.useState)(JSON.parse(JSON.stringify(k))),2),s=n[0],a=n[1];return t.default.createElement(t.default.Fragment,null,t.default.createElement(p.default,{dragContainerProps:{onSortEnd:function(n){var t=n.oldIndex,p=n.newIndex,e=(n.collection,(0,o.arrayMoveImmutable)(s,t,p));a(e)},axis:"xy",useDragHandle:!0}},s.map((function(n,s){return t.default.createElement(e.Card,{title:n.name,key:s},t.default.createElement("p",null,"Card content"),t.default.createElement("p",null,"Card content"),t.default.createElement("p",null,"Card content"))}))))};return t.default.createElement("div",null,t.default.createElement(r,null))},style:".drag-sort-item {\n  \n}",highlightedStyle:'<span class="token selector"><span class="token class">.drag-sort-item</span> </span><span class="token punctuation">{</span>\n  \n<span class="token punctuation">}</span>'}},5231:function(n,s,a){n.exports={content:[["p","DragGroup示例"]],meta:{order:0,title:"自定义拖拽项&拖拽分组",filename:"components/extend/drag-group/demo/custom.md",id:"components-extend-drag-group-demo-custom"},toc:["ul"],highlightedCode:["pre",{lang:"tsx",highlighted:'import React<span class="token punctuation">,</span> { useState } from <span class="token string">\'react\'</span><span class="token comment" spellcheck="true">;</span>\nimport DragGroup from <span class="token string">\'../DragGroup\'</span><span class="token comment" spellcheck="true">;</span>\nimport { arrayMoveImmutable } from <span class="token string">\'array-move\'</span><span class="token comment" spellcheck="true">;</span>\n\nlet datas <span class="token operator">=</span> <span class="token punctuation">[</span>\n  {\n    id<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'item1\'</span>\n  }<span class="token punctuation">,</span>\n  {\n    id<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'item2\'</span>\n  }<span class="token punctuation">,</span>\n  {\n    id<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'item3\'</span>\n  }<span class="token punctuation">,</span>\n  {\n    id<span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'item4\'</span>\n  }<span class="token punctuation">,</span>\n  {\n    id<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'item5\'</span>\n  }<span class="token punctuation">,</span>\n  {\n    id<span class="token punctuation">:</span> <span class="token number">6</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'item6\'</span>\n  }\n<span class="token punctuation">]</span>\nlet datas2 <span class="token operator">=</span> <span class="token punctuation">[</span>\n  {\n    id<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'item1-2\'</span>\n  }<span class="token punctuation">,</span>\n  {\n    id<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'item2-2\'</span>\n  }<span class="token punctuation">,</span>\n  {\n    id<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'item3-2\'</span>\n  }<span class="token punctuation">,</span>\n  {\n    id<span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'item4-2\'</span>\n  }<span class="token punctuation">,</span>\n  {\n    id<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'item5-2\'</span>\n  }<span class="token punctuation">,</span>\n  {\n    id<span class="token punctuation">:</span> <span class="token number">6</span><span class="token punctuation">,</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'item6-2\'</span>\n  }\n<span class="token punctuation">]</span>\n\n<span class="token keyword">const</span> DragItem <span class="token operator">=</span> <span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n  return <span class="token punctuation">(</span>\n    <span class="token operator">&lt;</span>div<span class="token operator">></span>{props<span class="token punctuation">.</span>name}<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>\n  <span class="token punctuation">)</span>\n}\n\n<span class="token keyword">const</span> Containers <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> JSX<span class="token punctuation">.</span>Element <span class="token operator">=</span><span class="token operator">></span> {\n    \n  <span class="token keyword">const</span> <span class="token punctuation">[</span>lists<span class="token punctuation">,</span> setlists<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span>JSON<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>datas<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>lists2<span class="token punctuation">,</span> setlists2<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span>JSON<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>datas2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n  <span class="token keyword">const</span> sortEnd <span class="token operator">=</span> <span class="token punctuation">(</span>{ oldIndex<span class="token punctuation">,</span> newIndex<span class="token punctuation">,</span> collection }<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n    let datas <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>\n    let setData<span class="token comment" spellcheck="true">;</span>\n    <span class="token keyword">switch</span> <span class="token punctuation">(</span>collection<span class="token punctuation">)</span> {\n      <span class="token keyword">case</span> <span class="token string">\'group1\'</span><span class="token punctuation">:</span>\n        datas <span class="token operator">=</span> lists<span class="token comment" spellcheck="true">;</span>\n        setData <span class="token operator">=</span> setlists<span class="token comment" spellcheck="true">;</span>\n        break<span class="token comment" spellcheck="true">;</span>\n      <span class="token keyword">case</span> <span class="token string">\'group2\'</span><span class="token punctuation">:</span>\n        datas <span class="token operator">=</span> lists2<span class="token comment" spellcheck="true">;</span>\n        setData <span class="token operator">=</span> setlists2<span class="token comment" spellcheck="true">;</span>\n        break<span class="token comment" spellcheck="true">;</span>\n      <span class="token keyword">default</span><span class="token punctuation">:</span>\n        break<span class="token comment" spellcheck="true">;</span>\n    }\n    <span class="token keyword">const</span> listsNew <span class="token operator">=</span> <span class="token function">arrayMoveImmutable</span><span class="token punctuation">(</span>datas<span class="token punctuation">,</span> oldIndex<span class="token punctuation">,</span> newIndex<span class="token punctuation">)</span>\n    <span class="token function">setData</span><span class="token punctuation">(</span>listsNew<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  }<span class="token comment" spellcheck="true">;</span>\n  return <span class="token punctuation">(</span>\n      <span class="token operator">&lt;></span>\n        <span class="token operator">&lt;</span>h4<span class="token operator">></span>拖拽组<span class="token number">1</span><span class="token operator">&lt;</span><span class="token operator">/</span>h4<span class="token operator">></span>\n        <span class="token operator">&lt;</span>DragGroup \n          dragContainerProps<span class="token operator">=</span>{{\n            onSortEnd<span class="token punctuation">:</span> sortEnd<span class="token punctuation">,</span>\n            axis<span class="token punctuation">:</span> <span class="token string">"xy"</span>\n          }}\n          dragItemProps<span class="token operator">=</span>{{\n            collection<span class="token punctuation">:</span> <span class="token string">\'group1\'</span>\n          }}\n        <span class="token operator">></span>\n          {lists<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>\n            <span class="token operator">&lt;</span>DragItem key<span class="token operator">=</span>{index} name<span class="token operator">=</span>{item<span class="token punctuation">.</span>name} id<span class="token operator">=</span>{item<span class="token punctuation">.</span>id}<span class="token operator">/</span><span class="token operator">></span>\n          <span class="token punctuation">)</span><span class="token punctuation">)</span>}\n          \n        <span class="token operator">&lt;</span><span class="token operator">/</span>DragGroup<span class="token operator">></span> \n        <span class="token operator">&lt;</span>br<span class="token operator">/</span><span class="token operator">></span>\n\n        <span class="token operator">&lt;</span>h4<span class="token operator">></span>拖拽组<span class="token number">2</span><span class="token operator">&lt;</span><span class="token operator">/</span>h4<span class="token operator">></span>\n        <span class="token operator">&lt;</span>DragGroup \n          dragContainerProps<span class="token operator">=</span>{{\n            onSortEnd<span class="token punctuation">:</span> sortEnd<span class="token punctuation">,</span>\n            axis<span class="token punctuation">:</span> <span class="token string">"xy"</span>\n          }}\n          dragItemProps<span class="token operator">=</span>{{\n            collection<span class="token punctuation">:</span> <span class="token string">\'group2\'</span>\n          }}\n        <span class="token operator">></span>\n          {lists2<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>\n            <span class="token operator">&lt;</span>DragItem key<span class="token operator">=</span>{index} name<span class="token operator">=</span>{item<span class="token punctuation">.</span>name} id<span class="token operator">=</span>{item<span class="token punctuation">.</span>id}<span class="token operator">/</span><span class="token operator">></span>\n          <span class="token punctuation">)</span><span class="token punctuation">)</span>} \n        <span class="token operator">&lt;</span><span class="token operator">/</span>DragGroup<span class="token operator">></span>             \n      <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">></span>\n  <span class="token punctuation">)</span>\n}\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token operator">&lt;</span>div<span class="token operator">></span>\n    <span class="token operator">&lt;</span>Containers <span class="token operator">/</span><span class="token operator">></span>\n  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token punctuation">,</span>\n  mountNode<span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>'}],highlightedCodes:{tsx:'<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> DragGroup <span class="token keyword">from</span> <span class="token string">\'../DragGroup\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> arrayMoveImmutable <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'array-move\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">let</span> datas <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    id<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'item1\'</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    id<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'item2\'</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    id<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'item3\'</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    id<span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'item4\'</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    id<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'item5\'</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    id<span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'item6\'</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">]</span>\n<span class="token keyword">let</span> datas2 <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    id<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'item1-2\'</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    id<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'item2-2\'</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    id<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'item3-2\'</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    id<span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'item4-2\'</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    id<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'item5-2\'</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    id<span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">\'item6-2\'</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">]</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">DragItem</span> <span class="token operator">=</span> <span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> Containers <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">JSX</span><span class="token punctuation">.</span>Element <span class="token operator">=></span> <span class="token punctuation">{</span>\n    \n  <span class="token keyword">const</span> <span class="token punctuation">[</span>lists<span class="token punctuation">,</span> setlists<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>datas<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>lists2<span class="token punctuation">,</span> setlists2<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>datas2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">sortEnd</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> oldIndex<span class="token punctuation">,</span> newIndex<span class="token punctuation">,</span> collection <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> datas <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> setData<span class="token punctuation">;</span>\n    <span class="token keyword">switch</span> <span class="token punctuation">(</span>collection<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">case</span> <span class="token string">\'group1\'</span><span class="token operator">:</span>\n        datas <span class="token operator">=</span> lists<span class="token punctuation">;</span>\n        setData <span class="token operator">=</span> setlists<span class="token punctuation">;</span>\n        <span class="token keyword">break</span><span class="token punctuation">;</span>\n      <span class="token keyword">case</span> <span class="token string">\'group2\'</span><span class="token operator">:</span>\n        datas <span class="token operator">=</span> lists2<span class="token punctuation">;</span>\n        setData <span class="token operator">=</span> setlists2<span class="token punctuation">;</span>\n        <span class="token keyword">break</span><span class="token punctuation">;</span>\n      <span class="token keyword">default</span><span class="token operator">:</span>\n        <span class="token keyword">break</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">const</span> listsNew <span class="token operator">=</span> <span class="token function">arrayMoveImmutable</span><span class="token punctuation">(</span>datas<span class="token punctuation">,</span> oldIndex<span class="token punctuation">,</span> newIndex<span class="token punctuation">)</span>\n    <span class="token function">setData</span><span class="token punctuation">(</span>listsNew<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span>拖拽组<span class="token number">1</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DragGroup</span></span> \n          <span class="token attr-name">dragContainerProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            onSortEnd<span class="token operator">:</span> sortEnd<span class="token punctuation">,</span>\n            axis<span class="token operator">:</span> <span class="token string">"xy"</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">dragItemProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            collection<span class="token operator">:</span> <span class="token string">\'group1\'</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">></span></span>\n          <span class="token punctuation">{</span>lists<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DragItem</span></span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>index<span class="token punctuation">}</span></span> <span class="token attr-name">name</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>name<span class="token punctuation">}</span></span> <span class="token attr-name">id</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>id<span class="token punctuation">}</span></span><span class="token punctuation">/></span></span>\n          <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n          \n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">DragGroup</span></span><span class="token punctuation">></span></span> \n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>\n\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span>拖拽组<span class="token number">2</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DragGroup</span></span> \n          <span class="token attr-name">dragContainerProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            onSortEnd<span class="token operator">:</span> sortEnd<span class="token punctuation">,</span>\n            axis<span class="token operator">:</span> <span class="token string">"xy"</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">dragItemProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            collection<span class="token operator">:</span> <span class="token string">\'group2\'</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">></span></span>\n          <span class="token punctuation">{</span>lists2<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DragItem</span></span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>index<span class="token punctuation">}</span></span> <span class="token attr-name">name</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>name<span class="token punctuation">}</span></span> <span class="token attr-name">id</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>id<span class="token punctuation">}</span></span><span class="token punctuation">/></span></span>\n          <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span> \n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">DragGroup</span></span><span class="token punctuation">></span></span>             \n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Containers</span></span> <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n  mountNode<span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>',jsx:'<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> DragGroup <span class="token keyword">from</span> <span class="token string">\'../DragGroup\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> arrayMoveImmutable <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'array-move\'</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> datas <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'item1\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'item2\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'item3\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'item4\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'item5\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'item6\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> datas2 <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'item1-2\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'item2-2\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'item3-2\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'item4-2\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'item5-2\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'item6-2\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">DragItem</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">Containers</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>lists<span class="token punctuation">,</span> setlists<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>datas<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>lists2<span class="token punctuation">,</span> setlists2<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>datas2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">sortEnd</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> oldIndex<span class="token punctuation">,</span> newIndex<span class="token punctuation">,</span> collection <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> datas <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> setData<span class="token punctuation">;</span>\n\n    <span class="token keyword">switch</span> <span class="token punctuation">(</span>collection<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">case</span> <span class="token string">\'group1\'</span><span class="token operator">:</span>\n        datas <span class="token operator">=</span> lists<span class="token punctuation">;</span>\n        setData <span class="token operator">=</span> setlists<span class="token punctuation">;</span>\n        <span class="token keyword">break</span><span class="token punctuation">;</span>\n\n      <span class="token keyword">case</span> <span class="token string">\'group2\'</span><span class="token operator">:</span>\n        datas <span class="token operator">=</span> lists2<span class="token punctuation">;</span>\n        setData <span class="token operator">=</span> setlists2<span class="token punctuation">;</span>\n        <span class="token keyword">break</span><span class="token punctuation">;</span>\n\n      <span class="token keyword">default</span><span class="token operator">:</span>\n        <span class="token keyword">break</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">const</span> listsNew <span class="token operator">=</span> <span class="token function">arrayMoveImmutable</span><span class="token punctuation">(</span>datas<span class="token punctuation">,</span> oldIndex<span class="token punctuation">,</span> newIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">setData</span><span class="token punctuation">(</span>listsNew<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span>拖拽组<span class="token number">1</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DragGroup</span></span>\n        <span class="token attr-name">dragContainerProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          <span class="token literal-property property">onSortEnd</span><span class="token operator">:</span> sortEnd<span class="token punctuation">,</span>\n          <span class="token literal-property property">axis</span><span class="token operator">:</span> <span class="token string">\'xy\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">dragItemProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          <span class="token literal-property property">collection</span><span class="token operator">:</span> <span class="token string">\'group1\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token punctuation">></span></span>\n        <span class="token punctuation">{</span>lists<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DragItem</span></span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>index<span class="token punctuation">}</span></span> <span class="token attr-name">name</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>name<span class="token punctuation">}</span></span> <span class="token attr-name">id</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>id<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n        <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">DragGroup</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>\n\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span>拖拽组<span class="token number">2</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DragGroup</span></span>\n        <span class="token attr-name">dragContainerProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          <span class="token literal-property property">onSortEnd</span><span class="token operator">:</span> sortEnd<span class="token punctuation">,</span>\n          <span class="token literal-property property">axis</span><span class="token operator">:</span> <span class="token string">\'xy\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">dragItemProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          <span class="token literal-property property">collection</span><span class="token operator">:</span> <span class="token string">\'group2\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token punctuation">></span></span>\n        <span class="token punctuation">{</span>lists2<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DragItem</span></span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>index<span class="token punctuation">}</span></span> <span class="token attr-name">name</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>name<span class="token punctuation">}</span></span> <span class="token attr-name">id</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>id<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n        <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">DragGroup</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Containers</span></span> <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n  mountNode<span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n'},preview:function(){a(0),a(35);function n(s){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(s)}var s,t=function(s,a){if(!a&&s&&s.__esModule)return s;if(null===s||"object"!==n(s)&&"function"!=typeof s)return{default:s};var t=e(a);if(t&&t.has(s))return t.get(s);var p={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var c in s)if("default"!==c&&Object.prototype.hasOwnProperty.call(s,c)){var l=o?Object.getOwnPropertyDescriptor(s,c):null;l&&(l.get||l.set)?Object.defineProperty(p,c,l):p[c]=s[c]}p.default=s,t&&t.set(s,p);return p}(a(0)),p=(s=a(797))&&s.__esModule?s:{default:s},o=a(4251);function e(n){if("function"!=typeof WeakMap)return null;var s=new WeakMap,a=new WeakMap;return(e=function(n){return n?a:s})(n)}function c(n,s){return function(n){if(Array.isArray(n))return n}(n)||function(n,s){var a=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null==a)return;var t,p,o=[],e=!0,c=!1;try{for(a=a.call(n);!(e=(t=a.next()).done)&&(o.push(t.value),!s||o.length!==s);e=!0);}catch(n){c=!0,p=n}finally{try{e||null==a.return||a.return()}finally{if(c)throw p}}return o}(n,s)||function(n,s){if(!n)return;if("string"==typeof n)return l(n,s);var a=Object.prototype.toString.call(n).slice(8,-1);"Object"===a&&n.constructor&&(a=n.constructor.name);if("Map"===a||"Set"===a)return Array.from(n);if("Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a))return l(n,s)}(n,s)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function l(n,s){(null==s||s>n.length)&&(s=n.length);for(var a=0,t=new Array(s);a<s;a++)t[a]=n[a];return t}var u=[{id:1,name:"item1"},{id:2,name:"item2"},{id:3,name:"item3"},{id:4,name:"item4"},{id:5,name:"item5"},{id:6,name:"item6"}],k=[{id:1,name:"item1-2"},{id:2,name:"item2-2"},{id:3,name:"item3-2"},{id:4,name:"item4-2"},{id:5,name:"item5-2"},{id:6,name:"item6-2"}],r=function(n){return t.default.createElement("div",null,n.name)},i=function(){var n=c((0,t.useState)(JSON.parse(JSON.stringify(u))),2),s=n[0],a=n[1],e=c((0,t.useState)(JSON.parse(JSON.stringify(k))),2),l=e[0],i=e[1],m=function(n){var t,p=n.oldIndex,e=n.newIndex,c=[];switch(n.collection){case"group1":c=s,t=a;break;case"group2":c=l,t=i}t((0,o.arrayMoveImmutable)(c,p,e))};return t.default.createElement(t.default.Fragment,null,t.default.createElement("h4",null,"拖拽组1"),t.default.createElement(p.default,{dragContainerProps:{onSortEnd:m,axis:"xy"},dragItemProps:{collection:"group1"}},s.map((function(n,s){return t.default.createElement(r,{key:s,name:n.name,id:n.id})}))),t.default.createElement("br",null),t.default.createElement("h4",null,"拖拽组2"),t.default.createElement(p.default,{dragContainerProps:{onSortEnd:m,axis:"xy"},dragItemProps:{collection:"group2"}},l.map((function(n,s){return t.default.createElement(r,{key:s,name:n.name,id:n.id})}))))};return t.default.createElement("div",null,t.default.createElement(i,null))},style:".drag-sort-item {\n  background: #4482D4;\n  border: 1px solid #50A5F1;\n  color: #fff;\n}",highlightedStyle:'<span class="token selector"><span class="token class">.drag-sort-item</span> </span><span class="token punctuation">{</span>\n  <span class="token property">background</span><span class="token punctuation">:</span> <span class="token hexcode">#4482D4</span><span class="token punctuation">;</span>\n  <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid <span class="token hexcode">#50A5F1</span><span class="token punctuation">;</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#fff</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'}}}]);