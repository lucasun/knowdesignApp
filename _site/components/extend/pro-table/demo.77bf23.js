(window.webpackJsonp=window.webpackJsonp||[]).push([[182],{4163:function(n,s,a){n.exports={QueryFormTable:a(5242),QueryFormTableOther:a(5243),SearchTable:a(5244),base:a(5245),demo3:a(5247),test:a(5249)}},5242:function(n,s,a){n.exports={content:{"zh-CN":[["p","带有查询表单和自定义列的表格"],["blockquote",["p",["code","showQueryForm = true"]," 开启查询表单;\n",["code","tableScreen = true"]," 开启查询表单控制按钮;\n",["code","tableCustomColumns = true"]," 开启自定义列控制按钮，注意：",["span","tableCustomColumns为true的时候，如果需要本地持久化的自定义列，请填写属性tableId，如果多个表格需要自定义列持久化，请保持tableId的唯一性"],";"]]],"en-US":[["p","Add Table of Queryform"]]},meta:{order:3,title:"带有查询表单的Table",filename:"components/extend/pro-table/demo/QueryFormTable.md",id:"components-extend-pro-table-demo-QueryFormTable"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:'import React<span class="token punctuation">,</span> { useState } from <span class="token string">"react"</span><span class="token comment" spellcheck="true">;</span>\nimport { ProTable<span class="token punctuation">,</span> <span class="token keyword">Select</span><span class="token punctuation">,</span> Button<span class="token punctuation">,</span> IconFont<span class="token punctuation">,</span> Tag } from <span class="token string">\'knowdesign\'</span><span class="token comment" spellcheck="true">;</span>\nimport { renderTableOpts } from <span class="token string">\'knowdesign/common-pages/render-table-opts\'</span><span class="token comment" spellcheck="true">;</span>\n\ninterface MiniSelectInterface extends React<span class="token punctuation">.</span>FC<span class="token operator">&lt;</span>any<span class="token operator">></span> {\n    Option<span class="token punctuation">:</span> typeof <span class="token keyword">Select</span><span class="token punctuation">.</span>Option<span class="token comment" spellcheck="true">;</span>\n}\n\n<span class="token keyword">const</span> CustomSelect<span class="token punctuation">:</span> MiniSelectInterface <span class="token operator">=</span> props <span class="token operator">=</span><span class="token operator">></span> {\n    return <span class="token operator">&lt;></span>\n        <span class="token operator">&lt;</span>span<span class="token operator">></span>自定义文案<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>\n        <span class="token operator">&lt;</span><span class="token keyword">Select</span> bordered<span class="token operator">=</span>{<span class="token boolean">false</span>} suffixIcon<span class="token operator">=</span>{<span class="token operator">&lt;</span>IconFont type<span class="token operator">=</span><span class="token string">\'icon-xiala\'</span> <span class="token operator">/</span><span class="token operator">></span>} {<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>props} <span class="token operator">/</span><span class="token operator">></span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">></span>\n}<span class="token comment" spellcheck="true">;</span>\n\nCustomSelect<span class="token punctuation">.</span>Option <span class="token operator">=</span> <span class="token keyword">Select</span><span class="token punctuation">.</span>Option<span class="token comment" spellcheck="true">;</span>\n\n\n<span class="token keyword">const</span> getFormCol <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n  return <span class="token punctuation">[</span>\n    {\n      type<span class="token punctuation">:</span> <span class="token string">"datePicker"</span><span class="token punctuation">,</span>\n      title<span class="token punctuation">:</span> <span class="token string">"日期选择"</span><span class="token punctuation">,</span>\n      dataIndex<span class="token punctuation">:</span> <span class="token string">"date1"</span><span class="token punctuation">,</span>\n      placeholder<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'请选择日期\'</span><span class="token punctuation">]</span>\n    }<span class="token punctuation">,</span>\n    {\n      type<span class="token punctuation">:</span> <span class="token string">"dateRangePicker"</span><span class="token punctuation">,</span>\n      title<span class="token punctuation">:</span> <span class="token string">"日期范围选择"</span><span class="token punctuation">,</span>\n      dataIndex<span class="token punctuation">:</span> <span class="token string">"date2"</span><span class="token punctuation">,</span>\n      placeholder<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'开始日期\'</span><span class="token punctuation">,</span> <span class="token string">\'结束日期\'</span><span class="token punctuation">]</span>\n    }<span class="token punctuation">,</span>\n    {\n      type<span class="token punctuation">:</span> <span class="token string">"timePicker"</span><span class="token punctuation">,</span>\n      title<span class="token punctuation">:</span> <span class="token string">"时间选择"</span><span class="token punctuation">,</span>\n      dataIndex<span class="token punctuation">:</span> <span class="token string">"time1"</span><span class="token punctuation">,</span>\n      placeholder<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'请选择时间\'</span><span class="token punctuation">]</span>\n    }<span class="token punctuation">,</span>\n    {\n      type<span class="token punctuation">:</span> <span class="token string">"timeRangePicker"</span><span class="token punctuation">,</span>\n      title<span class="token punctuation">:</span> <span class="token string">"时间范围选择"</span><span class="token punctuation">,</span>\n      dataIndex<span class="token punctuation">:</span> <span class="token string">"time2"</span><span class="token punctuation">,</span>\n      placeholder<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'开始时间\'</span><span class="token punctuation">,</span> <span class="token string">\'结束时间\'</span><span class="token punctuation">]</span>\n    }<span class="token punctuation">,</span>\n    {\n      type<span class="token punctuation">:</span> <span class="token string">"input"</span><span class="token punctuation">,</span>\n      title<span class="token punctuation">:</span> <span class="token string">"用户账号"</span><span class="token punctuation">,</span>\n      dataIndex<span class="token punctuation">:</span> <span class="token string">"username"</span><span class="token punctuation">,</span>\n      placeholder<span class="token punctuation">:</span> <span class="token string">"请输入用户账号"</span><span class="token punctuation">,</span>\n      componentProps<span class="token punctuation">:</span> {\n        maxLength<span class="token punctuation">:</span> <span class="token number">128</span><span class="token punctuation">,</span>\n      }<span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n    {\n      type<span class="token punctuation">:</span> <span class="token string">"input"</span><span class="token punctuation">,</span>\n      title<span class="token punctuation">:</span> <span class="token string">"用户实名"</span><span class="token punctuation">,</span>\n      dataIndex<span class="token punctuation">:</span> <span class="token string">"realName"</span><span class="token punctuation">,</span>\n      placeholder<span class="token punctuation">:</span> <span class="token string">"请输入用户实名"</span><span class="token punctuation">,</span>\n      componentProps<span class="token punctuation">:</span> {\n        maxLength<span class="token punctuation">:</span> <span class="token number">128</span><span class="token punctuation">,</span>\n      }<span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n    {\n      type<span class="token punctuation">:</span> <span class="token string">"select"</span><span class="token punctuation">,</span>\n      title<span class="token punctuation">:</span> <span class="token string">"城市"</span><span class="token punctuation">,</span>\n      dataIndex<span class="token punctuation">:</span> <span class="token string">"city"</span><span class="token punctuation">,</span>\n      placeholder<span class="token punctuation">:</span> <span class="token string">"请选择"</span><span class="token punctuation">,</span>\n      options<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n        {\n          title<span class="token punctuation">:</span> <span class="token string">\'北京\'</span><span class="token punctuation">,</span>\n          value<span class="token punctuation">:</span> <span class="token number">1</span>\n        }<span class="token punctuation">,</span>\n        {\n          title<span class="token punctuation">:</span> <span class="token string">\'南京\'</span><span class="token punctuation">,</span>\n          value<span class="token punctuation">:</span> <span class="token number">2</span>\n        }\n      <span class="token punctuation">]</span>\n    }\n  <span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>\n}<span class="token comment" spellcheck="true">;</span>\n\n<span class="token keyword">const</span> getFormText<span class="token punctuation">:</span> { searchText<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">; resetText: string } = {</span>\n    searchText<span class="token punctuation">:</span> <span class="token string">"查询"</span><span class="token punctuation">,</span>\n    resetText<span class="token punctuation">:</span> <span class="token string">"重置"</span><span class="token punctuation">,</span>\n}<span class="token comment" spellcheck="true">;</span>\n<span class="token operator">/</span><span class="token operator">/</span> 获取 操作项相关配置\n<span class="token keyword">const</span> getOperationList <span class="token operator">=</span> <span class="token punctuation">(</span>props<span class="token operator">?</span><span class="token punctuation">:</span> any<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n  return <span class="token punctuation">[</span>\n    {\n      label<span class="token punctuation">:</span> <span class="token string">\'编辑\'</span><span class="token punctuation">,</span>\n      type<span class="token punctuation">:</span> <span class="token string">\'icon-bianji\'</span><span class="token punctuation">,</span>\n      clickFunc<span class="token punctuation">:</span> <span class="token punctuation">(</span>record<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>record<span class="token punctuation">,</span> <span class="token string">\'edit click\'</span><span class="token punctuation">)</span>\n      }<span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n    {\n      label<span class="token punctuation">:</span> <span class="token string">\'删除\'</span><span class="token punctuation">,</span>\n      type<span class="token punctuation">:</span> <span class="token string">\'icon-shanchu\'</span><span class="token punctuation">,</span>\n      clickFunc<span class="token punctuation">:</span> <span class="token punctuation">(</span>record<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>record<span class="token punctuation">,</span> <span class="token string">\'delete click\'</span><span class="token punctuation">)</span>\n      }<span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n    {\n      label<span class="token punctuation">:</span> <span class="token string">\'默认\'</span><span class="token punctuation">,</span>\n      type<span class="token punctuation">:</span> <span class="token string">\'icon-jiahao\'</span><span class="token punctuation">,</span>\n      clickFunc<span class="token punctuation">:</span> <span class="token punctuation">(</span>record<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>record<span class="token punctuation">,</span> <span class="token string">\'default click\'</span><span class="token punctuation">)</span>\n      }<span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n    {\n      label<span class="token punctuation">:</span> <span class="token string">\'操作记录\'</span><span class="token punctuation">,</span>\n      type<span class="token punctuation">:</span> <span class="token string">\'icon-caozuojilu\'</span><span class="token punctuation">,</span>\n      clickFunc<span class="token punctuation">:</span> <span class="token punctuation">(</span>record<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>record<span class="token punctuation">,</span> <span class="token string">\'测试 click\'</span><span class="token punctuation">)</span>\n      }<span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n    {\n      label<span class="token punctuation">:</span> <span class="token string">\'设置\'</span><span class="token punctuation">,</span>\n      type<span class="token punctuation">:</span> <span class="token string">\'icon-shezhi\'</span><span class="token punctuation">,</span>\n      clickFunc<span class="token punctuation">:</span> <span class="token punctuation">(</span>record<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>record<span class="token punctuation">,</span> <span class="token string">\'测试 click\'</span><span class="token punctuation">)</span>\n      }<span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>\n}<span class="token comment" spellcheck="true">;</span>\n<span class="token operator">/</span><span class="token operator">/</span> columns config\n<span class="token keyword">const</span> getTableColumns <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n    <span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n        {\n            title<span class="token punctuation">:</span> <span class="token string">"Name"</span><span class="token punctuation">,</span>\n            dataIndex<span class="token punctuation">:</span> <span class="token string">"name"</span><span class="token punctuation">,</span>\n            key<span class="token punctuation">:</span> <span class="token string">"name"</span><span class="token punctuation">,</span>\n            width<span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">,</span>\n        }<span class="token punctuation">,</span>\n        {\n            title<span class="token punctuation">:</span> <span class="token string">"Age"</span><span class="token punctuation">,</span>\n            dataIndex<span class="token punctuation">:</span> <span class="token string">"age"</span><span class="token punctuation">,</span>\n            key<span class="token punctuation">:</span> <span class="token string">"age"</span><span class="token punctuation">,</span>\n        }<span class="token punctuation">,</span>\n        {\n            title<span class="token punctuation">:</span> <span class="token string">"Address"</span><span class="token punctuation">,</span>\n            dataIndex<span class="token punctuation">:</span> <span class="token string">"address"</span><span class="token punctuation">,</span>\n            key<span class="token punctuation">:</span> <span class="token string">"address"</span><span class="token punctuation">,</span>\n            lineClampTwo<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            needTooltip<span class="token punctuation">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>\n        }<span class="token punctuation">,</span>\n        {\n            title<span class="token punctuation">:</span> <span class="token string">\'Tags\'</span><span class="token punctuation">,</span>\n            key<span class="token punctuation">:</span> <span class="token string">\'tags\'</span><span class="token punctuation">,</span>\n            dataIndex<span class="token punctuation">:</span> <span class="token string">\'tags\'</span><span class="token punctuation">,</span>\n            render<span class="token punctuation">:</span> <span class="token punctuation">(</span>_<span class="token punctuation">,</span> { tags }<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>\n                <span class="token operator">&lt;></span>\n                {tags<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>tag <span class="token operator">=</span><span class="token operator">></span> {\n                    let color <span class="token operator">=</span> tag<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">5</span> <span class="token operator">?</span> <span class="token string">\'geekblue\'</span> <span class="token punctuation">:</span> <span class="token string">\'green\'</span><span class="token comment" spellcheck="true">;</span>\n                    <span class="token keyword">if</span> <span class="token punctuation">(</span>tag <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">\'loser\'</span><span class="token punctuation">)</span> {\n                    color <span class="token operator">=</span> <span class="token string">\'volcano\'</span><span class="token comment" spellcheck="true">;</span>\n                    }\n                    return <span class="token punctuation">(</span>\n                    <span class="token operator">&lt;</span>Tag style<span class="token operator">=</span>{{padding<span class="token punctuation">:</span><span class="token string">\'5px\'</span>}} color<span class="token operator">=</span>{color} key<span class="token operator">=</span>{tag}<span class="token operator">></span>\n                        {tag<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>}\n                    <span class="token operator">&lt;</span><span class="token operator">/</span>Tag<span class="token operator">></span>\n                    <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                }<span class="token punctuation">)</span>}\n                <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">></span>\n            <span class="token punctuation">)</span><span class="token punctuation">,</span>\n        }<span class="token punctuation">,</span>\n        {\n            title<span class="token punctuation">:</span> <span class="token string">"操作"</span><span class="token punctuation">,</span>\n            dataIndex<span class="token punctuation">:</span> <span class="token string">"operation"</span><span class="token punctuation">,</span>\n            key<span class="token punctuation">:</span> <span class="token string">"operation"</span><span class="token punctuation">,</span>\n            fixed<span class="token punctuation">:</span> <span class="token string">\'right\'</span><span class="token punctuation">,</span>\n            render<span class="token punctuation">:</span> <span class="token punctuation">(</span>t<span class="token punctuation">,</span> r<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n            <span class="token keyword">const</span> btn <span class="token operator">=</span> <span class="token function">getOperationList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            return <span class="token function">renderTableOpts</span><span class="token punctuation">(</span>btn<span class="token punctuation">,</span> r<span class="token punctuation">)</span>\n            }\n        }<span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>\n    return columns<span class="token comment" spellcheck="true">;</span>\n}<span class="token comment" spellcheck="true">;</span>\n\n<span class="token keyword">const</span> QueryFormTable <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n    <span class="token keyword">const</span> <span class="token punctuation">[</span>loading<span class="token punctuation">,</span> setloading<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    <span class="token keyword">const</span> <span class="token punctuation">[</span>formData<span class="token punctuation">,</span> setFormData<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span>{}<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    <span class="token keyword">const</span> <span class="token punctuation">[</span>pagination<span class="token punctuation">,</span> setPagination<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span>{\n        current<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n        pageSize<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n        position<span class="token punctuation">:</span> <span class="token string">"bottomRight"</span><span class="token punctuation">,</span>\n        showSizeChanger<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        pageSizeOptions<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"10"</span><span class="token punctuation">,</span> <span class="token string">"20"</span><span class="token punctuation">,</span> <span class="token string">"50"</span><span class="token punctuation">,</span> <span class="token string">"100"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n    <span class="token keyword">const</span> <span class="token punctuation">[</span>dataSource<span class="token punctuation">,</span> setDataSource<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n    <span class="token keyword">const</span> queryUserList <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n        <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span>let key <span class="token operator">=</span> <span class="token number">0</span><span class="token comment" spellcheck="true">; key &lt; 20; key++) {</span>\n            data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>{\n                key<span class="token punctuation">,</span>\n                name<span class="token punctuation">:</span> <span class="token string">\'John Brown\'</span> <span class="token operator">+</span> key<span class="token punctuation">,</span>\n                age<span class="token punctuation">:</span> <span class="token number">40</span> <span class="token operator">-</span> key<span class="token punctuation">,</span>\n                address<span class="token punctuation">:</span> `New York No<span class="token punctuation">.</span> ${key} Lake Park`<span class="token punctuation">,</span>\n                tags<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'nice\'</span><span class="token punctuation">,</span> <span class="token string">\'developer\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n            }<span class="token punctuation">)</span>\n        }\n        return Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>{\n            bizData<span class="token punctuation">:</span> data<span class="token punctuation">,</span>\n            pagination<span class="token punctuation">:</span> {\n                total<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\n            }<span class="token punctuation">,</span>\n        }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }<span class="token comment" spellcheck="true">;</span>\n\n    <span class="token keyword">const</span> fetchUserList <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n        <span class="token keyword">const</span> { current<span class="token punctuation">,</span> pageSize } <span class="token operator">=</span> pagination<span class="token comment" spellcheck="true">;</span>\n        <span class="token function">setloading</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        <span class="token function">queryUserList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>res<span class="token punctuation">:</span> any<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">)</span> {\n            <span class="token function">setDataSource</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>bizData<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            <span class="token function">setPagination</span><span class="token punctuation">(</span><span class="token punctuation">(</span>origin<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n                return {\n                <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>origin<span class="token punctuation">,</span>\n                total<span class="token punctuation">:</span> res<span class="token punctuation">.</span>pagination<span class="token punctuation">.</span>total<span class="token punctuation">,</span>\n                }<span class="token comment" spellcheck="true">;</span>\n            }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            }\n        }<span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n            <span class="token function">setloading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }<span class="token comment" spellcheck="true">;</span>\n\n    <span class="token keyword">const</span> handleSubmit <span class="token operator">=</span> <span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n        <span class="token keyword">const</span> formData <span class="token operator">=</span> {\n        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>data<span class="token punctuation">,</span>\n        }<span class="token comment" spellcheck="true">;</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>formData<span class="token punctuation">,</span> <span class="token string">\'handleSubmit\'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        <span class="token function">setFormData</span><span class="token punctuation">(</span>formData<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }<span class="token comment" spellcheck="true">;</span>\n\n    <span class="token keyword">const</span> handleChange <span class="token operator">=</span> <span class="token punctuation">(</span>formData<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>formData<span class="token punctuation">,</span> <span class="token string">\'handleChange\'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        <span class="token function">setFormData</span><span class="token punctuation">(</span>formData<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }\n\n    <span class="token keyword">const</span> onTableChange <span class="token operator">=</span> <span class="token punctuation">(</span>pagination<span class="token punctuation">,</span> filters<span class="token punctuation">,</span> sorter<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n        <span class="token function">setPagination</span><span class="token punctuation">(</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> <span class="token string">\'valuess\'</span><span class="token punctuation">)</span>\n        return {\n            <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>value<span class="token punctuation">,</span>\n            <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>pagination\n        }<span class="token comment" spellcheck="true">;</span>\n        }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }<span class="token comment" spellcheck="true">;</span>\n\n    <span class="token keyword">const</span> getJsxElement <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n        return <span class="token operator">&lt;></span>\n        <span class="token operator">&lt;</span>Button type<span class="token operator">=</span><span class="token string">"primary"</span><span class="token operator">></span>Add<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>\n        <span class="token operator">&lt;</span>Button<span class="token operator">></span>Edit<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>\n        <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">></span>\n    }\n\n    React<span class="token punctuation">.</span><span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n        <span class="token function">fetchUserList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }<span class="token punctuation">,</span> <span class="token punctuation">[</span>formData<span class="token punctuation">,</span> pagination<span class="token punctuation">.</span>current<span class="token punctuation">,</span> pagination<span class="token punctuation">.</span>pageSize<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n    return <span class="token punctuation">(</span>\n      <span class="token operator">&lt;</span>ProTable\n        showQueryForm<span class="token operator">=</span>{<span class="token boolean">true</span>} <span class="token operator">/</span><span class="token operator">/</span> 是否展示queryForm筛选\n        queryFormProps<span class="token operator">=</span>{{\n          <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>getFormText<span class="token punctuation">,</span>\n          columns<span class="token punctuation">:</span> <span class="token function">getFormCol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          onSearch<span class="token punctuation">:</span> handleSubmit<span class="token punctuation">,</span>\n          onChange<span class="token punctuation">:</span> handleChange<span class="token punctuation">,</span>\n          initialValues<span class="token punctuation">:</span> formData<span class="token punctuation">,</span>\n          isResetClearAll<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        }}\n        tableProps<span class="token operator">=</span>{{\n          tableId<span class="token punctuation">:</span> <span class="token string">\'query_form_table\'</span><span class="token punctuation">,</span> <span class="token operator">/</span><span class="token operator">/</span> 用于本地存储不展示列数据\n          loading<span class="token punctuation">,</span>\n          rowKey<span class="token punctuation">:</span> <span class="token string">"key"</span><span class="token punctuation">,</span>\n          dataSource<span class="token punctuation">,</span>\n          tableScreen<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token operator">/</span><span class="token operator">/</span> 是否展示控制queryForm展开收起按钮\n          tableCustomColumns<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token operator">/</span><span class="token operator">/</span> 是否展示自定义列配置按钮\n          columns<span class="token punctuation">:</span> <span class="token function">getTableColumns</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          paginationProps<span class="token punctuation">:</span> { <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>pagination }<span class="token punctuation">,</span>\n          getJsxElement<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">getJsxElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          attrs<span class="token punctuation">:</span> {\n            onChange<span class="token punctuation">:</span> onTableChange<span class="token punctuation">,</span>\n            scroll<span class="token punctuation">:</span> {\n              x<span class="token punctuation">:</span> <span class="token string">\'max-content\'</span><span class="token punctuation">,</span>\n            }<span class="token punctuation">,</span>\n          }\n        }}\n      <span class="token operator">/</span><span class="token operator">></span>\n    <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n}<span class="token comment" spellcheck="true">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token operator">&lt;</span>QueryFormTable <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span>\n  mountNode\n<span class="token punctuation">)</span>'}],highlightedCodes:{tsx:'<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ProTable<span class="token punctuation">,</span> Select<span class="token punctuation">,</span> Button<span class="token punctuation">,</span> IconFont<span class="token punctuation">,</span> Tag <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'knowdesign\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> renderTableOpts <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'knowdesign/common-pages/render-table-opts\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">interface</span> <span class="token class-name">MiniSelectInterface</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>FC</span><span class="token operator">&lt;</span>any<span class="token operator">></span> <span class="token punctuation">{</span>\n    Option<span class="token operator">:</span> <span class="token keyword">typeof</span> Select<span class="token punctuation">.</span>Option<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> CustomSelect<span class="token operator">:</span> <span class="token function-variable function">MiniSelectInterface</span> <span class="token operator">=</span> props <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>自定义文案<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Select</span></span> <span class="token attr-name">bordered</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span></span> <span class="token attr-name">suffixIcon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">IconFont</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">\'</span>icon-xiala<span class="token punctuation">\'</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nCustomSelect<span class="token punctuation">.</span>Option <span class="token operator">=</span> Select<span class="token punctuation">.</span>Option<span class="token punctuation">;</span>\n\n\n<span class="token keyword">const</span> <span class="token function-variable function">getFormCol</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      type<span class="token operator">:</span> <span class="token string">"datePicker"</span><span class="token punctuation">,</span>\n      title<span class="token operator">:</span> <span class="token string">"日期选择"</span><span class="token punctuation">,</span>\n      dataIndex<span class="token operator">:</span> <span class="token string">"date1"</span><span class="token punctuation">,</span>\n      placeholder<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'请选择日期\'</span><span class="token punctuation">]</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      type<span class="token operator">:</span> <span class="token string">"dateRangePicker"</span><span class="token punctuation">,</span>\n      title<span class="token operator">:</span> <span class="token string">"日期范围选择"</span><span class="token punctuation">,</span>\n      dataIndex<span class="token operator">:</span> <span class="token string">"date2"</span><span class="token punctuation">,</span>\n      placeholder<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'开始日期\'</span><span class="token punctuation">,</span> <span class="token string">\'结束日期\'</span><span class="token punctuation">]</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      type<span class="token operator">:</span> <span class="token string">"timePicker"</span><span class="token punctuation">,</span>\n      title<span class="token operator">:</span> <span class="token string">"时间选择"</span><span class="token punctuation">,</span>\n      dataIndex<span class="token operator">:</span> <span class="token string">"time1"</span><span class="token punctuation">,</span>\n      placeholder<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'请选择时间\'</span><span class="token punctuation">]</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      type<span class="token operator">:</span> <span class="token string">"timeRangePicker"</span><span class="token punctuation">,</span>\n      title<span class="token operator">:</span> <span class="token string">"时间范围选择"</span><span class="token punctuation">,</span>\n      dataIndex<span class="token operator">:</span> <span class="token string">"time2"</span><span class="token punctuation">,</span>\n      placeholder<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'开始时间\'</span><span class="token punctuation">,</span> <span class="token string">\'结束时间\'</span><span class="token punctuation">]</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      type<span class="token operator">:</span> <span class="token string">"input"</span><span class="token punctuation">,</span>\n      title<span class="token operator">:</span> <span class="token string">"用户账号"</span><span class="token punctuation">,</span>\n      dataIndex<span class="token operator">:</span> <span class="token string">"username"</span><span class="token punctuation">,</span>\n      placeholder<span class="token operator">:</span> <span class="token string">"请输入用户账号"</span><span class="token punctuation">,</span>\n      componentProps<span class="token operator">:</span> <span class="token punctuation">{</span>\n        maxLength<span class="token operator">:</span> <span class="token number">128</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      type<span class="token operator">:</span> <span class="token string">"input"</span><span class="token punctuation">,</span>\n      title<span class="token operator">:</span> <span class="token string">"用户实名"</span><span class="token punctuation">,</span>\n      dataIndex<span class="token operator">:</span> <span class="token string">"realName"</span><span class="token punctuation">,</span>\n      placeholder<span class="token operator">:</span> <span class="token string">"请输入用户实名"</span><span class="token punctuation">,</span>\n      componentProps<span class="token operator">:</span> <span class="token punctuation">{</span>\n        maxLength<span class="token operator">:</span> <span class="token number">128</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      type<span class="token operator">:</span> <span class="token string">"select"</span><span class="token punctuation">,</span>\n      title<span class="token operator">:</span> <span class="token string">"城市"</span><span class="token punctuation">,</span>\n      dataIndex<span class="token operator">:</span> <span class="token string">"city"</span><span class="token punctuation">,</span>\n      placeholder<span class="token operator">:</span> <span class="token string">"请选择"</span><span class="token punctuation">,</span>\n      options<span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          title<span class="token operator">:</span> <span class="token string">\'北京\'</span><span class="token punctuation">,</span>\n          value<span class="token operator">:</span> <span class="token number">1</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n          title<span class="token operator">:</span> <span class="token string">\'南京\'</span><span class="token punctuation">,</span>\n          value<span class="token operator">:</span> <span class="token number">2</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">]</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> getFormText<span class="token operator">:</span> <span class="token punctuation">{</span> searchText<span class="token operator">:</span> string<span class="token punctuation">;</span> resetText<span class="token operator">:</span> string <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n    searchText<span class="token operator">:</span> <span class="token string">"查询"</span><span class="token punctuation">,</span>\n    resetText<span class="token operator">:</span> <span class="token string">"重置"</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token comment">// 获取 操作项相关配置</span>\n<span class="token keyword">const</span> <span class="token function-variable function">getOperationList</span> <span class="token operator">=</span> <span class="token punctuation">(</span>props<span class="token operator">?</span><span class="token operator">:</span> any<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      label<span class="token operator">:</span> <span class="token string">\'编辑\'</span><span class="token punctuation">,</span>\n      type<span class="token operator">:</span> <span class="token string">\'icon-bianji\'</span><span class="token punctuation">,</span>\n      <span class="token function-variable function">clickFunc</span><span class="token operator">:</span> <span class="token punctuation">(</span>record<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>record<span class="token punctuation">,</span> <span class="token string">\'edit click\'</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      label<span class="token operator">:</span> <span class="token string">\'删除\'</span><span class="token punctuation">,</span>\n      type<span class="token operator">:</span> <span class="token string">\'icon-shanchu\'</span><span class="token punctuation">,</span>\n      <span class="token function-variable function">clickFunc</span><span class="token operator">:</span> <span class="token punctuation">(</span>record<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>record<span class="token punctuation">,</span> <span class="token string">\'delete click\'</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      label<span class="token operator">:</span> <span class="token string">\'默认\'</span><span class="token punctuation">,</span>\n      type<span class="token operator">:</span> <span class="token string">\'icon-jiahao\'</span><span class="token punctuation">,</span>\n      <span class="token function-variable function">clickFunc</span><span class="token operator">:</span> <span class="token punctuation">(</span>record<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>record<span class="token punctuation">,</span> <span class="token string">\'default click\'</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      label<span class="token operator">:</span> <span class="token string">\'操作记录\'</span><span class="token punctuation">,</span>\n      type<span class="token operator">:</span> <span class="token string">\'icon-caozuojilu\'</span><span class="token punctuation">,</span>\n      <span class="token function-variable function">clickFunc</span><span class="token operator">:</span> <span class="token punctuation">(</span>record<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>record<span class="token punctuation">,</span> <span class="token string">\'测试 click\'</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      label<span class="token operator">:</span> <span class="token string">\'设置\'</span><span class="token punctuation">,</span>\n      type<span class="token operator">:</span> <span class="token string">\'icon-shezhi\'</span><span class="token punctuation">,</span>\n      <span class="token function-variable function">clickFunc</span><span class="token operator">:</span> <span class="token punctuation">(</span>record<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>record<span class="token punctuation">,</span> <span class="token string">\'测试 click\'</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token comment">// columns config</span>\n<span class="token keyword">const</span> <span class="token function-variable function">getTableColumns</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n            title<span class="token operator">:</span> <span class="token string">"Name"</span><span class="token punctuation">,</span>\n            dataIndex<span class="token operator">:</span> <span class="token string">"name"</span><span class="token punctuation">,</span>\n            key<span class="token operator">:</span> <span class="token string">"name"</span><span class="token punctuation">,</span>\n            width<span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n            title<span class="token operator">:</span> <span class="token string">"Age"</span><span class="token punctuation">,</span>\n            dataIndex<span class="token operator">:</span> <span class="token string">"age"</span><span class="token punctuation">,</span>\n            key<span class="token operator">:</span> <span class="token string">"age"</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n            title<span class="token operator">:</span> <span class="token string">"Address"</span><span class="token punctuation">,</span>\n            dataIndex<span class="token operator">:</span> <span class="token string">"address"</span><span class="token punctuation">,</span>\n            key<span class="token operator">:</span> <span class="token string">"address"</span><span class="token punctuation">,</span>\n            lineClampTwo<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            needTooltip<span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n            title<span class="token operator">:</span> <span class="token string">\'Tags\'</span><span class="token punctuation">,</span>\n            key<span class="token operator">:</span> <span class="token string">\'tags\'</span><span class="token punctuation">,</span>\n            dataIndex<span class="token operator">:</span> <span class="token string">\'tags\'</span><span class="token punctuation">,</span>\n            <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span>_<span class="token punctuation">,</span> <span class="token punctuation">{</span> tags <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>\n                <span class="token punctuation">{</span>tags<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>tag <span class="token operator">=></span> <span class="token punctuation">{</span>\n                    <span class="token keyword">let</span> color <span class="token operator">=</span> tag<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">5</span> <span class="token operator">?</span> <span class="token string">\'geekblue\'</span> <span class="token operator">:</span> <span class="token string">\'green\'</span><span class="token punctuation">;</span>\n                    <span class="token keyword">if</span> <span class="token punctuation">(</span>tag <span class="token operator">===</span> <span class="token string">\'loser\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    color <span class="token operator">=</span> <span class="token string">\'volcano\'</span><span class="token punctuation">;</span>\n                    <span class="token punctuation">}</span>\n                    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Tag</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>padding<span class="token operator">:</span><span class="token string">\'5px\'</span><span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token attr-name">color</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>color<span class="token punctuation">}</span></span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>tag<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n                        <span class="token punctuation">{</span>tag<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Tag</span></span><span class="token punctuation">></span></span>\n                    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>\n            <span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n            title<span class="token operator">:</span> <span class="token string">"操作"</span><span class="token punctuation">,</span>\n            dataIndex<span class="token operator">:</span> <span class="token string">"operation"</span><span class="token punctuation">,</span>\n            key<span class="token operator">:</span> <span class="token string">"operation"</span><span class="token punctuation">,</span>\n            fixed<span class="token operator">:</span> <span class="token string">\'right\'</span><span class="token punctuation">,</span>\n            <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span>t<span class="token punctuation">,</span> r<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">const</span> btn <span class="token operator">=</span> <span class="token function">getOperationList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">return</span> <span class="token function">renderTableOpts</span><span class="token punctuation">(</span>btn<span class="token punctuation">,</span> r<span class="token punctuation">)</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> columns<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">QueryFormTable</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">[</span>loading<span class="token punctuation">,</span> setloading<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> <span class="token punctuation">[</span>formData<span class="token punctuation">,</span> setFormData<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> <span class="token punctuation">[</span>pagination<span class="token punctuation">,</span> setPagination<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        current<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n        pageSize<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n        position<span class="token operator">:</span> <span class="token string">"bottomRight"</span><span class="token punctuation">,</span>\n        showSizeChanger<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        pageSizeOptions<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"10"</span><span class="token punctuation">,</span> <span class="token string">"20"</span><span class="token punctuation">,</span> <span class="token string">"50"</span><span class="token punctuation">,</span> <span class="token string">"100"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">const</span> <span class="token punctuation">[</span>dataSource<span class="token punctuation">,</span> setDataSource<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">const</span> <span class="token function-variable function">queryUserList</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> key <span class="token operator">&lt;</span> <span class="token number">20</span><span class="token punctuation">;</span> key<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                key<span class="token punctuation">,</span>\n                name<span class="token operator">:</span> <span class="token string">\'John Brown\'</span> <span class="token operator">+</span> key<span class="token punctuation">,</span>\n                age<span class="token operator">:</span> <span class="token number">40</span> <span class="token operator">-</span> key<span class="token punctuation">,</span>\n                address<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">New York No. </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> Lake Park</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n                tags<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'nice\'</span><span class="token punctuation">,</span> <span class="token string">\'developer\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            bizData<span class="token operator">:</span> data<span class="token punctuation">,</span>\n            pagination<span class="token operator">:</span> <span class="token punctuation">{</span>\n                total<span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">const</span> <span class="token function-variable function">fetchUserList</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> <span class="token punctuation">{</span> current<span class="token punctuation">,</span> pageSize <span class="token punctuation">}</span> <span class="token operator">=</span> pagination<span class="token punctuation">;</span>\n        <span class="token function">setloading</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token function">queryUserList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>res<span class="token operator">:</span> any<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token function">setDataSource</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>bizData<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token function">setPagination</span><span class="token punctuation">(</span><span class="token punctuation">(</span>origin<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                <span class="token keyword">return</span> <span class="token punctuation">{</span>\n                <span class="token operator">...</span>origin<span class="token punctuation">,</span>\n                total<span class="token operator">:</span> res<span class="token punctuation">.</span>pagination<span class="token punctuation">.</span>total<span class="token punctuation">,</span>\n                <span class="token punctuation">}</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token function">setloading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">const</span> <span class="token function-variable function">handleSubmit</span> <span class="token operator">=</span> <span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> formData <span class="token operator">=</span> <span class="token punctuation">{</span>\n        <span class="token operator">...</span>data<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>formData<span class="token punctuation">,</span> <span class="token string">\'handleSubmit\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token function">setFormData</span><span class="token punctuation">(</span>formData<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">const</span> <span class="token function-variable function">handleChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span>formData<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>formData<span class="token punctuation">,</span> <span class="token string">\'handleChange\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token function">setFormData</span><span class="token punctuation">(</span>formData<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">const</span> <span class="token function-variable function">onTableChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span>pagination<span class="token punctuation">,</span> filters<span class="token punctuation">,</span> sorter<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token function">setPagination</span><span class="token punctuation">(</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> <span class="token string">\'valuess\'</span><span class="token punctuation">)</span>\n        <span class="token keyword">return</span> <span class="token punctuation">{</span>\n            <span class="token operator">...</span>value<span class="token punctuation">,</span>\n            <span class="token operator">...</span>pagination\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">const</span> <span class="token function-variable function">getJsxElement</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Add<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>Edit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>\n    <span class="token punctuation">}</span>\n\n    React<span class="token punctuation">.</span><span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token function">fetchUserList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>formData<span class="token punctuation">,</span> pagination<span class="token punctuation">.</span>current<span class="token punctuation">,</span> pagination<span class="token punctuation">.</span>pageSize<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token operator">&lt;</span>ProTable\n        showQueryForm<span class="token operator">=</span><span class="token punctuation">{</span><span class="token boolean">true</span><span class="token punctuation">}</span> <span class="token comment">// 是否展示queryForm筛选</span>\n        queryFormProps<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          <span class="token operator">...</span>getFormText<span class="token punctuation">,</span>\n          columns<span class="token operator">:</span> <span class="token function">getFormCol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          onSearch<span class="token operator">:</span> handleSubmit<span class="token punctuation">,</span>\n          onChange<span class="token operator">:</span> handleChange<span class="token punctuation">,</span>\n          initialValues<span class="token operator">:</span> formData<span class="token punctuation">,</span>\n          isResetClearAll<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        tableProps<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          tableId<span class="token operator">:</span> <span class="token string">\'query_form_table\'</span><span class="token punctuation">,</span> <span class="token comment">// 用于本地存储不展示列数据</span>\n          loading<span class="token punctuation">,</span>\n          rowKey<span class="token operator">:</span> <span class="token string">"key"</span><span class="token punctuation">,</span>\n          dataSource<span class="token punctuation">,</span>\n          tableScreen<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 是否展示控制queryForm展开收起按钮</span>\n          tableCustomColumns<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 是否展示自定义列配置按钮</span>\n          columns<span class="token operator">:</span> <span class="token function">getTableColumns</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          paginationProps<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token operator">...</span>pagination <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token function-variable function">getJsxElement</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">getJsxElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          attrs<span class="token operator">:</span> <span class="token punctuation">{</span>\n            onChange<span class="token operator">:</span> onTableChange<span class="token punctuation">,</span>\n            scroll<span class="token operator">:</span> <span class="token punctuation">{</span>\n              x<span class="token operator">:</span> <span class="token string">\'max-content\'</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span>\n      <span class="token operator">/</span><span class="token operator">></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">QueryFormTable</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n  mountNode\n<span class="token punctuation">)</span>',jsx:'<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ProTable<span class="token punctuation">,</span> Select<span class="token punctuation">,</span> Button<span class="token punctuation">,</span> IconFont<span class="token punctuation">,</span> Tag <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'knowdesign\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> renderTableOpts <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'knowdesign/common-pages/render-table-opts\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">CustomSelect</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>自定义文案<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Select</span></span> <span class="token attr-name">bordered</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span></span> <span class="token attr-name">suffixIcon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">IconFont</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>icon-xiala<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nCustomSelect<span class="token punctuation">.</span>Option <span class="token operator">=</span> Select<span class="token punctuation">.</span>Option<span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">getFormCol</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'datePicker\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'日期选择\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">\'date1\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">placeholder</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'请选择日期\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'dateRangePicker\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'日期范围选择\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">\'date2\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">placeholder</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'开始日期\'</span><span class="token punctuation">,</span> <span class="token string">\'结束日期\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'timePicker\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'时间选择\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">\'time1\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">placeholder</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'请选择时间\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'timeRangePicker\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'时间范围选择\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">\'time2\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">placeholder</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'开始时间\'</span><span class="token punctuation">,</span> <span class="token string">\'结束时间\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'input\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'用户账号\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">\'username\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">placeholder</span><span class="token operator">:</span> <span class="token string">\'请输入用户账号\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">componentProps</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">maxLength</span><span class="token operator">:</span> <span class="token number">128</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'input\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'用户实名\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">\'realName\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">placeholder</span><span class="token operator">:</span> <span class="token string">\'请输入用户实名\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">componentProps</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">maxLength</span><span class="token operator">:</span> <span class="token number">128</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'select\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'城市\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">\'city\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">placeholder</span><span class="token operator">:</span> <span class="token string">\'请选择\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'北京\'</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n          <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'南京\'</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> getFormText <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">searchText</span><span class="token operator">:</span> <span class="token string">\'查询\'</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">resetText</span><span class="token operator">:</span> <span class="token string">\'重置\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// 获取 操作项相关配置</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">getOperationList</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">\'编辑\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'icon-bianji\'</span><span class="token punctuation">,</span>\n      <span class="token function-variable function">clickFunc</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">record</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>record<span class="token punctuation">,</span> <span class="token string">\'edit click\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">\'删除\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'icon-shanchu\'</span><span class="token punctuation">,</span>\n      <span class="token function-variable function">clickFunc</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">record</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>record<span class="token punctuation">,</span> <span class="token string">\'delete click\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">\'默认\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'icon-jiahao\'</span><span class="token punctuation">,</span>\n      <span class="token function-variable function">clickFunc</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">record</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>record<span class="token punctuation">,</span> <span class="token string">\'default click\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">\'操作记录\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'icon-caozuojilu\'</span><span class="token punctuation">,</span>\n      <span class="token function-variable function">clickFunc</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">record</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>record<span class="token punctuation">,</span> <span class="token string">\'测试 click\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">\'设置\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'icon-shezhi\'</span><span class="token punctuation">,</span>\n      <span class="token function-variable function">clickFunc</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">record</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>record<span class="token punctuation">,</span> <span class="token string">\'测试 click\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// columns config</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">getTableColumns</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'Name\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'Age\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'Address\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">lineClampTwo</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">needTooltip</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'Tags\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">\'tags\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">\'tags\'</span><span class="token punctuation">,</span>\n      <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">_<span class="token punctuation">,</span> <span class="token punctuation">{</span> tags <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>\n          <span class="token punctuation">{</span>tags<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">tag</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">let</span> color <span class="token operator">=</span> tag<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">5</span> <span class="token operator">?</span> <span class="token string">\'geekblue\'</span> <span class="token operator">:</span> <span class="token string">\'green\'</span><span class="token punctuation">;</span>\n\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>tag <span class="token operator">===</span> <span class="token string">\'loser\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n              color <span class="token operator">=</span> <span class="token string">\'volcano\'</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n\n            <span class="token keyword">return</span> <span class="token punctuation">(</span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Tag</span></span>\n                <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n                  <span class="token literal-property property">padding</span><span class="token operator">:</span> <span class="token string">\'5px\'</span><span class="token punctuation">,</span>\n                <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n                <span class="token attr-name">color</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>color<span class="token punctuation">}</span></span>\n                <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>tag<span class="token punctuation">}</span></span>\n              <span class="token punctuation">></span></span>\n                <span class="token punctuation">{</span>tag<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Tag</span></span><span class="token punctuation">></span></span>\n            <span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>\n      <span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'操作\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">\'operation\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">\'operation\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">fixed</span><span class="token operator">:</span> <span class="token string">\'right\'</span><span class="token punctuation">,</span>\n      <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> r</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> btn <span class="token operator">=</span> <span class="token function">getOperationList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> <span class="token function">renderTableOpts</span><span class="token punctuation">(</span>btn<span class="token punctuation">,</span> r<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> columns<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">QueryFormTable</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>loading<span class="token punctuation">,</span> setloading<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>formData<span class="token punctuation">,</span> setFormData<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>pagination<span class="token punctuation">,</span> setPagination<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">current</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">pageSize</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">position</span><span class="token operator">:</span> <span class="token string">\'bottomRight\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">showSizeChanger</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">pageSizeOptions</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'10\'</span><span class="token punctuation">,</span> <span class="token string">\'20\'</span><span class="token punctuation">,</span> <span class="token string">\'50\'</span><span class="token punctuation">,</span> <span class="token string">\'100\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>dataSource<span class="token punctuation">,</span> setDataSource<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">queryUserList</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> key <span class="token operator">&lt;</span> <span class="token number">20</span><span class="token punctuation">;</span> key<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        key<span class="token punctuation">,</span>\n        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'John Brown\'</span> <span class="token operator">+</span> key<span class="token punctuation">,</span>\n        <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">40</span> <span class="token operator">-</span> key<span class="token punctuation">,</span>\n        <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">New York No. </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> Lake Park</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n        <span class="token literal-property property">tags</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'nice\'</span><span class="token punctuation">,</span> <span class="token string">\'developer\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token literal-property property">bizData</span><span class="token operator">:</span> data<span class="token punctuation">,</span>\n      <span class="token literal-property property">pagination</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">total</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">fetchUserList</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> current<span class="token punctuation">,</span> pageSize <span class="token punctuation">}</span> <span class="token operator">=</span> pagination<span class="token punctuation">;</span>\n    <span class="token function">setloading</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">queryUserList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token function">setDataSource</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>bizData<span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token function">setPagination</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">origin</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token operator">...</span>origin<span class="token punctuation">,</span> <span class="token literal-property property">total</span><span class="token operator">:</span> res<span class="token punctuation">.</span>pagination<span class="token punctuation">.</span>total <span class="token punctuation">}</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token function">setloading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">handleSubmit</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> formData <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span>data <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>formData<span class="token punctuation">,</span> <span class="token string">\'handleSubmit\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">setFormData</span><span class="token punctuation">(</span>formData<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">handleChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">formData</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>formData<span class="token punctuation">,</span> <span class="token string">\'handleChange\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">setFormData</span><span class="token punctuation">(</span>formData<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">onTableChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">pagination<span class="token punctuation">,</span> filters<span class="token punctuation">,</span> sorter</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">setPagination</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> <span class="token string">\'valuess\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token operator">...</span>value<span class="token punctuation">,</span> <span class="token operator">...</span>pagination <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">getJsxElement</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Add<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>Edit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  React<span class="token punctuation">.</span><span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">fetchUserList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>formData<span class="token punctuation">,</span> pagination<span class="token punctuation">.</span>current<span class="token punctuation">,</span> pagination<span class="token punctuation">.</span>pageSize<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token operator">&lt;</span>ProTable\n      showQueryForm<span class="token operator">=</span><span class="token punctuation">{</span><span class="token boolean">true</span><span class="token punctuation">}</span> <span class="token comment">// 是否展示queryForm筛选</span>\n      queryFormProps<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n        <span class="token operator">...</span>getFormText<span class="token punctuation">,</span>\n        <span class="token literal-property property">columns</span><span class="token operator">:</span> <span class="token function">getFormCol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">onSearch</span><span class="token operator">:</span> handleSubmit<span class="token punctuation">,</span>\n        <span class="token literal-property property">onChange</span><span class="token operator">:</span> handleChange<span class="token punctuation">,</span>\n        <span class="token literal-property property">initialValues</span><span class="token operator">:</span> formData<span class="token punctuation">,</span>\n        <span class="token literal-property property">isResetClearAll</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">}</span>\n      tableProps<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">tableId</span><span class="token operator">:</span> <span class="token string">\'query_form_table\'</span><span class="token punctuation">,</span>\n        <span class="token comment">// 用于本地存储不展示列数据</span>\n        loading<span class="token punctuation">,</span>\n        <span class="token literal-property property">rowKey</span><span class="token operator">:</span> <span class="token string">\'key\'</span><span class="token punctuation">,</span>\n        dataSource<span class="token punctuation">,</span>\n        <span class="token literal-property property">tableScreen</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        <span class="token comment">// 是否展示控制queryForm展开收起按钮</span>\n        <span class="token literal-property property">tableCustomColumns</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        <span class="token comment">// 是否展示自定义列配置按钮</span>\n        <span class="token literal-property property">columns</span><span class="token operator">:</span> <span class="token function">getTableColumns</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">paginationProps</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token operator">...</span>pagination <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">getJsxElement</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">getJsxElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">attrs</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token literal-property property">onChange</span><span class="token operator">:</span> onTableChange<span class="token punctuation">,</span>\n          <span class="token literal-property property">scroll</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token string">\'max-content\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">}</span>\n    <span class="token operator">/</span><span class="token operator">></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">QueryFormTable</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>\n'},preview:function(){a(0),a(35);function n(s){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(s)}var s=function(s,a){if(!a&&s&&s.__esModule)return s;if(null===s||"object"!==n(s)&&"function"!=typeof s)return{default:s};var t=o(a);if(t&&t.has(s))return t.get(s);var p={},e=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var c in s)if("default"!==c&&Object.prototype.hasOwnProperty.call(s,c)){var l=e?Object.getOwnPropertyDescriptor(s,c):null;l&&(l.get||l.set)?Object.defineProperty(p,c,l):p[c]=s[c]}p.default=s,t&&t.set(s,p);return p}(a(0)),t=a(96),p=a(194);function o(n){if("function"!=typeof WeakMap)return null;var s=new WeakMap,a=new WeakMap;return(o=function(n){return n?a:s})(n)}function e(n,s){var a=Object.keys(n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(n);s&&(t=t.filter((function(s){return Object.getOwnPropertyDescriptor(n,s).enumerable}))),a.push.apply(a,t)}return a}function c(n){for(var s=1;s<arguments.length;s++){var a=null!=arguments[s]?arguments[s]:{};s%2?e(Object(a),!0).forEach((function(s){l(n,s,a[s])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(a)):e(Object(a)).forEach((function(s){Object.defineProperty(n,s,Object.getOwnPropertyDescriptor(a,s))}))}return n}function l(n,s,a){return s in n?Object.defineProperty(n,s,{value:a,enumerable:!0,configurable:!0,writable:!0}):n[s]=a,n}function u(n,s){return function(n){if(Array.isArray(n))return n}(n)||function(n,s){var a=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null==a)return;var t,p,o=[],e=!0,c=!1;try{for(a=a.call(n);!(e=(t=a.next()).done)&&(o.push(t.value),!s||o.length!==s);e=!0);}catch(n){c=!0,p=n}finally{try{e||null==a.return||a.return()}finally{if(c)throw p}}return o}(n,s)||function(n,s){if(!n)return;if("string"==typeof n)return k(n,s);var a=Object.prototype.toString.call(n).slice(8,-1);"Object"===a&&n.constructor&&(a=n.constructor.name);if("Map"===a||"Set"===a)return Array.from(n);if("Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a))return k(n,s)}(n,s)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function k(n,s){(null==s||s>n.length)&&(s=n.length);for(var a=0,t=new Array(s);a<s;a++)t[a]=n[a];return t}t.Select.Option;var i={searchText:"查询",resetText:"重置"},r=function(){return[{title:"Name",dataIndex:"name",key:"name",width:200},{title:"Age",dataIndex:"age",key:"age"},{title:"Address",dataIndex:"address",key:"address",lineClampTwo:!0,needTooltip:!0},{title:"Tags",key:"tags",dataIndex:"tags",render:function(n,a){var p=a.tags;return s.default.createElement(s.default.Fragment,null,p.map((function(n){var a=n.length>5?"geekblue":"green";return"loser"===n&&(a="volcano"),s.default.createElement(t.Tag,{style:{padding:"5px"},color:a,key:n},n.toUpperCase())})))}},{title:"操作",dataIndex:"operation",key:"operation",fixed:"right",render:function(n,s){var a=[{label:"编辑",type:"icon-bianji",clickFunc:function(n){console.log(n,"edit click")}},{label:"删除",type:"icon-shanchu",clickFunc:function(n){console.log(n,"delete click")}},{label:"默认",type:"icon-jiahao",clickFunc:function(n){console.log(n,"default click")}},{label:"操作记录",type:"icon-caozuojilu",clickFunc:function(n){console.log(n,"测试 click")}},{label:"设置",type:"icon-shezhi",clickFunc:function(n){console.log(n,"测试 click")}}];return(0,p.renderTableOpts)(a,s)}}]},g=function(){var n=u((0,s.useState)(!1),2),a=n[0],p=n[1],o=u((0,s.useState)({}),2),e=o[0],l=o[1],k=u((0,s.useState)({current:1,pageSize:10,position:"bottomRight",showSizeChanger:!0,pageSizeOptions:["10","20","50","100"]}),2),g=k[0],d=k[1],m=u((0,s.useState)([]),2),y=m[0],f=m[1],b=function(){g.current,g.pageSize;p(!0),function(){for(var n=[],s=0;s<20;s++)n.push({key:s,name:"John Brown"+s,age:40-s,address:"New York No. ".concat(s," Lake Park"),tags:["nice","developer"]});return Promise.resolve({bizData:n,pagination:{total:20}})}().then((function(n){n&&(f(n.bizData),d((function(s){return c(c({},s),{},{total:n.pagination.total})})))})).finally((function(){p(!1)}))};return s.default.useEffect((function(){b()}),[e,g.current,g.pageSize]),s.default.createElement(t.ProTable,{showQueryForm:!0,queryFormProps:c(c({},i),{},{columns:[{type:"datePicker",title:"日期选择",dataIndex:"date1",placeholder:["请选择日期"]},{type:"dateRangePicker",title:"日期范围选择",dataIndex:"date2",placeholder:["开始日期","结束日期"]},{type:"timePicker",title:"时间选择",dataIndex:"time1",placeholder:["请选择时间"]},{type:"timeRangePicker",title:"时间范围选择",dataIndex:"time2",placeholder:["开始时间","结束时间"]},{type:"input",title:"用户账号",dataIndex:"username",placeholder:"请输入用户账号",componentProps:{maxLength:128}},{type:"input",title:"用户实名",dataIndex:"realName",placeholder:"请输入用户实名",componentProps:{maxLength:128}},{type:"select",title:"城市",dataIndex:"city",placeholder:"请选择",options:[{title:"北京",value:1},{title:"南京",value:2}]}],onSearch:function(n){var s=c({},n);console.log(s,"handleSubmit"),l(s)},onChange:function(n){console.log(n,"handleChange"),l(n)},initialValues:e,isResetClearAll:!0}),tableProps:{tableId:"query_form_table",loading:a,rowKey:"key",dataSource:y,tableScreen:!0,tableCustomColumns:!0,columns:r(),paginationProps:c({},g),getJsxElement:function(){return s.default.createElement(s.default.Fragment,null,s.default.createElement(t.Button,{type:"primary"},"Add"),s.default.createElement(t.Button,null,"Edit"))},attrs:{onChange:function(n,s,a){d((function(s){return console.log(s,"valuess"),c(c({},s),n)}))},scroll:{x:"max-content"}}}})};return s.default.createElement(g,null)}}},5243:function(n,s,a){n.exports={content:{"zh-CN":[["p","带有查询表单和自定义列的表格"],["blockquote",["p","onCollapse 为 false 的时候，会覆盖ProTable 传入的 onCollapse 函数，变成由QueryForm内部控制展开收起;"]]],"en-US":[["p","Add Table of Queryform"]]},meta:{order:4,title:"带有查询表单的Table",filename:"components/extend/pro-table/demo/QueryFormTableOther.md",id:"components-extend-pro-table-demo-QueryFormTableOther"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:'import React<span class="token punctuation">,</span> { useState } from <span class="token string">"react"</span><span class="token comment" spellcheck="true">;</span>\nimport { ProTable<span class="token punctuation">,</span> <span class="token keyword">Select</span><span class="token punctuation">,</span> Button<span class="token punctuation">,</span> IconFont<span class="token punctuation">,</span> Tag } from <span class="token string">\'knowdesign\'</span><span class="token comment" spellcheck="true">;</span>\nimport { renderTableOpts } from <span class="token string">\'knowdesign/common-pages/render-table-opts\'</span><span class="token comment" spellcheck="true">;</span>\n\ninterface MiniSelectInterface extends React<span class="token punctuation">.</span>FC<span class="token operator">&lt;</span>any<span class="token operator">></span> {\n    Option<span class="token punctuation">:</span> typeof <span class="token keyword">Select</span><span class="token punctuation">.</span>Option<span class="token comment" spellcheck="true">;</span>\n}\n\n<span class="token keyword">const</span> CustomSelect<span class="token punctuation">:</span> MiniSelectInterface <span class="token operator">=</span> props <span class="token operator">=</span><span class="token operator">></span> {\n    return <span class="token operator">&lt;></span>\n        <span class="token operator">&lt;</span>span<span class="token operator">></span>自定义文案<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>\n        <span class="token operator">&lt;</span><span class="token keyword">Select</span> bordered<span class="token operator">=</span>{<span class="token boolean">false</span>} suffixIcon<span class="token operator">=</span>{<span class="token operator">&lt;</span>IconFont type<span class="token operator">=</span><span class="token string">\'icon-xiala\'</span> <span class="token operator">/</span><span class="token operator">></span>} {<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>props} <span class="token operator">/</span><span class="token operator">></span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">></span>\n}<span class="token comment" spellcheck="true">;</span>\n\nCustomSelect<span class="token punctuation">.</span>Option <span class="token operator">=</span> <span class="token keyword">Select</span><span class="token punctuation">.</span>Option<span class="token comment" spellcheck="true">;</span>\n\n\n<span class="token keyword">const</span> getFormCol <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n  return <span class="token punctuation">[</span>\n    {\n      type<span class="token punctuation">:</span> <span class="token string">"datePicker"</span><span class="token punctuation">,</span>\n      title<span class="token punctuation">:</span> <span class="token string">"日期选择"</span><span class="token punctuation">,</span>\n      dataIndex<span class="token punctuation">:</span> <span class="token string">"date1"</span><span class="token punctuation">,</span>\n      placeholder<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'请选择日期\'</span><span class="token punctuation">]</span>\n    }<span class="token punctuation">,</span>\n    {\n      type<span class="token punctuation">:</span> <span class="token string">"dateRangePicker"</span><span class="token punctuation">,</span>\n      title<span class="token punctuation">:</span> <span class="token string">"日期范围选择"</span><span class="token punctuation">,</span>\n      dataIndex<span class="token punctuation">:</span> <span class="token string">"date2"</span><span class="token punctuation">,</span>\n      placeholder<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'开始日期\'</span><span class="token punctuation">,</span> <span class="token string">\'结束日期\'</span><span class="token punctuation">]</span>\n    }<span class="token punctuation">,</span>\n    {\n      type<span class="token punctuation">:</span> <span class="token string">"timePicker"</span><span class="token punctuation">,</span>\n      title<span class="token punctuation">:</span> <span class="token string">"时间选择"</span><span class="token punctuation">,</span>\n      dataIndex<span class="token punctuation">:</span> <span class="token string">"time1"</span><span class="token punctuation">,</span>\n      placeholder<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'请选择时间\'</span><span class="token punctuation">]</span>\n    }<span class="token punctuation">,</span>\n    {\n      type<span class="token punctuation">:</span> <span class="token string">"timeRangePicker"</span><span class="token punctuation">,</span>\n      title<span class="token punctuation">:</span> <span class="token string">"时间范围选择"</span><span class="token punctuation">,</span>\n      dataIndex<span class="token punctuation">:</span> <span class="token string">"time2"</span><span class="token punctuation">,</span>\n      placeholder<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'开始时间\'</span><span class="token punctuation">,</span> <span class="token string">\'结束时间\'</span><span class="token punctuation">]</span>\n    }<span class="token punctuation">,</span>\n    {\n      type<span class="token punctuation">:</span> <span class="token string">"input"</span><span class="token punctuation">,</span>\n      title<span class="token punctuation">:</span> <span class="token string">"用户账号"</span><span class="token punctuation">,</span>\n      dataIndex<span class="token punctuation">:</span> <span class="token string">"username"</span><span class="token punctuation">,</span>\n      placeholder<span class="token punctuation">:</span> <span class="token string">"请输入用户账号"</span><span class="token punctuation">,</span>\n      componentProps<span class="token punctuation">:</span> {\n        maxLength<span class="token punctuation">:</span> <span class="token number">128</span><span class="token punctuation">,</span>\n      }<span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n    {\n      type<span class="token punctuation">:</span> <span class="token string">"input"</span><span class="token punctuation">,</span>\n      title<span class="token punctuation">:</span> <span class="token string">"用户实名"</span><span class="token punctuation">,</span>\n      dataIndex<span class="token punctuation">:</span> <span class="token string">"realName"</span><span class="token punctuation">,</span>\n      placeholder<span class="token punctuation">:</span> <span class="token string">"请输入用户实名"</span><span class="token punctuation">,</span>\n      componentProps<span class="token punctuation">:</span> {\n        maxLength<span class="token punctuation">:</span> <span class="token number">128</span><span class="token punctuation">,</span>\n      }<span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n    {\n      type<span class="token punctuation">:</span> <span class="token string">"select"</span><span class="token punctuation">,</span>\n      title<span class="token punctuation">:</span> <span class="token string">"城市"</span><span class="token punctuation">,</span>\n      dataIndex<span class="token punctuation">:</span> <span class="token string">"city"</span><span class="token punctuation">,</span>\n      placeholder<span class="token punctuation">:</span> <span class="token string">"请选择"</span><span class="token punctuation">,</span>\n      options<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n        {\n          title<span class="token punctuation">:</span> <span class="token string">\'北京\'</span><span class="token punctuation">,</span>\n          value<span class="token punctuation">:</span> <span class="token number">1</span>\n        }<span class="token punctuation">,</span>\n        {\n          title<span class="token punctuation">:</span> <span class="token string">\'南京\'</span><span class="token punctuation">,</span>\n          value<span class="token punctuation">:</span> <span class="token number">2</span>\n        }\n      <span class="token punctuation">]</span>\n    }\n  <span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>\n}<span class="token comment" spellcheck="true">;</span>\n\n<span class="token keyword">const</span> getFormText<span class="token punctuation">:</span> { searchText<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">; resetText: string } = {</span>\n    searchText<span class="token punctuation">:</span> <span class="token string">"查询"</span><span class="token punctuation">,</span>\n    resetText<span class="token punctuation">:</span> <span class="token string">"重置"</span><span class="token punctuation">,</span>\n}<span class="token comment" spellcheck="true">;</span>\n<span class="token operator">/</span><span class="token operator">/</span> 获取 操作项相关配置\n<span class="token keyword">const</span> getOperationList <span class="token operator">=</span> <span class="token punctuation">(</span>props<span class="token operator">?</span><span class="token punctuation">:</span> any<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n  return <span class="token punctuation">[</span>\n    {\n      label<span class="token punctuation">:</span> <span class="token string">\'编辑\'</span><span class="token punctuation">,</span>\n      type<span class="token punctuation">:</span> <span class="token string">\'icon-bianji\'</span><span class="token punctuation">,</span>\n      clickFunc<span class="token punctuation">:</span> <span class="token punctuation">(</span>record<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>record<span class="token punctuation">,</span> <span class="token string">\'edit click\'</span><span class="token punctuation">)</span>\n      }<span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n    {\n      label<span class="token punctuation">:</span> <span class="token string">\'删除\'</span><span class="token punctuation">,</span>\n      type<span class="token punctuation">:</span> <span class="token string">\'icon-shanchu\'</span><span class="token punctuation">,</span>\n      clickFunc<span class="token punctuation">:</span> <span class="token punctuation">(</span>record<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>record<span class="token punctuation">,</span> <span class="token string">\'delete click\'</span><span class="token punctuation">)</span>\n      }<span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n    {\n      label<span class="token punctuation">:</span> <span class="token string">\'默认\'</span><span class="token punctuation">,</span>\n      type<span class="token punctuation">:</span> <span class="token string">\'icon-jiahao\'</span><span class="token punctuation">,</span>\n      clickFunc<span class="token punctuation">:</span> <span class="token punctuation">(</span>record<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>record<span class="token punctuation">,</span> <span class="token string">\'default click\'</span><span class="token punctuation">)</span>\n      }<span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n    {\n      label<span class="token punctuation">:</span> <span class="token string">\'操作记录\'</span><span class="token punctuation">,</span>\n      type<span class="token punctuation">:</span> <span class="token string">\'icon-caozuojilu\'</span><span class="token punctuation">,</span>\n      clickFunc<span class="token punctuation">:</span> <span class="token punctuation">(</span>record<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>record<span class="token punctuation">,</span> <span class="token string">\'测试 click\'</span><span class="token punctuation">)</span>\n      }<span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n    {\n      label<span class="token punctuation">:</span> <span class="token string">\'设置\'</span><span class="token punctuation">,</span>\n      type<span class="token punctuation">:</span> <span class="token string">\'icon-shezhi\'</span><span class="token punctuation">,</span>\n      clickFunc<span class="token punctuation">:</span> <span class="token punctuation">(</span>record<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>record<span class="token punctuation">,</span> <span class="token string">\'测试 click\'</span><span class="token punctuation">)</span>\n      }<span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>\n}<span class="token comment" spellcheck="true">;</span>\n<span class="token operator">/</span><span class="token operator">/</span> columns config\n<span class="token keyword">const</span> getTableColumns <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n    <span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n        {\n            title<span class="token punctuation">:</span> <span class="token string">"Name"</span><span class="token punctuation">,</span>\n            dataIndex<span class="token punctuation">:</span> <span class="token string">"name"</span><span class="token punctuation">,</span>\n            key<span class="token punctuation">:</span> <span class="token string">"name"</span><span class="token punctuation">,</span>\n            width<span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">,</span>\n        }<span class="token punctuation">,</span>\n        {\n            title<span class="token punctuation">:</span> <span class="token string">"Age"</span><span class="token punctuation">,</span>\n            dataIndex<span class="token punctuation">:</span> <span class="token string">"age"</span><span class="token punctuation">,</span>\n            key<span class="token punctuation">:</span> <span class="token string">"age"</span><span class="token punctuation">,</span>\n        }<span class="token punctuation">,</span>\n        {\n            title<span class="token punctuation">:</span> <span class="token string">"Address"</span><span class="token punctuation">,</span>\n            dataIndex<span class="token punctuation">:</span> <span class="token string">"address"</span><span class="token punctuation">,</span>\n            key<span class="token punctuation">:</span> <span class="token string">"address"</span><span class="token punctuation">,</span>\n            lineClampTwo<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            needTooltip<span class="token punctuation">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>\n        }<span class="token punctuation">,</span>\n        {\n            title<span class="token punctuation">:</span> <span class="token string">\'Tags\'</span><span class="token punctuation">,</span>\n            key<span class="token punctuation">:</span> <span class="token string">\'tags\'</span><span class="token punctuation">,</span>\n            dataIndex<span class="token punctuation">:</span> <span class="token string">\'tags\'</span><span class="token punctuation">,</span>\n            render<span class="token punctuation">:</span> <span class="token punctuation">(</span>_<span class="token punctuation">,</span> { tags }<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>\n                <span class="token operator">&lt;></span>\n                {tags<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>tag <span class="token operator">=</span><span class="token operator">></span> {\n                    let color <span class="token operator">=</span> tag<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">5</span> <span class="token operator">?</span> <span class="token string">\'geekblue\'</span> <span class="token punctuation">:</span> <span class="token string">\'green\'</span><span class="token comment" spellcheck="true">;</span>\n                    <span class="token keyword">if</span> <span class="token punctuation">(</span>tag <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">\'loser\'</span><span class="token punctuation">)</span> {\n                    color <span class="token operator">=</span> <span class="token string">\'volcano\'</span><span class="token comment" spellcheck="true">;</span>\n                    }\n                    return <span class="token punctuation">(</span>\n                    <span class="token operator">&lt;</span>Tag style<span class="token operator">=</span>{{padding<span class="token punctuation">:</span><span class="token string">\'5px\'</span>}} color<span class="token operator">=</span>{color} key<span class="token operator">=</span>{tag}<span class="token operator">></span>\n                        {tag<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>}\n                    <span class="token operator">&lt;</span><span class="token operator">/</span>Tag<span class="token operator">></span>\n                    <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                }<span class="token punctuation">)</span>}\n                <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">></span>\n            <span class="token punctuation">)</span><span class="token punctuation">,</span>\n        }<span class="token punctuation">,</span>\n        {\n            title<span class="token punctuation">:</span> <span class="token string">"操作"</span><span class="token punctuation">,</span>\n            dataIndex<span class="token punctuation">:</span> <span class="token string">"operation"</span><span class="token punctuation">,</span>\n            key<span class="token punctuation">:</span> <span class="token string">"operation"</span><span class="token punctuation">,</span>\n            fixed<span class="token punctuation">:</span> <span class="token string">\'right\'</span><span class="token punctuation">,</span>\n            render<span class="token punctuation">:</span> <span class="token punctuation">(</span>t<span class="token punctuation">,</span> r<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n            <span class="token keyword">const</span> btn <span class="token operator">=</span> <span class="token function">getOperationList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            return <span class="token function">renderTableOpts</span><span class="token punctuation">(</span>btn<span class="token punctuation">,</span> r<span class="token punctuation">)</span>\n            }\n        }<span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>\n    return columns<span class="token comment" spellcheck="true">;</span>\n}<span class="token comment" spellcheck="true">;</span>\n\n<span class="token keyword">const</span> QueryFormTable <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n    <span class="token keyword">const</span> <span class="token punctuation">[</span>loading<span class="token punctuation">,</span> setloading<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    <span class="token keyword">const</span> <span class="token punctuation">[</span>formData<span class="token punctuation">,</span> setFormData<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span>{}<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    <span class="token keyword">const</span> <span class="token punctuation">[</span>pagination<span class="token punctuation">,</span> setPagination<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span>{\n        current<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n        pageSize<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n        position<span class="token punctuation">:</span> <span class="token string">"bottomRight"</span><span class="token punctuation">,</span>\n        showSizeChanger<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        pageSizeOptions<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"10"</span><span class="token punctuation">,</span> <span class="token string">"20"</span><span class="token punctuation">,</span> <span class="token string">"50"</span><span class="token punctuation">,</span> <span class="token string">"100"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n    <span class="token keyword">const</span> <span class="token punctuation">[</span>dataSource<span class="token punctuation">,</span> setDataSource<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n    <span class="token keyword">const</span> queryUserList <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n        <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span>let key <span class="token operator">=</span> <span class="token number">0</span><span class="token comment" spellcheck="true">; key &lt; 20; key++) {</span>\n            data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>{\n                key<span class="token punctuation">,</span>\n                name<span class="token punctuation">:</span> <span class="token string">\'John Brown\'</span> <span class="token operator">+</span> key<span class="token punctuation">,</span>\n                age<span class="token punctuation">:</span> <span class="token number">40</span> <span class="token operator">-</span> key<span class="token punctuation">,</span>\n                address<span class="token punctuation">:</span> `New York No<span class="token punctuation">.</span> ${key} Lake Park`<span class="token punctuation">,</span>\n                tags<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'nice\'</span><span class="token punctuation">,</span> <span class="token string">\'developer\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n            }<span class="token punctuation">)</span>\n        }\n        return Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>{\n            bizData<span class="token punctuation">:</span> data<span class="token punctuation">,</span>\n            pagination<span class="token punctuation">:</span> {\n                total<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\n            }<span class="token punctuation">,</span>\n        }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }<span class="token comment" spellcheck="true">;</span>\n\n    <span class="token keyword">const</span> fetchUserList <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n        <span class="token keyword">const</span> { current<span class="token punctuation">,</span> pageSize } <span class="token operator">=</span> pagination<span class="token comment" spellcheck="true">;</span>\n        <span class="token function">setloading</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        <span class="token function">queryUserList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>res<span class="token punctuation">:</span> any<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">)</span> {\n            <span class="token function">setDataSource</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>bizData<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            <span class="token function">setPagination</span><span class="token punctuation">(</span><span class="token punctuation">(</span>origin<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n                return {\n                <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>origin<span class="token punctuation">,</span>\n                total<span class="token punctuation">:</span> res<span class="token punctuation">.</span>pagination<span class="token punctuation">.</span>total<span class="token punctuation">,</span>\n                }<span class="token comment" spellcheck="true">;</span>\n            }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            }\n        }<span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n            <span class="token function">setloading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }<span class="token comment" spellcheck="true">;</span>\n\n    <span class="token keyword">const</span> handleSubmit <span class="token operator">=</span> <span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n        <span class="token keyword">const</span> formData <span class="token operator">=</span> {\n        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>data<span class="token punctuation">,</span>\n        }<span class="token comment" spellcheck="true">;</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>formData<span class="token punctuation">,</span> <span class="token string">\'handleSubmit\'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        <span class="token function">setFormData</span><span class="token punctuation">(</span>formData<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }<span class="token comment" spellcheck="true">;</span>\n\n    <span class="token keyword">const</span> handleChange <span class="token operator">=</span> <span class="token punctuation">(</span>formData<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>formData<span class="token punctuation">,</span> <span class="token string">\'handleChange\'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        <span class="token function">setFormData</span><span class="token punctuation">(</span>formData<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }\n\n    <span class="token keyword">const</span> onTableChange <span class="token operator">=</span> <span class="token punctuation">(</span>pagination<span class="token punctuation">,</span> filters<span class="token punctuation">,</span> sorter<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n        <span class="token function">setPagination</span><span class="token punctuation">(</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> <span class="token string">\'valuess\'</span><span class="token punctuation">)</span>\n        return {\n            <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>value<span class="token punctuation">,</span>\n            <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>pagination\n        }<span class="token comment" spellcheck="true">;</span>\n        }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }<span class="token comment" spellcheck="true">;</span>\n\n    <span class="token keyword">const</span> getJsxElement <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n        return <span class="token operator">&lt;></span>\n        <span class="token operator">&lt;</span>Button type<span class="token operator">=</span><span class="token string">"primary"</span><span class="token operator">></span>Add<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>\n        <span class="token operator">&lt;</span>Button<span class="token operator">></span>Edit<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>\n        <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">></span>\n    }\n\n    React<span class="token punctuation">.</span><span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n        <span class="token function">fetchUserList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }<span class="token punctuation">,</span> <span class="token punctuation">[</span>formData<span class="token punctuation">,</span> pagination<span class="token punctuation">.</span>current<span class="token punctuation">,</span> pagination<span class="token punctuation">.</span>pageSize<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n    return <span class="token punctuation">(</span>\n      <span class="token operator">&lt;</span>ProTable\n        showQueryForm<span class="token operator">=</span>{<span class="token boolean">true</span>} <span class="token operator">/</span><span class="token operator">/</span> 是否展示queryForm筛选\n        queryFormProps<span class="token operator">=</span>{{\n          <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>getFormText<span class="token punctuation">,</span>\n          columns<span class="token punctuation">:</span> <span class="token function">getFormCol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          onSearch<span class="token punctuation">:</span> handleSubmit<span class="token punctuation">,</span>\n          onChange<span class="token punctuation">:</span> handleChange<span class="token punctuation">,</span>\n          initialValues<span class="token punctuation">:</span> formData<span class="token punctuation">,</span>\n          isResetClearAll<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          onCollapse<span class="token punctuation">:</span><span class="token boolean">false</span><span class="token punctuation">,</span>\n        }}\n        tableProps<span class="token operator">=</span>{{\n          tableId<span class="token punctuation">:</span> <span class="token string">\'clean_header_query_form_table\'</span><span class="token punctuation">,</span> <span class="token operator">/</span><span class="token operator">/</span> 用于本地存储不展示列数据\n          loading<span class="token punctuation">,</span>\n          rowKey<span class="token punctuation">:</span> <span class="token string">"key"</span><span class="token punctuation">,</span>\n          dataSource<span class="token punctuation">,</span>\n          columns<span class="token punctuation">:</span> <span class="token function">getTableColumns</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          paginationProps<span class="token punctuation">:</span> { <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>pagination }<span class="token punctuation">,</span>\n          getJsxElement<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">getJsxElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          attrs<span class="token punctuation">:</span> {\n            onChange<span class="token punctuation">:</span> onTableChange<span class="token punctuation">,</span>\n            scroll<span class="token punctuation">:</span> {\n              x<span class="token punctuation">:</span> <span class="token string">\'max-content\'</span><span class="token punctuation">,</span>\n            }<span class="token punctuation">,</span>\n          }\n        }}\n      <span class="token operator">/</span><span class="token operator">></span>\n    <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n}<span class="token comment" spellcheck="true">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token operator">&lt;</span>QueryFormTable <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span>\n  mountNode\n<span class="token punctuation">)</span>'}],highlightedCodes:{tsx:'<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ProTable<span class="token punctuation">,</span> Select<span class="token punctuation">,</span> Button<span class="token punctuation">,</span> IconFont<span class="token punctuation">,</span> Tag <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'knowdesign\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> renderTableOpts <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'knowdesign/common-pages/render-table-opts\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">interface</span> <span class="token class-name">MiniSelectInterface</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>FC</span><span class="token operator">&lt;</span>any<span class="token operator">></span> <span class="token punctuation">{</span>\n    Option<span class="token operator">:</span> <span class="token keyword">typeof</span> Select<span class="token punctuation">.</span>Option<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> CustomSelect<span class="token operator">:</span> <span class="token function-variable function">MiniSelectInterface</span> <span class="token operator">=</span> props <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>自定义文案<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Select</span></span> <span class="token attr-name">bordered</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span></span> <span class="token attr-name">suffixIcon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">IconFont</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">\'</span>icon-xiala<span class="token punctuation">\'</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nCustomSelect<span class="token punctuation">.</span>Option <span class="token operator">=</span> Select<span class="token punctuation">.</span>Option<span class="token punctuation">;</span>\n\n\n<span class="token keyword">const</span> <span class="token function-variable function">getFormCol</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      type<span class="token operator">:</span> <span class="token string">"datePicker"</span><span class="token punctuation">,</span>\n      title<span class="token operator">:</span> <span class="token string">"日期选择"</span><span class="token punctuation">,</span>\n      dataIndex<span class="token operator">:</span> <span class="token string">"date1"</span><span class="token punctuation">,</span>\n      placeholder<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'请选择日期\'</span><span class="token punctuation">]</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      type<span class="token operator">:</span> <span class="token string">"dateRangePicker"</span><span class="token punctuation">,</span>\n      title<span class="token operator">:</span> <span class="token string">"日期范围选择"</span><span class="token punctuation">,</span>\n      dataIndex<span class="token operator">:</span> <span class="token string">"date2"</span><span class="token punctuation">,</span>\n      placeholder<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'开始日期\'</span><span class="token punctuation">,</span> <span class="token string">\'结束日期\'</span><span class="token punctuation">]</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      type<span class="token operator">:</span> <span class="token string">"timePicker"</span><span class="token punctuation">,</span>\n      title<span class="token operator">:</span> <span class="token string">"时间选择"</span><span class="token punctuation">,</span>\n      dataIndex<span class="token operator">:</span> <span class="token string">"time1"</span><span class="token punctuation">,</span>\n      placeholder<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'请选择时间\'</span><span class="token punctuation">]</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      type<span class="token operator">:</span> <span class="token string">"timeRangePicker"</span><span class="token punctuation">,</span>\n      title<span class="token operator">:</span> <span class="token string">"时间范围选择"</span><span class="token punctuation">,</span>\n      dataIndex<span class="token operator">:</span> <span class="token string">"time2"</span><span class="token punctuation">,</span>\n      placeholder<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'开始时间\'</span><span class="token punctuation">,</span> <span class="token string">\'结束时间\'</span><span class="token punctuation">]</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      type<span class="token operator">:</span> <span class="token string">"input"</span><span class="token punctuation">,</span>\n      title<span class="token operator">:</span> <span class="token string">"用户账号"</span><span class="token punctuation">,</span>\n      dataIndex<span class="token operator">:</span> <span class="token string">"username"</span><span class="token punctuation">,</span>\n      placeholder<span class="token operator">:</span> <span class="token string">"请输入用户账号"</span><span class="token punctuation">,</span>\n      componentProps<span class="token operator">:</span> <span class="token punctuation">{</span>\n        maxLength<span class="token operator">:</span> <span class="token number">128</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      type<span class="token operator">:</span> <span class="token string">"input"</span><span class="token punctuation">,</span>\n      title<span class="token operator">:</span> <span class="token string">"用户实名"</span><span class="token punctuation">,</span>\n      dataIndex<span class="token operator">:</span> <span class="token string">"realName"</span><span class="token punctuation">,</span>\n      placeholder<span class="token operator">:</span> <span class="token string">"请输入用户实名"</span><span class="token punctuation">,</span>\n      componentProps<span class="token operator">:</span> <span class="token punctuation">{</span>\n        maxLength<span class="token operator">:</span> <span class="token number">128</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      type<span class="token operator">:</span> <span class="token string">"select"</span><span class="token punctuation">,</span>\n      title<span class="token operator">:</span> <span class="token string">"城市"</span><span class="token punctuation">,</span>\n      dataIndex<span class="token operator">:</span> <span class="token string">"city"</span><span class="token punctuation">,</span>\n      placeholder<span class="token operator">:</span> <span class="token string">"请选择"</span><span class="token punctuation">,</span>\n      options<span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          title<span class="token operator">:</span> <span class="token string">\'北京\'</span><span class="token punctuation">,</span>\n          value<span class="token operator">:</span> <span class="token number">1</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n          title<span class="token operator">:</span> <span class="token string">\'南京\'</span><span class="token punctuation">,</span>\n          value<span class="token operator">:</span> <span class="token number">2</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">]</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> getFormText<span class="token operator">:</span> <span class="token punctuation">{</span> searchText<span class="token operator">:</span> string<span class="token punctuation">;</span> resetText<span class="token operator">:</span> string <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n    searchText<span class="token operator">:</span> <span class="token string">"查询"</span><span class="token punctuation">,</span>\n    resetText<span class="token operator">:</span> <span class="token string">"重置"</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token comment">// 获取 操作项相关配置</span>\n<span class="token keyword">const</span> <span class="token function-variable function">getOperationList</span> <span class="token operator">=</span> <span class="token punctuation">(</span>props<span class="token operator">?</span><span class="token operator">:</span> any<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      label<span class="token operator">:</span> <span class="token string">\'编辑\'</span><span class="token punctuation">,</span>\n      type<span class="token operator">:</span> <span class="token string">\'icon-bianji\'</span><span class="token punctuation">,</span>\n      <span class="token function-variable function">clickFunc</span><span class="token operator">:</span> <span class="token punctuation">(</span>record<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>record<span class="token punctuation">,</span> <span class="token string">\'edit click\'</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      label<span class="token operator">:</span> <span class="token string">\'删除\'</span><span class="token punctuation">,</span>\n      type<span class="token operator">:</span> <span class="token string">\'icon-shanchu\'</span><span class="token punctuation">,</span>\n      <span class="token function-variable function">clickFunc</span><span class="token operator">:</span> <span class="token punctuation">(</span>record<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>record<span class="token punctuation">,</span> <span class="token string">\'delete click\'</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      label<span class="token operator">:</span> <span class="token string">\'默认\'</span><span class="token punctuation">,</span>\n      type<span class="token operator">:</span> <span class="token string">\'icon-jiahao\'</span><span class="token punctuation">,</span>\n      <span class="token function-variable function">clickFunc</span><span class="token operator">:</span> <span class="token punctuation">(</span>record<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>record<span class="token punctuation">,</span> <span class="token string">\'default click\'</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      label<span class="token operator">:</span> <span class="token string">\'操作记录\'</span><span class="token punctuation">,</span>\n      type<span class="token operator">:</span> <span class="token string">\'icon-caozuojilu\'</span><span class="token punctuation">,</span>\n      <span class="token function-variable function">clickFunc</span><span class="token operator">:</span> <span class="token punctuation">(</span>record<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>record<span class="token punctuation">,</span> <span class="token string">\'测试 click\'</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      label<span class="token operator">:</span> <span class="token string">\'设置\'</span><span class="token punctuation">,</span>\n      type<span class="token operator">:</span> <span class="token string">\'icon-shezhi\'</span><span class="token punctuation">,</span>\n      <span class="token function-variable function">clickFunc</span><span class="token operator">:</span> <span class="token punctuation">(</span>record<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>record<span class="token punctuation">,</span> <span class="token string">\'测试 click\'</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token comment">// columns config</span>\n<span class="token keyword">const</span> <span class="token function-variable function">getTableColumns</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n            title<span class="token operator">:</span> <span class="token string">"Name"</span><span class="token punctuation">,</span>\n            dataIndex<span class="token operator">:</span> <span class="token string">"name"</span><span class="token punctuation">,</span>\n            key<span class="token operator">:</span> <span class="token string">"name"</span><span class="token punctuation">,</span>\n            width<span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n            title<span class="token operator">:</span> <span class="token string">"Age"</span><span class="token punctuation">,</span>\n            dataIndex<span class="token operator">:</span> <span class="token string">"age"</span><span class="token punctuation">,</span>\n            key<span class="token operator">:</span> <span class="token string">"age"</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n            title<span class="token operator">:</span> <span class="token string">"Address"</span><span class="token punctuation">,</span>\n            dataIndex<span class="token operator">:</span> <span class="token string">"address"</span><span class="token punctuation">,</span>\n            key<span class="token operator">:</span> <span class="token string">"address"</span><span class="token punctuation">,</span>\n            lineClampTwo<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            needTooltip<span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n            title<span class="token operator">:</span> <span class="token string">\'Tags\'</span><span class="token punctuation">,</span>\n            key<span class="token operator">:</span> <span class="token string">\'tags\'</span><span class="token punctuation">,</span>\n            dataIndex<span class="token operator">:</span> <span class="token string">\'tags\'</span><span class="token punctuation">,</span>\n            <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span>_<span class="token punctuation">,</span> <span class="token punctuation">{</span> tags <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>\n                <span class="token punctuation">{</span>tags<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>tag <span class="token operator">=></span> <span class="token punctuation">{</span>\n                    <span class="token keyword">let</span> color <span class="token operator">=</span> tag<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">5</span> <span class="token operator">?</span> <span class="token string">\'geekblue\'</span> <span class="token operator">:</span> <span class="token string">\'green\'</span><span class="token punctuation">;</span>\n                    <span class="token keyword">if</span> <span class="token punctuation">(</span>tag <span class="token operator">===</span> <span class="token string">\'loser\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    color <span class="token operator">=</span> <span class="token string">\'volcano\'</span><span class="token punctuation">;</span>\n                    <span class="token punctuation">}</span>\n                    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Tag</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>padding<span class="token operator">:</span><span class="token string">\'5px\'</span><span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token attr-name">color</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>color<span class="token punctuation">}</span></span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>tag<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n                        <span class="token punctuation">{</span>tag<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Tag</span></span><span class="token punctuation">></span></span>\n                    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>\n            <span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n            title<span class="token operator">:</span> <span class="token string">"操作"</span><span class="token punctuation">,</span>\n            dataIndex<span class="token operator">:</span> <span class="token string">"operation"</span><span class="token punctuation">,</span>\n            key<span class="token operator">:</span> <span class="token string">"operation"</span><span class="token punctuation">,</span>\n            fixed<span class="token operator">:</span> <span class="token string">\'right\'</span><span class="token punctuation">,</span>\n            <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span>t<span class="token punctuation">,</span> r<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">const</span> btn <span class="token operator">=</span> <span class="token function">getOperationList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">return</span> <span class="token function">renderTableOpts</span><span class="token punctuation">(</span>btn<span class="token punctuation">,</span> r<span class="token punctuation">)</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> columns<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">QueryFormTable</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">[</span>loading<span class="token punctuation">,</span> setloading<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> <span class="token punctuation">[</span>formData<span class="token punctuation">,</span> setFormData<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> <span class="token punctuation">[</span>pagination<span class="token punctuation">,</span> setPagination<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        current<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n        pageSize<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n        position<span class="token operator">:</span> <span class="token string">"bottomRight"</span><span class="token punctuation">,</span>\n        showSizeChanger<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        pageSizeOptions<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"10"</span><span class="token punctuation">,</span> <span class="token string">"20"</span><span class="token punctuation">,</span> <span class="token string">"50"</span><span class="token punctuation">,</span> <span class="token string">"100"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">const</span> <span class="token punctuation">[</span>dataSource<span class="token punctuation">,</span> setDataSource<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">const</span> <span class="token function-variable function">queryUserList</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> key <span class="token operator">&lt;</span> <span class="token number">20</span><span class="token punctuation">;</span> key<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                key<span class="token punctuation">,</span>\n                name<span class="token operator">:</span> <span class="token string">\'John Brown\'</span> <span class="token operator">+</span> key<span class="token punctuation">,</span>\n                age<span class="token operator">:</span> <span class="token number">40</span> <span class="token operator">-</span> key<span class="token punctuation">,</span>\n                address<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">New York No. </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> Lake Park</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n                tags<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'nice\'</span><span class="token punctuation">,</span> <span class="token string">\'developer\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            bizData<span class="token operator">:</span> data<span class="token punctuation">,</span>\n            pagination<span class="token operator">:</span> <span class="token punctuation">{</span>\n                total<span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">const</span> <span class="token function-variable function">fetchUserList</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> <span class="token punctuation">{</span> current<span class="token punctuation">,</span> pageSize <span class="token punctuation">}</span> <span class="token operator">=</span> pagination<span class="token punctuation">;</span>\n        <span class="token function">setloading</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token function">queryUserList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>res<span class="token operator">:</span> any<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token function">setDataSource</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>bizData<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token function">setPagination</span><span class="token punctuation">(</span><span class="token punctuation">(</span>origin<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                <span class="token keyword">return</span> <span class="token punctuation">{</span>\n                <span class="token operator">...</span>origin<span class="token punctuation">,</span>\n                total<span class="token operator">:</span> res<span class="token punctuation">.</span>pagination<span class="token punctuation">.</span>total<span class="token punctuation">,</span>\n                <span class="token punctuation">}</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token function">setloading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">const</span> <span class="token function-variable function">handleSubmit</span> <span class="token operator">=</span> <span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> formData <span class="token operator">=</span> <span class="token punctuation">{</span>\n        <span class="token operator">...</span>data<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>formData<span class="token punctuation">,</span> <span class="token string">\'handleSubmit\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token function">setFormData</span><span class="token punctuation">(</span>formData<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">const</span> <span class="token function-variable function">handleChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span>formData<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>formData<span class="token punctuation">,</span> <span class="token string">\'handleChange\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token function">setFormData</span><span class="token punctuation">(</span>formData<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">const</span> <span class="token function-variable function">onTableChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span>pagination<span class="token punctuation">,</span> filters<span class="token punctuation">,</span> sorter<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token function">setPagination</span><span class="token punctuation">(</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> <span class="token string">\'valuess\'</span><span class="token punctuation">)</span>\n        <span class="token keyword">return</span> <span class="token punctuation">{</span>\n            <span class="token operator">...</span>value<span class="token punctuation">,</span>\n            <span class="token operator">...</span>pagination\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">const</span> <span class="token function-variable function">getJsxElement</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Add<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>Edit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>\n    <span class="token punctuation">}</span>\n\n    React<span class="token punctuation">.</span><span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token function">fetchUserList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>formData<span class="token punctuation">,</span> pagination<span class="token punctuation">.</span>current<span class="token punctuation">,</span> pagination<span class="token punctuation">.</span>pageSize<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token operator">&lt;</span>ProTable\n        showQueryForm<span class="token operator">=</span><span class="token punctuation">{</span><span class="token boolean">true</span><span class="token punctuation">}</span> <span class="token comment">// 是否展示queryForm筛选</span>\n        queryFormProps<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          <span class="token operator">...</span>getFormText<span class="token punctuation">,</span>\n          columns<span class="token operator">:</span> <span class="token function">getFormCol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          onSearch<span class="token operator">:</span> handleSubmit<span class="token punctuation">,</span>\n          onChange<span class="token operator">:</span> handleChange<span class="token punctuation">,</span>\n          initialValues<span class="token operator">:</span> formData<span class="token punctuation">,</span>\n          isResetClearAll<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          onCollapse<span class="token operator">:</span><span class="token boolean">false</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        tableProps<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          tableId<span class="token operator">:</span> <span class="token string">\'clean_header_query_form_table\'</span><span class="token punctuation">,</span> <span class="token comment">// 用于本地存储不展示列数据</span>\n          loading<span class="token punctuation">,</span>\n          rowKey<span class="token operator">:</span> <span class="token string">"key"</span><span class="token punctuation">,</span>\n          dataSource<span class="token punctuation">,</span>\n          columns<span class="token operator">:</span> <span class="token function">getTableColumns</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          paginationProps<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token operator">...</span>pagination <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token function-variable function">getJsxElement</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">getJsxElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          attrs<span class="token operator">:</span> <span class="token punctuation">{</span>\n            onChange<span class="token operator">:</span> onTableChange<span class="token punctuation">,</span>\n            scroll<span class="token operator">:</span> <span class="token punctuation">{</span>\n              x<span class="token operator">:</span> <span class="token string">\'max-content\'</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span>\n      <span class="token operator">/</span><span class="token operator">></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">QueryFormTable</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n  mountNode\n<span class="token punctuation">)</span>',jsx:'<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ProTable<span class="token punctuation">,</span> Select<span class="token punctuation">,</span> Button<span class="token punctuation">,</span> IconFont<span class="token punctuation">,</span> Tag <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'knowdesign\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> renderTableOpts <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'knowdesign/common-pages/render-table-opts\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">CustomSelect</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>自定义文案<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Select</span></span> <span class="token attr-name">bordered</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span></span> <span class="token attr-name">suffixIcon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">IconFont</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>icon-xiala<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nCustomSelect<span class="token punctuation">.</span>Option <span class="token operator">=</span> Select<span class="token punctuation">.</span>Option<span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">getFormCol</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'datePicker\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'日期选择\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">\'date1\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">placeholder</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'请选择日期\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'dateRangePicker\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'日期范围选择\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">\'date2\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">placeholder</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'开始日期\'</span><span class="token punctuation">,</span> <span class="token string">\'结束日期\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'timePicker\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'时间选择\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">\'time1\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">placeholder</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'请选择时间\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'timeRangePicker\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'时间范围选择\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">\'time2\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">placeholder</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'开始时间\'</span><span class="token punctuation">,</span> <span class="token string">\'结束时间\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'input\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'用户账号\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">\'username\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">placeholder</span><span class="token operator">:</span> <span class="token string">\'请输入用户账号\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">componentProps</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">maxLength</span><span class="token operator">:</span> <span class="token number">128</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'input\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'用户实名\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">\'realName\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">placeholder</span><span class="token operator">:</span> <span class="token string">\'请输入用户实名\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">componentProps</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">maxLength</span><span class="token operator">:</span> <span class="token number">128</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'select\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'城市\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">\'city\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">placeholder</span><span class="token operator">:</span> <span class="token string">\'请选择\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'北京\'</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n          <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'南京\'</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> getFormText <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">searchText</span><span class="token operator">:</span> <span class="token string">\'查询\'</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">resetText</span><span class="token operator">:</span> <span class="token string">\'重置\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// 获取 操作项相关配置</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">getOperationList</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">\'编辑\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'icon-bianji\'</span><span class="token punctuation">,</span>\n      <span class="token function-variable function">clickFunc</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">record</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>record<span class="token punctuation">,</span> <span class="token string">\'edit click\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">\'删除\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'icon-shanchu\'</span><span class="token punctuation">,</span>\n      <span class="token function-variable function">clickFunc</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">record</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>record<span class="token punctuation">,</span> <span class="token string">\'delete click\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">\'默认\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'icon-jiahao\'</span><span class="token punctuation">,</span>\n      <span class="token function-variable function">clickFunc</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">record</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>record<span class="token punctuation">,</span> <span class="token string">\'default click\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">\'操作记录\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'icon-caozuojilu\'</span><span class="token punctuation">,</span>\n      <span class="token function-variable function">clickFunc</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">record</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>record<span class="token punctuation">,</span> <span class="token string">\'测试 click\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">\'设置\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'icon-shezhi\'</span><span class="token punctuation">,</span>\n      <span class="token function-variable function">clickFunc</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">record</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>record<span class="token punctuation">,</span> <span class="token string">\'测试 click\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// columns config</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">getTableColumns</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'Name\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'Age\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'Address\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">\'address\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">lineClampTwo</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">needTooltip</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'Tags\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">\'tags\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">\'tags\'</span><span class="token punctuation">,</span>\n      <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">_<span class="token punctuation">,</span> <span class="token punctuation">{</span> tags <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>\n          <span class="token punctuation">{</span>tags<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">tag</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">let</span> color <span class="token operator">=</span> tag<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">5</span> <span class="token operator">?</span> <span class="token string">\'geekblue\'</span> <span class="token operator">:</span> <span class="token string">\'green\'</span><span class="token punctuation">;</span>\n\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>tag <span class="token operator">===</span> <span class="token string">\'loser\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n              color <span class="token operator">=</span> <span class="token string">\'volcano\'</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n\n            <span class="token keyword">return</span> <span class="token punctuation">(</span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Tag</span></span>\n                <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n                  <span class="token literal-property property">padding</span><span class="token operator">:</span> <span class="token string">\'5px\'</span><span class="token punctuation">,</span>\n                <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n                <span class="token attr-name">color</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>color<span class="token punctuation">}</span></span>\n                <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>tag<span class="token punctuation">}</span></span>\n              <span class="token punctuation">></span></span>\n                <span class="token punctuation">{</span>tag<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Tag</span></span><span class="token punctuation">></span></span>\n            <span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>\n      <span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'操作\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">\'operation\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">\'operation\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">fixed</span><span class="token operator">:</span> <span class="token string">\'right\'</span><span class="token punctuation">,</span>\n      <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> r</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> btn <span class="token operator">=</span> <span class="token function">getOperationList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> <span class="token function">renderTableOpts</span><span class="token punctuation">(</span>btn<span class="token punctuation">,</span> r<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> columns<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">QueryFormTable</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>loading<span class="token punctuation">,</span> setloading<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>formData<span class="token punctuation">,</span> setFormData<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>pagination<span class="token punctuation">,</span> setPagination<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">current</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">pageSize</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">position</span><span class="token operator">:</span> <span class="token string">\'bottomRight\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">showSizeChanger</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">pageSizeOptions</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'10\'</span><span class="token punctuation">,</span> <span class="token string">\'20\'</span><span class="token punctuation">,</span> <span class="token string">\'50\'</span><span class="token punctuation">,</span> <span class="token string">\'100\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>dataSource<span class="token punctuation">,</span> setDataSource<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">queryUserList</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> key <span class="token operator">&lt;</span> <span class="token number">20</span><span class="token punctuation">;</span> key<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        key<span class="token punctuation">,</span>\n        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'John Brown\'</span> <span class="token operator">+</span> key<span class="token punctuation">,</span>\n        <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">40</span> <span class="token operator">-</span> key<span class="token punctuation">,</span>\n        <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">New York No. </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> Lake Park</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n        <span class="token literal-property property">tags</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'nice\'</span><span class="token punctuation">,</span> <span class="token string">\'developer\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token literal-property property">bizData</span><span class="token operator">:</span> data<span class="token punctuation">,</span>\n      <span class="token literal-property property">pagination</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">total</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">fetchUserList</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> current<span class="token punctuation">,</span> pageSize <span class="token punctuation">}</span> <span class="token operator">=</span> pagination<span class="token punctuation">;</span>\n    <span class="token function">setloading</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">queryUserList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token function">setDataSource</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>bizData<span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token function">setPagination</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">origin</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token operator">...</span>origin<span class="token punctuation">,</span> <span class="token literal-property property">total</span><span class="token operator">:</span> res<span class="token punctuation">.</span>pagination<span class="token punctuation">.</span>total <span class="token punctuation">}</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token function">setloading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">handleSubmit</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> formData <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span>data <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>formData<span class="token punctuation">,</span> <span class="token string">\'handleSubmit\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">setFormData</span><span class="token punctuation">(</span>formData<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">handleChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">formData</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>formData<span class="token punctuation">,</span> <span class="token string">\'handleChange\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">setFormData</span><span class="token punctuation">(</span>formData<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">onTableChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">pagination<span class="token punctuation">,</span> filters<span class="token punctuation">,</span> sorter</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">setPagination</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> <span class="token string">\'valuess\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token operator">...</span>value<span class="token punctuation">,</span> <span class="token operator">...</span>pagination <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">getJsxElement</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Add<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>Edit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  React<span class="token punctuation">.</span><span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">fetchUserList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>formData<span class="token punctuation">,</span> pagination<span class="token punctuation">.</span>current<span class="token punctuation">,</span> pagination<span class="token punctuation">.</span>pageSize<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token operator">&lt;</span>ProTable\n      showQueryForm<span class="token operator">=</span><span class="token punctuation">{</span><span class="token boolean">true</span><span class="token punctuation">}</span> <span class="token comment">// 是否展示queryForm筛选</span>\n      queryFormProps<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n        <span class="token operator">...</span>getFormText<span class="token punctuation">,</span>\n        <span class="token literal-property property">columns</span><span class="token operator">:</span> <span class="token function">getFormCol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">onSearch</span><span class="token operator">:</span> handleSubmit<span class="token punctuation">,</span>\n        <span class="token literal-property property">onChange</span><span class="token operator">:</span> handleChange<span class="token punctuation">,</span>\n        <span class="token literal-property property">initialValues</span><span class="token operator">:</span> formData<span class="token punctuation">,</span>\n        <span class="token literal-property property">isResetClearAll</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">onCollapse</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">}</span>\n      tableProps<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">tableId</span><span class="token operator">:</span> <span class="token string">\'clean_header_query_form_table\'</span><span class="token punctuation">,</span>\n        <span class="token comment">// 用于本地存储不展示列数据</span>\n        loading<span class="token punctuation">,</span>\n        <span class="token literal-property property">rowKey</span><span class="token operator">:</span> <span class="token string">\'key\'</span><span class="token punctuation">,</span>\n        dataSource<span class="token punctuation">,</span>\n        <span class="token literal-property property">columns</span><span class="token operator">:</span> <span class="token function">getTableColumns</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">paginationProps</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token operator">...</span>pagination <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">getJsxElement</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">getJsxElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">attrs</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token literal-property property">onChange</span><span class="token operator">:</span> onTableChange<span class="token punctuation">,</span>\n          <span class="token literal-property property">scroll</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token string">\'max-content\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">}</span>\n    <span class="token operator">/</span><span class="token operator">></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">QueryFormTable</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>\n'},preview:function(){a(0),a(35);function n(s){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(s)}var s=function(s,a){if(!a&&s&&s.__esModule)return s;if(null===s||"object"!==n(s)&&"function"!=typeof s)return{default:s};var t=o(a);if(t&&t.has(s))return t.get(s);var p={},e=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var c in s)if("default"!==c&&Object.prototype.hasOwnProperty.call(s,c)){var l=e?Object.getOwnPropertyDescriptor(s,c):null;l&&(l.get||l.set)?Object.defineProperty(p,c,l):p[c]=s[c]}p.default=s,t&&t.set(s,p);return p}(a(0)),t=a(96),p=a(194);function o(n){if("function"!=typeof WeakMap)return null;var s=new WeakMap,a=new WeakMap;return(o=function(n){return n?a:s})(n)}function e(n,s){var a=Object.keys(n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(n);s&&(t=t.filter((function(s){return Object.getOwnPropertyDescriptor(n,s).enumerable}))),a.push.apply(a,t)}return a}function c(n){for(var s=1;s<arguments.length;s++){var a=null!=arguments[s]?arguments[s]:{};s%2?e(Object(a),!0).forEach((function(s){l(n,s,a[s])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(a)):e(Object(a)).forEach((function(s){Object.defineProperty(n,s,Object.getOwnPropertyDescriptor(a,s))}))}return n}function l(n,s,a){return s in n?Object.defineProperty(n,s,{value:a,enumerable:!0,configurable:!0,writable:!0}):n[s]=a,n}function u(n,s){return function(n){if(Array.isArray(n))return n}(n)||function(n,s){var a=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null==a)return;var t,p,o=[],e=!0,c=!1;try{for(a=a.call(n);!(e=(t=a.next()).done)&&(o.push(t.value),!s||o.length!==s);e=!0);}catch(n){c=!0,p=n}finally{try{e||null==a.return||a.return()}finally{if(c)throw p}}return o}(n,s)||function(n,s){if(!n)return;if("string"==typeof n)return k(n,s);var a=Object.prototype.toString.call(n).slice(8,-1);"Object"===a&&n.constructor&&(a=n.constructor.name);if("Map"===a||"Set"===a)return Array.from(n);if("Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a))return k(n,s)}(n,s)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function k(n,s){(null==s||s>n.length)&&(s=n.length);for(var a=0,t=new Array(s);a<s;a++)t[a]=n[a];return t}t.Select.Option;var i={searchText:"查询",resetText:"重置"},r=function(){return[{title:"Name",dataIndex:"name",key:"name",width:200},{title:"Age",dataIndex:"age",key:"age"},{title:"Address",dataIndex:"address",key:"address",lineClampTwo:!0,needTooltip:!0},{title:"Tags",key:"tags",dataIndex:"tags",render:function(n,a){var p=a.tags;return s.default.createElement(s.default.Fragment,null,p.map((function(n){var a=n.length>5?"geekblue":"green";return"loser"===n&&(a="volcano"),s.default.createElement(t.Tag,{style:{padding:"5px"},color:a,key:n},n.toUpperCase())})))}},{title:"操作",dataIndex:"operation",key:"operation",fixed:"right",render:function(n,s){var a=[{label:"编辑",type:"icon-bianji",clickFunc:function(n){console.log(n,"edit click")}},{label:"删除",type:"icon-shanchu",clickFunc:function(n){console.log(n,"delete click")}},{label:"默认",type:"icon-jiahao",clickFunc:function(n){console.log(n,"default click")}},{label:"操作记录",type:"icon-caozuojilu",clickFunc:function(n){console.log(n,"测试 click")}},{label:"设置",type:"icon-shezhi",clickFunc:function(n){console.log(n,"测试 click")}}];return(0,p.renderTableOpts)(a,s)}}]},g=function(){var n=u((0,s.useState)(!1),2),a=n[0],p=n[1],o=u((0,s.useState)({}),2),e=o[0],l=o[1],k=u((0,s.useState)({current:1,pageSize:10,position:"bottomRight",showSizeChanger:!0,pageSizeOptions:["10","20","50","100"]}),2),g=k[0],d=k[1],m=u((0,s.useState)([]),2),y=m[0],f=m[1],b=function(){g.current,g.pageSize;p(!0),function(){for(var n=[],s=0;s<20;s++)n.push({key:s,name:"John Brown"+s,age:40-s,address:"New York No. ".concat(s," Lake Park"),tags:["nice","developer"]});return Promise.resolve({bizData:n,pagination:{total:20}})}().then((function(n){n&&(f(n.bizData),d((function(s){return c(c({},s),{},{total:n.pagination.total})})))})).finally((function(){p(!1)}))};return s.default.useEffect((function(){b()}),[e,g.current,g.pageSize]),s.default.createElement(t.ProTable,{showQueryForm:!0,queryFormProps:c(c({},i),{},{columns:[{type:"datePicker",title:"日期选择",dataIndex:"date1",placeholder:["请选择日期"]},{type:"dateRangePicker",title:"日期范围选择",dataIndex:"date2",placeholder:["开始日期","结束日期"]},{type:"timePicker",title:"时间选择",dataIndex:"time1",placeholder:["请选择时间"]},{type:"timeRangePicker",title:"时间范围选择",dataIndex:"time2",placeholder:["开始时间","结束时间"]},{type:"input",title:"用户账号",dataIndex:"username",placeholder:"请输入用户账号",componentProps:{maxLength:128}},{type:"input",title:"用户实名",dataIndex:"realName",placeholder:"请输入用户实名",componentProps:{maxLength:128}},{type:"select",title:"城市",dataIndex:"city",placeholder:"请选择",options:[{title:"北京",value:1},{title:"南京",value:2}]}],onSearch:function(n){var s=c({},n);console.log(s,"handleSubmit"),l(s)},onChange:function(n){console.log(n,"handleChange"),l(n)},initialValues:e,isResetClearAll:!0,onCollapse:!1}),tableProps:{tableId:"clean_header_query_form_table",loading:a,rowKey:"key",dataSource:y,columns:r(),paginationProps:c({},g),getJsxElement:function(){return s.default.createElement(s.default.Fragment,null,s.default.createElement(t.Button,{type:"primary"},"Add"),s.default.createElement(t.Button,null,"Edit"))},attrs:{onChange:function(n,s,a){d((function(s){return console.log(s,"valuess"),c(c({},s),n)}))},scroll:{x:"max-content"}}}})};return s.default.createElement(g,null)}}},5244:function(n,s,a){n.exports={content:{"zh-CN":[["p","带有搜索框和列自定义的表格"],["blockquote",["p",["code","tableHeaderSearchInput"]," 具体属性请查看  ",["a",{title:null,href:"#ISearchInput"},"ISearchInput"],",\n",["code","columns"]," 配置属性 ",["code","filterTitle"]," 为 ",["code","true"]," 时开启列的自定义按钮（",["code","注意：开启列自定义时，默认当前列不可以被隐藏"],"）。更多属性查看 ",["a",{title:null,href:"#https://ant.design/components/table-cn/#Column"},"ColumnsType"]]]],"en-US":[["p","Add Table of Queryform"]]},meta:{order:5,title:"带有搜索的Table",filename:"components/extend/pro-table/demo/SearchTable.md",id:"components-extend-pro-table-demo-SearchTable"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:'import React<span class="token punctuation">,</span> { useState } from <span class="token string">"react"</span><span class="token comment" spellcheck="true">;</span>\nimport { ProTable<span class="token punctuation">,</span> <span class="token keyword">Select</span><span class="token punctuation">,</span> Button<span class="token punctuation">,</span> IconFont<span class="token punctuation">,</span> Tag } from <span class="token string">\'knowdesign\'</span><span class="token comment" spellcheck="true">;</span>\nimport { renderTableOpts } from <span class="token string">\'knowdesign/common-pages/render-table-opts\'</span><span class="token comment" spellcheck="true">;</span>\n\n<span class="token operator">/</span><span class="token operator">/</span> 获取 操作项相关配置\n<span class="token keyword">const</span> getOperationList <span class="token operator">=</span> <span class="token punctuation">(</span>props<span class="token operator">?</span><span class="token punctuation">:</span> any<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n  return <span class="token punctuation">[</span>\n    {\n      label<span class="token punctuation">:</span> <span class="token string">\'编辑\'</span><span class="token punctuation">,</span>\n      type<span class="token punctuation">:</span> <span class="token string">\'icon-bianji\'</span><span class="token punctuation">,</span>\n      clickFunc<span class="token punctuation">:</span> <span class="token punctuation">(</span>record<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>record<span class="token punctuation">,</span> <span class="token string">\'edit click\'</span><span class="token punctuation">)</span>\n      }<span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n    {\n      label<span class="token punctuation">:</span> <span class="token string">\'删除\'</span><span class="token punctuation">,</span>\n      type<span class="token punctuation">:</span> <span class="token string">\'icon-shanchu\'</span><span class="token punctuation">,</span>\n      clickFunc<span class="token punctuation">:</span> <span class="token punctuation">(</span>record<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>record<span class="token punctuation">,</span> <span class="token string">\'delete click\'</span><span class="token punctuation">)</span>\n      }<span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n    {\n      label<span class="token punctuation">:</span> <span class="token string">\'默认\'</span><span class="token punctuation">,</span>\n      type<span class="token punctuation">:</span> <span class="token string">\'icon-jiahao\'</span><span class="token punctuation">,</span>\n      clickFunc<span class="token punctuation">:</span> <span class="token punctuation">(</span>record<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>record<span class="token punctuation">,</span> <span class="token string">\'default click\'</span><span class="token punctuation">)</span>\n      }<span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n    {\n      label<span class="token punctuation">:</span> <span class="token string">\'操作记录\'</span><span class="token punctuation">,</span>\n      type<span class="token punctuation">:</span> <span class="token string">\'icon-caozuojilu\'</span><span class="token punctuation">,</span>\n      clickFunc<span class="token punctuation">:</span> <span class="token punctuation">(</span>record<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>record<span class="token punctuation">,</span> <span class="token string">\'测试 click\'</span><span class="token punctuation">)</span>\n      }<span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n    {\n      label<span class="token punctuation">:</span> <span class="token string">\'设置\'</span><span class="token punctuation">,</span>\n      type<span class="token punctuation">:</span> <span class="token string">\'icon-shezhi\'</span><span class="token punctuation">,</span>\n      clickFunc<span class="token punctuation">:</span> <span class="token punctuation">(</span>record<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>record<span class="token punctuation">,</span> <span class="token string">\'测试 click\'</span><span class="token punctuation">)</span>\n      }<span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>\n}<span class="token comment" spellcheck="true">;</span>\n<span class="token operator">/</span><span class="token operator">/</span> columns config\n<span class="token keyword">const</span> getTableColumns <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n    <span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n        {\n            title<span class="token punctuation">:</span> <span class="token string">"Name"</span><span class="token punctuation">,</span>\n            dataIndex<span class="token punctuation">:</span> <span class="token string">"name"</span><span class="token punctuation">,</span>\n            key<span class="token punctuation">:</span> <span class="token string">"name"</span><span class="token punctuation">,</span>\n        }<span class="token punctuation">,</span>\n        {\n            title<span class="token punctuation">:</span> <span class="token string">"Age"</span><span class="token punctuation">,</span>\n            dataIndex<span class="token punctuation">:</span> <span class="token string">"age"</span><span class="token punctuation">,</span>\n            key<span class="token punctuation">:</span> <span class="token string">"age"</span><span class="token punctuation">,</span>\n            sorter<span class="token punctuation">:</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span>{\n                return a<span class="token punctuation">.</span>age<span class="token operator">-</span>b<span class="token punctuation">.</span>age<span class="token comment" spellcheck="true">;</span>\n            }<span class="token punctuation">,</span>\n        }<span class="token punctuation">,</span>\n        {\n            title<span class="token punctuation">:</span> <span class="token string">"LineClampTwo"</span><span class="token punctuation">,</span>\n            dataIndex<span class="token punctuation">:</span> <span class="token string">"lineClampTwo"</span><span class="token punctuation">,</span>\n            key<span class="token punctuation">:</span> <span class="token string">"lineClampTwo"</span><span class="token punctuation">,</span>\n            lineClampTwo<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            needTooltip<span class="token punctuation">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>\n            width<span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">,</span>\n        }<span class="token punctuation">,</span>\n        {\n            title<span class="token punctuation">:</span> <span class="token string">"LineClampOne"</span><span class="token punctuation">,</span>\n            dataIndex<span class="token punctuation">:</span> <span class="token string">"lineClampOne"</span><span class="token punctuation">,</span>\n            key<span class="token punctuation">:</span> <span class="token string">"lineClampOne"</span><span class="token punctuation">,</span>\n            lineClampOne<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            needTooltip<span class="token punctuation">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>\n            width<span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">,</span>\n        }<span class="token punctuation">,</span>\n        {\n            title<span class="token punctuation">:</span> <span class="token string">\'Tags\'</span><span class="token punctuation">,</span>\n            key<span class="token punctuation">:</span> <span class="token string">\'tags\'</span><span class="token punctuation">,</span>\n            dataIndex<span class="token punctuation">:</span> <span class="token string">\'tags\'</span><span class="token punctuation">,</span>\n            render<span class="token punctuation">:</span> <span class="token punctuation">(</span>_<span class="token punctuation">,</span> { tags }<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>\n                <span class="token operator">&lt;></span>\n                {tags<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>tag <span class="token operator">=</span><span class="token operator">></span> {\n                    let color <span class="token operator">=</span> tag<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">5</span> <span class="token operator">?</span> <span class="token string">\'geekblue\'</span> <span class="token punctuation">:</span> <span class="token string">\'green\'</span><span class="token comment" spellcheck="true">;</span>\n                    <span class="token keyword">if</span> <span class="token punctuation">(</span>tag <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">\'loser\'</span><span class="token punctuation">)</span> {\n                    color <span class="token operator">=</span> <span class="token string">\'volcano\'</span><span class="token comment" spellcheck="true">;</span>\n                    }\n                    return <span class="token punctuation">(</span>\n                    <span class="token operator">&lt;</span>Tag style<span class="token operator">=</span>{{padding<span class="token punctuation">:</span><span class="token string">\'5px\'</span>}} color<span class="token operator">=</span>{color} key<span class="token operator">=</span>{tag}<span class="token operator">></span>\n                        {tag<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>}\n                    <span class="token operator">&lt;</span><span class="token operator">/</span>Tag<span class="token operator">></span>\n                    <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                }<span class="token punctuation">)</span>}\n                <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">></span>\n            <span class="token punctuation">)</span><span class="token punctuation">,</span>\n        }<span class="token punctuation">,</span>\n        {\n            title<span class="token punctuation">:</span> <span class="token string">"操作"</span><span class="token punctuation">,</span>\n            dataIndex<span class="token punctuation">:</span> <span class="token string">"operation"</span><span class="token punctuation">,</span>\n            key<span class="token punctuation">:</span> <span class="token string">"operation"</span><span class="token punctuation">,</span>\n            fixed<span class="token punctuation">:</span> <span class="token string">\'right\'</span><span class="token punctuation">,</span>\n            filterTitle<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            render<span class="token punctuation">:</span> <span class="token punctuation">(</span>t<span class="token punctuation">,</span> r<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n            <span class="token keyword">const</span> btn <span class="token operator">=</span> <span class="token function">getOperationList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            return <span class="token function">renderTableOpts</span><span class="token punctuation">(</span>btn<span class="token punctuation">,</span> r<span class="token punctuation">)</span>\n            }\n        }<span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>\n    return columns<span class="token comment" spellcheck="true">;</span>\n}<span class="token comment" spellcheck="true">;</span>\n\n<span class="token keyword">const</span> SearchTable <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n    <span class="token keyword">const</span> <span class="token punctuation">[</span>loading<span class="token punctuation">,</span> setloading<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    <span class="token keyword">const</span> <span class="token punctuation">[</span>formData<span class="token punctuation">,</span> setFormData<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span>{}<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    <span class="token keyword">const</span> <span class="token punctuation">[</span>pagination<span class="token punctuation">,</span> setPagination<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span>{\n        current<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n        pageSize<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n        position<span class="token punctuation">:</span> <span class="token string">"bottomRight"</span><span class="token punctuation">,</span>\n        showSizeChanger<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        pageSizeOptions<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"10"</span><span class="token punctuation">,</span> <span class="token string">"20"</span><span class="token punctuation">,</span> <span class="token string">"50"</span><span class="token punctuation">,</span> <span class="token string">"100"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n    <span class="token keyword">const</span> <span class="token punctuation">[</span>dataSource<span class="token punctuation">,</span> setDataSource<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n    <span class="token keyword">const</span> queryUserList <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n        <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span>let key <span class="token operator">=</span> <span class="token number">0</span><span class="token comment" spellcheck="true">; key &lt; 5; key++) {</span>\n            data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>{\n                key<span class="token punctuation">,</span>\n                name<span class="token punctuation">:</span> <span class="token string">\'John Brown\'</span> <span class="token operator">+</span> key<span class="token punctuation">,</span>\n                age<span class="token punctuation">:</span> <span class="token number">40</span> <span class="token operator">-</span> key<span class="token punctuation">,</span>\n                lineClampTwo<span class="token punctuation">:</span> `展示两行，超出省略；展示两行，超出省略；展示两行，超出省略；展示两行，超出省略；展示两行，超出省略`<span class="token punctuation">,</span>\n                lineClampOne<span class="token punctuation">:</span> `展示一行，超出省略；展示一行，超出省略；展示一行，超出省略；展示一行，超出省略；展示一行，超出省略`<span class="token punctuation">,</span>\n                tags<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'nice\'</span><span class="token punctuation">,</span> <span class="token string">\'developer\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n            }<span class="token punctuation">)</span>\n        }\n        return Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>{\n            bizData<span class="token punctuation">:</span> data<span class="token punctuation">,</span>\n            pagination<span class="token punctuation">:</span> {\n                total<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n            }<span class="token punctuation">,</span>\n        }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }<span class="token comment" spellcheck="true">;</span>\n\n    <span class="token keyword">const</span> fetchUserList <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n        <span class="token keyword">const</span> { current<span class="token punctuation">,</span> pageSize } <span class="token operator">=</span> pagination<span class="token comment" spellcheck="true">;</span>\n        <span class="token function">setloading</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        <span class="token function">queryUserList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>res<span class="token punctuation">:</span> any<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">)</span> {\n                <span class="token function">setDataSource</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>bizData<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                <span class="token function">setPagination</span><span class="token punctuation">(</span><span class="token punctuation">(</span>origin<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n                    return {\n                    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>origin<span class="token punctuation">,</span>\n                    total<span class="token punctuation">:</span> res<span class="token punctuation">.</span>pagination<span class="token punctuation">.</span>total<span class="token punctuation">,</span>\n                    }<span class="token comment" spellcheck="true">;</span>\n                }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            }\n        }<span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n            <span class="token function">setloading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }<span class="token comment" spellcheck="true">;</span>\n\n    <span class="token keyword">const</span> onTableChange <span class="token operator">=</span> <span class="token punctuation">(</span>pagination<span class="token punctuation">,</span> filters<span class="token punctuation">,</span> sorter<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pagination<span class="token punctuation">,</span><span class="token string">\'pagination\'</span><span class="token punctuation">)</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>filters<span class="token punctuation">,</span><span class="token string">\'filters\'</span><span class="token punctuation">)</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sorter<span class="token punctuation">,</span><span class="token string">\'sorter\'</span><span class="token punctuation">)</span>\n        <span class="token function">setPagination</span><span class="token punctuation">(</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n            return {\n                <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>value<span class="token punctuation">,</span>\n                <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>pagination\n            }<span class="token comment" spellcheck="true">;</span>\n        }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }<span class="token comment" spellcheck="true">;</span>\n\n    <span class="token keyword">const</span> getJsxElement <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n        return <span class="token operator">&lt;></span>\n        <span class="token operator">&lt;</span>Button type<span class="token operator">=</span><span class="token string">"primary"</span><span class="token operator">></span>Add<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>\n        <span class="token operator">&lt;</span>Button<span class="token operator">></span>Edit<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>\n        <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">></span>\n    }\n\n    React<span class="token punctuation">.</span><span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n        <span class="token function">fetchUserList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }<span class="token punctuation">,</span> <span class="token punctuation">[</span>formData<span class="token punctuation">,</span> pagination<span class="token punctuation">.</span>current<span class="token punctuation">,</span> pagination<span class="token punctuation">.</span>pageSize<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n    return <span class="token punctuation">(</span>\n        <span class="token operator">&lt;</span>ProTable\n            tableProps<span class="token operator">=</span>{{\n                tableId<span class="token punctuation">:</span> <span class="token string">\'search_table\'</span><span class="token punctuation">,</span> <span class="token operator">/</span><span class="token operator">/</span> 用于本地存储不展示列数据\n                loading<span class="token punctuation">,</span>\n                rowKey<span class="token punctuation">:</span> <span class="token string">"key"</span><span class="token punctuation">,</span>\n                dataSource<span class="token punctuation">,</span>\n                columns<span class="token punctuation">:</span> <span class="token function">getTableColumns</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                paginationProps<span class="token punctuation">:</span> { <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>pagination }<span class="token punctuation">,</span>\n                tableHeaderSearchInput<span class="token punctuation">:</span> { <span class="token operator">/</span><span class="token operator">/</span> 搜索框\n                    submit<span class="token punctuation">:</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {\n                        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> <span class="token string">\'submit\'</span><span class="token punctuation">)</span>\n                    }<span class="token punctuation">,</span>\n                    searchInputType<span class="token punctuation">:</span><span class="token string">\'search\'</span><span class="token punctuation">,</span>\n                    searchAttr<span class="token punctuation">:</span>{\n                        placeholder<span class="token punctuation">:</span><span class="token string">\'请输入关键字\'</span><span class="token punctuation">,</span>\n                        className<span class="token punctuation">:</span><span class="token string">\'customClassName\'</span><span class="token punctuation">,</span>\n                    }<span class="token punctuation">,</span>\n                    searchTrigger<span class="token punctuation">:</span> <span class="token string">\'enter\'</span> <span class="token operator">/</span><span class="token operator">/</span> 触发搜索的条件\n                }<span class="token punctuation">,</span>\n                getJsxElement<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">getJsxElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                pgSelectComponentText<span class="token punctuation">:</span><span class="token string">\'每页展示\'</span><span class="token punctuation">,</span>\n                attrs<span class="token punctuation">:</span> {\n                    onChange<span class="token punctuation">:</span> onTableChange<span class="token punctuation">,</span>\n                    scroll<span class="token punctuation">:</span> {\n                        x<span class="token punctuation">:</span> <span class="token string">\'max-content\'</span><span class="token punctuation">,</span>\n                    }<span class="token punctuation">,</span>\n                }\n            }}\n        <span class="token operator">/</span><span class="token operator">></span>\n    <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n}<span class="token comment" spellcheck="true">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token operator">&lt;</span>SearchTable <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span>\n  mountNode\n<span class="token punctuation">)</span>'}],highlightedCodes:{tsx:'<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ProTable<span class="token punctuation">,</span> Select<span class="token punctuation">,</span> Button<span class="token punctuation">,</span> IconFont<span class="token punctuation">,</span> Tag <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'knowdesign\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> renderTableOpts <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'knowdesign/common-pages/render-table-opts\'</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 获取 操作项相关配置</span>\n<span class="token keyword">const</span> <span class="token function-variable function">getOperationList</span> <span class="token operator">=</span> <span class="token punctuation">(</span>props<span class="token operator">?</span><span class="token operator">:</span> any<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      label<span class="token operator">:</span> <span class="token string">\'编辑\'</span><span class="token punctuation">,</span>\n      type<span class="token operator">:</span> <span class="token string">\'icon-bianji\'</span><span class="token punctuation">,</span>\n      <span class="token function-variable function">clickFunc</span><span class="token operator">:</span> <span class="token punctuation">(</span>record<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>record<span class="token punctuation">,</span> <span class="token string">\'edit click\'</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      label<span class="token operator">:</span> <span class="token string">\'删除\'</span><span class="token punctuation">,</span>\n      type<span class="token operator">:</span> <span class="token string">\'icon-shanchu\'</span><span class="token punctuation">,</span>\n      <span class="token function-variable function">clickFunc</span><span class="token operator">:</span> <span class="token punctuation">(</span>record<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>record<span class="token punctuation">,</span> <span class="token string">\'delete click\'</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      label<span class="token operator">:</span> <span class="token string">\'默认\'</span><span class="token punctuation">,</span>\n      type<span class="token operator">:</span> <span class="token string">\'icon-jiahao\'</span><span class="token punctuation">,</span>\n      <span class="token function-variable function">clickFunc</span><span class="token operator">:</span> <span class="token punctuation">(</span>record<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>record<span class="token punctuation">,</span> <span class="token string">\'default click\'</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      label<span class="token operator">:</span> <span class="token string">\'操作记录\'</span><span class="token punctuation">,</span>\n      type<span class="token operator">:</span> <span class="token string">\'icon-caozuojilu\'</span><span class="token punctuation">,</span>\n      <span class="token function-variable function">clickFunc</span><span class="token operator">:</span> <span class="token punctuation">(</span>record<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>record<span class="token punctuation">,</span> <span class="token string">\'测试 click\'</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      label<span class="token operator">:</span> <span class="token string">\'设置\'</span><span class="token punctuation">,</span>\n      type<span class="token operator">:</span> <span class="token string">\'icon-shezhi\'</span><span class="token punctuation">,</span>\n      <span class="token function-variable function">clickFunc</span><span class="token operator">:</span> <span class="token punctuation">(</span>record<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>record<span class="token punctuation">,</span> <span class="token string">\'测试 click\'</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token comment">// columns config</span>\n<span class="token keyword">const</span> <span class="token function-variable function">getTableColumns</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n            title<span class="token operator">:</span> <span class="token string">"Name"</span><span class="token punctuation">,</span>\n            dataIndex<span class="token operator">:</span> <span class="token string">"name"</span><span class="token punctuation">,</span>\n            key<span class="token operator">:</span> <span class="token string">"name"</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n            title<span class="token operator">:</span> <span class="token string">"Age"</span><span class="token punctuation">,</span>\n            dataIndex<span class="token operator">:</span> <span class="token string">"age"</span><span class="token punctuation">,</span>\n            key<span class="token operator">:</span> <span class="token string">"age"</span><span class="token punctuation">,</span>\n            <span class="token function-variable function">sorter</span><span class="token operator">:</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">{</span>\n                <span class="token keyword">return</span> a<span class="token punctuation">.</span>age<span class="token operator">-</span>b<span class="token punctuation">.</span>age<span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n            title<span class="token operator">:</span> <span class="token string">"LineClampTwo"</span><span class="token punctuation">,</span>\n            dataIndex<span class="token operator">:</span> <span class="token string">"lineClampTwo"</span><span class="token punctuation">,</span>\n            key<span class="token operator">:</span> <span class="token string">"lineClampTwo"</span><span class="token punctuation">,</span>\n            lineClampTwo<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            needTooltip<span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>\n            width<span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n            title<span class="token operator">:</span> <span class="token string">"LineClampOne"</span><span class="token punctuation">,</span>\n            dataIndex<span class="token operator">:</span> <span class="token string">"lineClampOne"</span><span class="token punctuation">,</span>\n            key<span class="token operator">:</span> <span class="token string">"lineClampOne"</span><span class="token punctuation">,</span>\n            lineClampOne<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            needTooltip<span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>\n            width<span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n            title<span class="token operator">:</span> <span class="token string">\'Tags\'</span><span class="token punctuation">,</span>\n            key<span class="token operator">:</span> <span class="token string">\'tags\'</span><span class="token punctuation">,</span>\n            dataIndex<span class="token operator">:</span> <span class="token string">\'tags\'</span><span class="token punctuation">,</span>\n            <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span>_<span class="token punctuation">,</span> <span class="token punctuation">{</span> tags <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>\n                <span class="token punctuation">{</span>tags<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>tag <span class="token operator">=></span> <span class="token punctuation">{</span>\n                    <span class="token keyword">let</span> color <span class="token operator">=</span> tag<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">5</span> <span class="token operator">?</span> <span class="token string">\'geekblue\'</span> <span class="token operator">:</span> <span class="token string">\'green\'</span><span class="token punctuation">;</span>\n                    <span class="token keyword">if</span> <span class="token punctuation">(</span>tag <span class="token operator">===</span> <span class="token string">\'loser\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    color <span class="token operator">=</span> <span class="token string">\'volcano\'</span><span class="token punctuation">;</span>\n                    <span class="token punctuation">}</span>\n                    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Tag</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>padding<span class="token operator">:</span><span class="token string">\'5px\'</span><span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token attr-name">color</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>color<span class="token punctuation">}</span></span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>tag<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n                        <span class="token punctuation">{</span>tag<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Tag</span></span><span class="token punctuation">></span></span>\n                    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>\n            <span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n            title<span class="token operator">:</span> <span class="token string">"操作"</span><span class="token punctuation">,</span>\n            dataIndex<span class="token operator">:</span> <span class="token string">"operation"</span><span class="token punctuation">,</span>\n            key<span class="token operator">:</span> <span class="token string">"operation"</span><span class="token punctuation">,</span>\n            fixed<span class="token operator">:</span> <span class="token string">\'right\'</span><span class="token punctuation">,</span>\n            filterTitle<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span>t<span class="token punctuation">,</span> r<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">const</span> btn <span class="token operator">=</span> <span class="token function">getOperationList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">return</span> <span class="token function">renderTableOpts</span><span class="token punctuation">(</span>btn<span class="token punctuation">,</span> r<span class="token punctuation">)</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> columns<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">SearchTable</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">[</span>loading<span class="token punctuation">,</span> setloading<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> <span class="token punctuation">[</span>formData<span class="token punctuation">,</span> setFormData<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> <span class="token punctuation">[</span>pagination<span class="token punctuation">,</span> setPagination<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        current<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n        pageSize<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n        position<span class="token operator">:</span> <span class="token string">"bottomRight"</span><span class="token punctuation">,</span>\n        showSizeChanger<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        pageSizeOptions<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"10"</span><span class="token punctuation">,</span> <span class="token string">"20"</span><span class="token punctuation">,</span> <span class="token string">"50"</span><span class="token punctuation">,</span> <span class="token string">"100"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">const</span> <span class="token punctuation">[</span>dataSource<span class="token punctuation">,</span> setDataSource<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">const</span> <span class="token function-variable function">queryUserList</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> key <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> key<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                key<span class="token punctuation">,</span>\n                name<span class="token operator">:</span> <span class="token string">\'John Brown\'</span> <span class="token operator">+</span> key<span class="token punctuation">,</span>\n                age<span class="token operator">:</span> <span class="token number">40</span> <span class="token operator">-</span> key<span class="token punctuation">,</span>\n                lineClampTwo<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">展示两行，超出省略；展示两行，超出省略；展示两行，超出省略；展示两行，超出省略；展示两行，超出省略</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n                lineClampOne<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">展示一行，超出省略；展示一行，超出省略；展示一行，超出省略；展示一行，超出省略；展示一行，超出省略</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n                tags<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'nice\'</span><span class="token punctuation">,</span> <span class="token string">\'developer\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            bizData<span class="token operator">:</span> data<span class="token punctuation">,</span>\n            pagination<span class="token operator">:</span> <span class="token punctuation">{</span>\n                total<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">const</span> <span class="token function-variable function">fetchUserList</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> <span class="token punctuation">{</span> current<span class="token punctuation">,</span> pageSize <span class="token punctuation">}</span> <span class="token operator">=</span> pagination<span class="token punctuation">;</span>\n        <span class="token function">setloading</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token function">queryUserList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>res<span class="token operator">:</span> any<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token function">setDataSource</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>bizData<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token function">setPagination</span><span class="token punctuation">(</span><span class="token punctuation">(</span>origin<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n                    <span class="token operator">...</span>origin<span class="token punctuation">,</span>\n                    total<span class="token operator">:</span> res<span class="token punctuation">.</span>pagination<span class="token punctuation">.</span>total<span class="token punctuation">,</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token function">setloading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">const</span> <span class="token function-variable function">onTableChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span>pagination<span class="token punctuation">,</span> filters<span class="token punctuation">,</span> sorter<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pagination<span class="token punctuation">,</span><span class="token string">\'pagination\'</span><span class="token punctuation">)</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>filters<span class="token punctuation">,</span><span class="token string">\'filters\'</span><span class="token punctuation">)</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sorter<span class="token punctuation">,</span><span class="token string">\'sorter\'</span><span class="token punctuation">)</span>\n        <span class="token function">setPagination</span><span class="token punctuation">(</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token punctuation">{</span>\n                <span class="token operator">...</span>value<span class="token punctuation">,</span>\n                <span class="token operator">...</span>pagination\n            <span class="token punctuation">}</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">const</span> <span class="token function-variable function">getJsxElement</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Add<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>Edit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>\n    <span class="token punctuation">}</span>\n\n    React<span class="token punctuation">.</span><span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token function">fetchUserList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>formData<span class="token punctuation">,</span> pagination<span class="token punctuation">.</span>current<span class="token punctuation">,</span> pagination<span class="token punctuation">.</span>pageSize<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n        <span class="token operator">&lt;</span>ProTable\n            tableProps<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n                tableId<span class="token operator">:</span> <span class="token string">\'search_table\'</span><span class="token punctuation">,</span> <span class="token comment">// 用于本地存储不展示列数据</span>\n                loading<span class="token punctuation">,</span>\n                rowKey<span class="token operator">:</span> <span class="token string">"key"</span><span class="token punctuation">,</span>\n                dataSource<span class="token punctuation">,</span>\n                columns<span class="token operator">:</span> <span class="token function">getTableColumns</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                paginationProps<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token operator">...</span>pagination <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                tableHeaderSearchInput<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">// 搜索框</span>\n                    <span class="token function-variable function">submit</span><span class="token operator">:</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> <span class="token string">\'submit\'</span><span class="token punctuation">)</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                    searchInputType<span class="token operator">:</span><span class="token string">\'search\'</span><span class="token punctuation">,</span>\n                    searchAttr<span class="token operator">:</span><span class="token punctuation">{</span>\n                        placeholder<span class="token operator">:</span><span class="token string">\'请输入关键字\'</span><span class="token punctuation">,</span>\n                        className<span class="token operator">:</span><span class="token string">\'customClassName\'</span><span class="token punctuation">,</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                    searchTrigger<span class="token operator">:</span> <span class="token string">\'enter\'</span> <span class="token comment">// 触发搜索的条件</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token function-variable function">getJsxElement</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">getJsxElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                pgSelectComponentText<span class="token operator">:</span><span class="token string">\'每页展示\'</span><span class="token punctuation">,</span>\n                attrs<span class="token operator">:</span> <span class="token punctuation">{</span>\n                    onChange<span class="token operator">:</span> onTableChange<span class="token punctuation">,</span>\n                    scroll<span class="token operator">:</span> <span class="token punctuation">{</span>\n                        x<span class="token operator">:</span> <span class="token string">\'max-content\'</span><span class="token punctuation">,</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        <span class="token operator">/</span><span class="token operator">></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">SearchTable</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n  mountNode\n<span class="token punctuation">)</span>',jsx:'<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ProTable<span class="token punctuation">,</span> Button<span class="token punctuation">,</span> Tag <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'knowdesign\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> renderTableOpts <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'knowdesign/common-pages/render-table-opts\'</span><span class="token punctuation">;</span> <span class="token comment">// 获取 操作项相关配置</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">getOperationList</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">\'编辑\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'icon-bianji\'</span><span class="token punctuation">,</span>\n      <span class="token function-variable function">clickFunc</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">record</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>record<span class="token punctuation">,</span> <span class="token string">\'edit click\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">\'删除\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'icon-shanchu\'</span><span class="token punctuation">,</span>\n      <span class="token function-variable function">clickFunc</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">record</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>record<span class="token punctuation">,</span> <span class="token string">\'delete click\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">\'默认\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'icon-jiahao\'</span><span class="token punctuation">,</span>\n      <span class="token function-variable function">clickFunc</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">record</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>record<span class="token punctuation">,</span> <span class="token string">\'default click\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">\'操作记录\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'icon-caozuojilu\'</span><span class="token punctuation">,</span>\n      <span class="token function-variable function">clickFunc</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">record</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>record<span class="token punctuation">,</span> <span class="token string">\'测试 click\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">\'设置\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'icon-shezhi\'</span><span class="token punctuation">,</span>\n      <span class="token function-variable function">clickFunc</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">record</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>record<span class="token punctuation">,</span> <span class="token string">\'测试 click\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// columns config</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">getTableColumns</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'Name\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'Age\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">\'age\'</span><span class="token punctuation">,</span>\n      <span class="token function-variable function">sorter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> a<span class="token punctuation">.</span>age <span class="token operator">-</span> b<span class="token punctuation">.</span>age<span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'LineClampTwo\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">\'lineClampTwo\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">\'lineClampTwo\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">lineClampTwo</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">needTooltip</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'LineClampOne\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">\'lineClampOne\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">\'lineClampOne\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">lineClampOne</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">needTooltip</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'Tags\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">\'tags\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">\'tags\'</span><span class="token punctuation">,</span>\n      <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">_<span class="token punctuation">,</span> <span class="token punctuation">{</span> tags <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>\n          <span class="token punctuation">{</span>tags<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">tag</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">let</span> color <span class="token operator">=</span> tag<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">5</span> <span class="token operator">?</span> <span class="token string">\'geekblue\'</span> <span class="token operator">:</span> <span class="token string">\'green\'</span><span class="token punctuation">;</span>\n\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>tag <span class="token operator">===</span> <span class="token string">\'loser\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n              color <span class="token operator">=</span> <span class="token string">\'volcano\'</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n\n            <span class="token keyword">return</span> <span class="token punctuation">(</span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Tag</span></span>\n                <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n                  <span class="token literal-property property">padding</span><span class="token operator">:</span> <span class="token string">\'5px\'</span><span class="token punctuation">,</span>\n                <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n                <span class="token attr-name">color</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>color<span class="token punctuation">}</span></span>\n                <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>tag<span class="token punctuation">}</span></span>\n              <span class="token punctuation">></span></span>\n                <span class="token punctuation">{</span>tag<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Tag</span></span><span class="token punctuation">></span></span>\n            <span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>\n      <span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'操作\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">\'operation\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">\'operation\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">fixed</span><span class="token operator">:</span> <span class="token string">\'right\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">filterTitle</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> r</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> btn <span class="token operator">=</span> <span class="token function">getOperationList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> <span class="token function">renderTableOpts</span><span class="token punctuation">(</span>btn<span class="token punctuation">,</span> r<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> columns<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">SearchTable</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>loading<span class="token punctuation">,</span> setloading<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>formData<span class="token punctuation">,</span> setFormData<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>pagination<span class="token punctuation">,</span> setPagination<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">current</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">pageSize</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">position</span><span class="token operator">:</span> <span class="token string">\'bottomRight\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">showSizeChanger</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">pageSizeOptions</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'10\'</span><span class="token punctuation">,</span> <span class="token string">\'20\'</span><span class="token punctuation">,</span> <span class="token string">\'50\'</span><span class="token punctuation">,</span> <span class="token string">\'100\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>dataSource<span class="token punctuation">,</span> setDataSource<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">queryUserList</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> key <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> key<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        key<span class="token punctuation">,</span>\n        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'John Brown\'</span> <span class="token operator">+</span> key<span class="token punctuation">,</span>\n        <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">40</span> <span class="token operator">-</span> key<span class="token punctuation">,</span>\n        <span class="token literal-property property">lineClampTwo</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">展示两行，超出省略；展示两行，超出省略；展示两行，超出省略；展示两行，超出省略；展示两行，超出省略</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n        <span class="token literal-property property">lineClampOne</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">展示一行，超出省略；展示一行，超出省略；展示一行，超出省略；展示一行，超出省略；展示一行，超出省略</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n        <span class="token literal-property property">tags</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'nice\'</span><span class="token punctuation">,</span> <span class="token string">\'developer\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token literal-property property">bizData</span><span class="token operator">:</span> data<span class="token punctuation">,</span>\n      <span class="token literal-property property">pagination</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">total</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">fetchUserList</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> current<span class="token punctuation">,</span> pageSize <span class="token punctuation">}</span> <span class="token operator">=</span> pagination<span class="token punctuation">;</span>\n    <span class="token function">setloading</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">queryUserList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token function">setDataSource</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>bizData<span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token function">setPagination</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">origin</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token operator">...</span>origin<span class="token punctuation">,</span> <span class="token literal-property property">total</span><span class="token operator">:</span> res<span class="token punctuation">.</span>pagination<span class="token punctuation">.</span>total <span class="token punctuation">}</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token function">setloading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">onTableChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">pagination<span class="token punctuation">,</span> filters<span class="token punctuation">,</span> sorter</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pagination<span class="token punctuation">,</span> <span class="token string">\'pagination\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>filters<span class="token punctuation">,</span> <span class="token string">\'filters\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sorter<span class="token punctuation">,</span> <span class="token string">\'sorter\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">setPagination</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token operator">...</span>value<span class="token punctuation">,</span> <span class="token operator">...</span>pagination <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">getJsxElement</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Add<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>Edit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  React<span class="token punctuation">.</span><span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">fetchUserList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>formData<span class="token punctuation">,</span> pagination<span class="token punctuation">.</span>current<span class="token punctuation">,</span> pagination<span class="token punctuation">.</span>pageSize<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token operator">&lt;</span>ProTable\n      tableProps<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">tableId</span><span class="token operator">:</span> <span class="token string">\'search_table\'</span><span class="token punctuation">,</span>\n        <span class="token comment">// 用于本地存储不展示列数据</span>\n        loading<span class="token punctuation">,</span>\n        <span class="token literal-property property">rowKey</span><span class="token operator">:</span> <span class="token string">\'key\'</span><span class="token punctuation">,</span>\n        dataSource<span class="token punctuation">,</span>\n        <span class="token literal-property property">columns</span><span class="token operator">:</span> <span class="token function">getTableColumns</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">paginationProps</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token operator">...</span>pagination <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">tableHeaderSearchInput</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token comment">// 搜索框</span>\n          <span class="token function-variable function">submit</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> <span class="token string">\'submit\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">searchInputType</span><span class="token operator">:</span> <span class="token string">\'search\'</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">searchAttr</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token literal-property property">placeholder</span><span class="token operator">:</span> <span class="token string">\'请输入关键字\'</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">className</span><span class="token operator">:</span> <span class="token string">\'customClassName\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">searchTrigger</span><span class="token operator">:</span> <span class="token string">\'enter\'</span><span class="token punctuation">,</span> <span class="token comment">// 触发搜索的条件</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">getJsxElement</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">getJsxElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">pgSelectComponentText</span><span class="token operator">:</span> <span class="token string">\'每页展示\'</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">attrs</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token literal-property property">onChange</span><span class="token operator">:</span> onTableChange<span class="token punctuation">,</span>\n          <span class="token literal-property property">scroll</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token string">\'max-content\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">}</span>\n    <span class="token operator">/</span><span class="token operator">></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">SearchTable</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>\n'},preview:function(){a(0),a(35);function n(s){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(s)}var s=function(s,a){if(!a&&s&&s.__esModule)return s;if(null===s||"object"!==n(s)&&"function"!=typeof s)return{default:s};var t=o(a);if(t&&t.has(s))return t.get(s);var p={},e=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var c in s)if("default"!==c&&Object.prototype.hasOwnProperty.call(s,c)){var l=e?Object.getOwnPropertyDescriptor(s,c):null;l&&(l.get||l.set)?Object.defineProperty(p,c,l):p[c]=s[c]}p.default=s,t&&t.set(s,p);return p}(a(0)),t=a(96),p=a(194);function o(n){if("function"!=typeof WeakMap)return null;var s=new WeakMap,a=new WeakMap;return(o=function(n){return n?a:s})(n)}function e(n,s){var a=Object.keys(n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(n);s&&(t=t.filter((function(s){return Object.getOwnPropertyDescriptor(n,s).enumerable}))),a.push.apply(a,t)}return a}function c(n){for(var s=1;s<arguments.length;s++){var a=null!=arguments[s]?arguments[s]:{};s%2?e(Object(a),!0).forEach((function(s){l(n,s,a[s])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(a)):e(Object(a)).forEach((function(s){Object.defineProperty(n,s,Object.getOwnPropertyDescriptor(a,s))}))}return n}function l(n,s,a){return s in n?Object.defineProperty(n,s,{value:a,enumerable:!0,configurable:!0,writable:!0}):n[s]=a,n}function u(n,s){return function(n){if(Array.isArray(n))return n}(n)||function(n,s){var a=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null==a)return;var t,p,o=[],e=!0,c=!1;try{for(a=a.call(n);!(e=(t=a.next()).done)&&(o.push(t.value),!s||o.length!==s);e=!0);}catch(n){c=!0,p=n}finally{try{e||null==a.return||a.return()}finally{if(c)throw p}}return o}(n,s)||function(n,s){if(!n)return;if("string"==typeof n)return k(n,s);var a=Object.prototype.toString.call(n).slice(8,-1);"Object"===a&&n.constructor&&(a=n.constructor.name);if("Map"===a||"Set"===a)return Array.from(n);if("Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a))return k(n,s)}(n,s)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function k(n,s){(null==s||s>n.length)&&(s=n.length);for(var a=0,t=new Array(s);a<s;a++)t[a]=n[a];return t}var i=function(){return[{title:"Name",dataIndex:"name",key:"name"},{title:"Age",dataIndex:"age",key:"age",sorter:function(n,s){return n.age-s.age}},{title:"LineClampTwo",dataIndex:"lineClampTwo",key:"lineClampTwo",lineClampTwo:!0,needTooltip:!0,width:200},{title:"LineClampOne",dataIndex:"lineClampOne",key:"lineClampOne",lineClampOne:!0,needTooltip:!0,width:300},{title:"Tags",key:"tags",dataIndex:"tags",render:function(n,a){var p=a.tags;return s.default.createElement(s.default.Fragment,null,p.map((function(n){var a=n.length>5?"geekblue":"green";return"loser"===n&&(a="volcano"),s.default.createElement(t.Tag,{style:{padding:"5px"},color:a,key:n},n.toUpperCase())})))}},{title:"操作",dataIndex:"operation",key:"operation",fixed:"right",filterTitle:!0,render:function(n,s){var a=[{label:"编辑",type:"icon-bianji",clickFunc:function(n){console.log(n,"edit click")}},{label:"删除",type:"icon-shanchu",clickFunc:function(n){console.log(n,"delete click")}},{label:"默认",type:"icon-jiahao",clickFunc:function(n){console.log(n,"default click")}},{label:"操作记录",type:"icon-caozuojilu",clickFunc:function(n){console.log(n,"测试 click")}},{label:"设置",type:"icon-shezhi",clickFunc:function(n){console.log(n,"测试 click")}}];return(0,p.renderTableOpts)(a,s)}}]},r=function(){var n=u((0,s.useState)(!1),2),a=n[0],p=n[1],o=u((0,s.useState)({}),2),e=o[0],l=(o[1],u((0,s.useState)({current:1,pageSize:10,position:"bottomRight",showSizeChanger:!0,pageSizeOptions:["10","20","50","100"]}),2)),k=l[0],r=l[1],g=u((0,s.useState)([]),2),d=g[0],m=g[1],y=function(){k.current,k.pageSize;p(!0),function(){for(var n=[],s=0;s<5;s++)n.push({key:s,name:"John Brown"+s,age:40-s,lineClampTwo:"展示两行，超出省略；展示两行，超出省略；展示两行，超出省略；展示两行，超出省略；展示两行，超出省略",lineClampOne:"展示一行，超出省略；展示一行，超出省略；展示一行，超出省略；展示一行，超出省略；展示一行，超出省略",tags:["nice","developer"]});return Promise.resolve({bizData:n,pagination:{total:10}})}().then((function(n){n&&(m(n.bizData),r((function(s){return c(c({},s),{},{total:n.pagination.total})})))})).finally((function(){p(!1)}))};return s.default.useEffect((function(){y()}),[e,k.current,k.pageSize]),s.default.createElement(t.ProTable,{tableProps:{tableId:"search_table",loading:a,rowKey:"key",dataSource:d,columns:i(),paginationProps:c({},k),tableHeaderSearchInput:{submit:function(n){console.log(n,"submit")},searchInputType:"search",searchAttr:{placeholder:"请输入关键字",className:"customClassName"},searchTrigger:"enter"},getJsxElement:function(){return s.default.createElement(s.default.Fragment,null,s.default.createElement(t.Button,{type:"primary"},"Add"),s.default.createElement(t.Button,null,"Edit"))},pgSelectComponentText:"每页展示",attrs:{onChange:function(n,s,a){console.log(n,"pagination"),console.log(s,"filters"),console.log(a,"sorter"),r((function(s){return c(c({},s),n)}))},scroll:{x:"max-content"}}}})};return s.default.createElement(r,null)}}},5245:function(n,s,a){n.exports={content:[],meta:{order:0,title:"基本",filename:"components/extend/pro-table/demo/base.md",id:"components-extend-pro-table-demo-base"},toc:["ul"],highlightedCode:["pre",{lang:"tsx",highlighted:'import Demo from <span class="token string">\'../demo.tsx\'</span>\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token operator">&lt;</span>Demo <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span>\n  mountNode\n<span class="token punctuation">)</span>'}],highlightedCodes:{tsx:'<span class="token keyword">import</span> Demo <span class="token keyword">from</span> <span class="token string">\'../demo.tsx\'</span>\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Demo</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n  mountNode\n<span class="token punctuation">)</span>',jsx:'<span class="token keyword">import</span> Demo <span class="token keyword">from</span> <span class="token string">\'../demo.tsx\'</span><span class="token punctuation">;</span>\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Demo</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>\n'},preview:function(){var n,s=a(0),t=(a(35),(n=a(5246))&&n.__esModule?n:{default:n});return s.createElement(t.default,null)}}},5246:function(n,s,a){"use strict";a.r(s);var t=a(0),p=a.n(t),o=a(152),e=a(323),c=a(113),l=a(443),u=a(194),k=(a(1411),a(22)),i=a.n(k);function r(n,s){return function(n){if(Array.isArray(n))return n}(n)||function(n,s){var a=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null==a)return;var t,p,o=[],e=!0,c=!1;try{for(a=a.call(n);!(e=(t=a.next()).done)&&(o.push(t.value),!s||o.length!==s);e=!0);}catch(n){c=!0,p=n}finally{try{e||null==a.return||a.return()}finally{if(c)throw p}}return o}(n,s)||function(n,s){if(!n)return;if("string"==typeof n)return g(n,s);var a=Object.prototype.toString.call(n).slice(8,-1);"Object"===a&&n.constructor&&(a=n.constructor.name);if("Map"===a||"Set"===a)return Array.from(n);if("Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a))return g(n,s)}(n,s)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function g(n,s){(null==s||s>n.length)&&(s=n.length);for(var a=0,t=new Array(s);a<s;a++)t[a]=n[a];return t}function d(){return(d=Object.assign||function(n){for(var s=1;s<arguments.length;s++){var a=arguments[s];for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(n[t]=a[t])}return n}).apply(this,arguments)}var m=function(n){return p.a.createElement(p.a.Fragment,null,p.a.createElement("span",null,"每页展示"),p.a.createElement(o.a,d({bordered:!1,suffixIcon:p.a.createElement(e.a,{type:"icon-xiala"})},n)))};m.Option=o.a.Option;var y={searchText:"查询",resetText:"重置"},f=function(){return[{title:"主机名",dataIndex:"hostName",key:"hostName",width:200,fixed:"left",lineClampTwo:!0,needTooltip:!0},{title:"主机IP",dataIndex:"hostIp",key:"hostIp"},{title:"主机类型",dataIndex:"containerList",key:"containerList"},{title:"承载应用",dataIndex:"serviceList",key:"serviceList",width:150,className:"test_className",lineClampOne:!0,needTooltip:!0},{title:"Agent版本号",dataIndex:"agentVersion",key:"agentVersion"},{title:"Agent健康度",dataIndex:"agentHealthLevel",key:"agentHealthLevel",needTooltip:!0,tooltipPlace:"top",tooltipNode:p.a.createElement("span",null,"test tooltipNode"),render:function(n,s){return p.a.createElement("div",{style:{height:"20px"}},p.a.createElement(e.a,{type:"icon-".concat(n),style:{width:20,height:20,fontSize:"20px"}}))}},{title:"所属机房",dataIndex:"machineZone",key:"machineZone"},{title:"新增时间",dataIndex:"hostCreateTime",key:"hostCreateTime",render:function(n){return i()(n).format("YYYY-MM-DD HH:mm:ss")}},{title:"操作",dataIndex:"operation",key:"operation",fixed:"right",filterTitle:!0,render:function(n,s){var a=[{label:"编辑",type:"icon-bianji",clickFunc:function(n){console.log(n,"edit click")}},{label:"删除",type:"icon-shanchu",clickFunc:function(n){console.log(n,"delete click")}},{label:"默认",type:"icon-jiahao",clickFunc:function(n){console.log(n,"default click")}},{label:"操作记录",type:"icon-caozuojilu",clickFunc:function(n){console.log(n,"测试 click")}},{label:"设置",type:"icon-shezhi",clickFunc:function(n){console.log(n,"测试 click")}}];return Object(u.renderTableOpts)(a,s)}}]};s.default=function(){var n=r(Object(t.useState)(!1),2),s=n[0],a=n[1],o=r(Object(t.useState)({}),2),e=o[0],u=o[1],k=r(Object(t.useState)({current:1,pageSize:10,position:"bottomRight",showSizeChanger:!0,pageSizeOptions:["10","20","50","100","200","500"],showTotal:function(n){return"共 ".concat(n," 条目")},locale:{items_per_page:"条"},selectComponentClass:m}),2),i=k[0],g=k[1],d=r(Object(t.useState)([]),2),b=d[0],h=d[1],w=function(){var n=i.current,s=i.pageSize;Object.assign(Object.assign({},e),{page:n,size:s});a(!0),Promise.resolve({bizData:[{hostName:"default:ldefault:ldefault:ldefault:ldefault:ldefault:ldefault:l",hostIp:"172.16.101.69",containerList:"容器",serviceList:["k8s_test,test1,123123,k8s_test,test1,123123,k8s_test,test1,123123,k8s_test,test1,123123"],agentVersion:"1.1.0",agentHealthLevel:"lv",machineZone:"第二机房",hostCreateTime:1640589209112},{hostName:"default:log-collect2",hostIp:"172.16.111.39",containerList:"容器",serviceList:["k8s_test,test1,123123"],agentVersion:"1.1.0",agentHealthLevel:"huang",machineZone:"第二机房",hostCreateTime:1640589209112},{hostName:"default:log-collect3",hostIp:"172.56.101.69",containerList:"容器",serviceList:["k8s_test,test1,123123"],agentVersion:"1.1.0",agentHealthLevel:"hong",machineZone:"第二机房",hostCreateTime:1640589209112},{hostName:"default:log-collect4",hostIp:"172.20.101.69",containerList:"容器",serviceList:["k8s_test,test1,123123"],agentVersion:"1.1.0",agentHealthLevel:"hong",machineZone:"第二机房",hostCreateTime:1640589209224},{hostName:"default:log-collect5",hostIp:"172.16.101.19",containerList:"容器",serviceList:["k8s_test,test1,123123"],agentVersion:"1.1.0",agentHealthLevel:"lv",machineZone:"第二机房",hostCreateTime:1640589209112},{hostName:"default:log-collect6",hostIp:"172.16.101.29",containerList:"容器",serviceList:["k8s_test,test1,123123"],agentVersion:"1.1.0",agentHealthLevel:"huang",machineZone:"第二机房",hostCreateTime:1640589209112},{hostName:"default:log-collect7",hostIp:"171.16.101.69",containerList:"容器",serviceList:["k8s_test,test1,123123"],agentVersion:"1.1.0",agentHealthLevel:"lv",machineZone:"第二机房",hostCreateTime:1640589209112},{hostName:"default:log-collect8",hostIp:"172.16.101.65",containerList:"容器",serviceList:["k8s_test,test1,123123"],agentVersion:"1.1.0",agentHealthLevel:"hong",machineZone:"第二机房",hostCreateTime:1640589209112},{hostName:"default:log-collect9",hostIp:"172.16.101.89",containerList:"容器",serviceList:["k8s_test,test1,123123"],agentVersion:"1.1.0",agentHealthLevel:"lv",machineZone:"第二机房",hostCreateTime:1640589209112},{hostName:"default:log-collect10",hostIp:"172.16.111.69",containerList:"容器",serviceList:["k8s_test,test1,123123"],agentVersion:"1.1.0",agentHealthLevel:"huang",machineZone:"第二机房",hostCreateTime:1640589209112},{hostName:"default:log-collect11",hostIp:"172.16.101.70",containerList:"容器",serviceList:["k8s_test,test1,123123"],agentVersion:"1.1.0",agentHealthLevel:"lv",machineZone:"第二机房",hostCreateTime:1640589209112}],pagination:{total:11}}).then((function(n){n&&(h(n.bizData),g((function(s){return Object.assign(Object.assign({},s),{total:n.pagination.total})})))})).finally((function(){a(!1)}))};return p.a.useEffect((function(){w()}),[e,i.current,i.pageSize]),p.a.createElement(l.a,{showQueryForm:!0,queryFormProps:Object.assign(Object.assign({},y),{columns:[{type:"datePicker",title:"日期选择",dataIndex:"date1",placeholder:["请选择日期"]},{type:"dateRangePicker",title:"日期范围选择",dataIndex:"date2",placeholder:["开始日期","结束日期"]},{type:"timePicker",title:"时间选择",dataIndex:"time1",placeholder:["请选择时间"]},{type:"timeRangePicker",title:"时间范围选择",dataIndex:"time2",placeholder:["开始时间","结束时间"]},{type:"input",title:"用户账号",dataIndex:"username",placeholder:"请输入用户账号",componentProps:{maxLength:128}},{type:"input",title:"用户实名",dataIndex:"realName",placeholder:"请输入用户实名",componentProps:{maxLength:128}},{type:"select",title:"城市",dataIndex:"city",placeholder:"请选择",options:[{title:"北京",value:1},{title:"南京",value:2}]}],onSearch:function(n){var s=Object.assign({},n);console.log(s,"handleSubmit"),u(s)},onChange:function(n){console.log(n,"handleChange"),u(n)},initialValues:e,isResetClearAll:!0}),tableProps:{tableId:"agent_table",loading:s,rowKey:"hostIp",dataSource:b,tableScreen:!0,tableCustomColumns:!0,columns:f(),paginationProps:Object.assign({},i),tableHeaderSearchInput:{submit:function(n){console.log(n,"submit")},searchInputType:"search",searchAttr:{placeholder:"请输入关键字",className:"custonClassName"}},tableHeaderTitle:!0,tableHeaderCustomColumns:!0,getJsxElement:function(){return p.a.createElement(p.a.Fragment,null,p.a.createElement(c.a,null,"卸载"),p.a.createElement(c.a,null,"升级"),p.a.createElement(c.a,null,"安装"),p.a.createElement(c.a,{type:"primary"},"新增主机"))},attrs:{scroll:{x:"max-content",y:"300px"},onChange:function(n,s,a){console.log(n,"pagination"),g((function(s){return console.log(s,"valuess"),Object.assign(Object.assign({},s),n)}))}}}})}},5247:function(n,s,a){n.exports={content:[],meta:{order:2,title:"Demo3",filename:"components/extend/pro-table/demo/demo3.md",id:"components-extend-pro-table-demo-demo3"},toc:["ul"],highlightedCode:["pre",{lang:"tsx",highlighted:'import Demo3 from <span class="token string">\'../demo3\'</span>\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token operator">&lt;</span>Demo3 <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span>\n  mountNode\n<span class="token punctuation">)</span>'}],highlightedCodes:{tsx:'<span class="token keyword">import</span> Demo3 <span class="token keyword">from</span> <span class="token string">\'../demo3\'</span>\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Demo3</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n  mountNode\n<span class="token punctuation">)</span>',jsx:'<span class="token keyword">import</span> Demo3 <span class="token keyword">from</span> <span class="token string">\'../demo3\'</span><span class="token punctuation">;</span>\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Demo3</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>\n'},preview:function(){var n,s=a(0),t=(a(35),(n=a(5248))&&n.__esModule?n:{default:n});return s.createElement(t.default,null)}}},5248:function(n,s,a){"use strict";a.r(s);var t=a(0),p=a.n(t),o=a(443),e=a(113),c=a(194);a(1411);function l(n,s){return function(n){if(Array.isArray(n))return n}(n)||function(n,s){var a=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null==a)return;var t,p,o=[],e=!0,c=!1;try{for(a=a.call(n);!(e=(t=a.next()).done)&&(o.push(t.value),!s||o.length!==s);e=!0);}catch(n){c=!0,p=n}finally{try{e||null==a.return||a.return()}finally{if(c)throw p}}return o}(n,s)||function(n,s){if(!n)return;if("string"==typeof n)return u(n,s);var a=Object.prototype.toString.call(n).slice(8,-1);"Object"===a&&n.constructor&&(a=n.constructor.name);if("Map"===a||"Set"===a)return Array.from(n);if("Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a))return u(n,s)}(n,s)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function u(n,s){(null==s||s>n.length)&&(s=n.length);for(var a=0,t=new Array(s);a<s;a++)t[a]=n[a];return t}var k={searchText:"查询",resetText:"重置"},i=function(){return[{title:"用户账号",dataIndex:"username",key:"username",sorter:!0},{title:"用户实名",dataIndex:"realName",key:"realName"},{title:"所属部门",dataIndex:"deptList",key:"deptList",render:function(n){return n.map((function(n){return n.deptName})).join(">")}},{title:"电话",dataIndex:"phone",key:"phone"},{title:"邮箱",dataIndex:"email",key:"email"},{title:"最后更新时间",dataIndex:"updateTime",key:"updateTime"},{title:"操作",dataIndex:"operation",key:"operation",filterTitle:!0,render:function(n,s){var a=[{label:"编辑",type:"icon-bianji",clickFunc:function(n){console.log(n,"edit click")}},{label:"删除",type:"icon-shanchu",clickFunc:function(n){console.log(n,"delete click")}},{label:"默认",type:"icon-jiahao",clickFunc:function(n){console.log(n,"default click")}},{label:"操作记录",type:"icon-caozuojilu",clickFunc:function(n){console.log(n,"测试 click")}},{label:"设置",type:"icon-shezhi",clickFunc:function(n){console.log(n,"测试 click")}}];return Object(c.renderTableOpts)(a,s)}}]};s.default=function(){var n=l(Object(t.useState)(!1),2),s=n[0],a=n[1],c=l(Object(t.useState)({}),2),u=c[0],r=c[1],g=l(Object(t.useState)({current:1,pageSize:10,position:"bottomRight",showQuickJumper:!0,showSizeChanger:!0,pageSizeOptions:["10","20","50","100","200","500"],showTotal:function(n){return"共 ".concat(n," 条")}}),2),d=g[0],m=g[1],y=l(Object(t.useState)([]),2),f=y[0],b=y[1],h=l(Object(t.useState)(!1),2),w=(h[0],h[1],function(){var n=d.current,s=d.pageSize;Object.assign(Object.assign({},u),{page:n,size:s});a(!0),Promise.resolve({bizData:[],pagination:{total:10}}).then((function(n){n&&(b(n.bizData),m((function(s){return Object.assign(Object.assign({},s),{total:n.pagination.total})})))})).finally((function(){a(!1)}))});return p.a.useEffect((function(){w()}),[u,d.current,d.pageSize]),p.a.createElement(o.a,{queryFormProps:Object.assign(Object.assign({},k),{defaultCollapse:!0,columns:[{type:"input",title:"用户账号",dataIndex:"username",placeholder:"请输入用户账号",componentProps:{maxLength:128}},{type:"input",title:"用户实名",dataIndex:"realName",placeholder:"请输入用户实名",componentProps:{maxLength:128}},{type:"select",title:"城市",dataIndex:"city",placeholder:"请选择",options:[{title:"北京",value:1},{title:"南京",value:2}]}],onSearch:function(n){var s=Object.assign({},n);r(s)},onChange:function(n){r(n)},initialValues:u,isResetClearAll:!0}),tableProps:{tableId:"test",loading:s,rowKey:"id",dataSource:f,columns:i(),paginationProps:Object.assign(Object.assign({},d),{onChange:function(n,s){m((function(a){return Object.assign(Object.assign({},a),{current:n,pageSize:s})}))}}),searchInputRightBtns:[{type:"primary",label:"Add",clickFunc:function(){console.log("111Add")}}],tableHeaderSearchInput:{submit:function(n){console.log(n,"submit")},searchTrigger:"enter"},getJsxElement:function(){return p.a.createElement(p.a.Fragment,null,p.a.createElement(e.a,null,"卸载"),p.a.createElement(e.a,null,"升级"),p.a.createElement(e.a,null,"安装"),p.a.createElement(e.a,{type:"primary"},"新增主机"))},attrs:{bordered:!1,lineFillColor:!0,rowClassName:function(n,s){return s%2==0?"":"line-fill-color"}}}})}},5249:function(n,s,a){n.exports={content:[],meta:{order:1,title:"Demo",filename:"components/extend/pro-table/demo/test.md",id:"components-extend-pro-table-demo-test"},toc:["ul"],highlightedCode:["pre",{lang:"tsx",highlighted:'import Demo2 from <span class="token string">\'../demo2\'</span>\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token operator">&lt;</span>Demo2 <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span>\n  mountNode\n<span class="token punctuation">)</span>'}],highlightedCodes:{tsx:'<span class="token keyword">import</span> Demo2 <span class="token keyword">from</span> <span class="token string">\'../demo2\'</span>\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Demo2</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n  mountNode\n<span class="token punctuation">)</span>',jsx:'<span class="token keyword">import</span> Demo2 <span class="token keyword">from</span> <span class="token string">\'../demo2\'</span><span class="token punctuation">;</span>\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Demo2</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>\n'},preview:function(){var n,s=a(0),t=(a(35),(n=a(5250))&&n.__esModule?n:{default:n});return s.createElement(t.default,null)}}},5250:function(n,s,a){"use strict";a.r(s);var t=a(0),p=a.n(t),o=a(443),e=a(113),c=a(194);a(1411);function l(n,s){return function(n){if(Array.isArray(n))return n}(n)||function(n,s){var a=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null==a)return;var t,p,o=[],e=!0,c=!1;try{for(a=a.call(n);!(e=(t=a.next()).done)&&(o.push(t.value),!s||o.length!==s);e=!0);}catch(n){c=!0,p=n}finally{try{e||null==a.return||a.return()}finally{if(c)throw p}}return o}(n,s)||function(n,s){if(!n)return;if("string"==typeof n)return u(n,s);var a=Object.prototype.toString.call(n).slice(8,-1);"Object"===a&&n.constructor&&(a=n.constructor.name);if("Map"===a||"Set"===a)return Array.from(n);if("Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a))return u(n,s)}(n,s)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function u(n,s){(null==s||s>n.length)&&(s=n.length);for(var a=0,t=new Array(s);a<s;a++)t[a]=n[a];return t}var k={searchText:"查询",resetText:"重置"},i=function(){return[{title:"用户账号",dataIndex:"username",key:"username",invisible:!0},{title:"用户实名",dataIndex:"realName",key:"realName",invisible:!0},{title:"所属部门",dataIndex:"deptList",key:"deptList",render:function(n){return n.map((function(n){return n.deptName})).join(">")}},{title:"电话",dataIndex:"phone",key:"phone"},{title:"邮箱",dataIndex:"email",key:"email"},{title:"最后更新时间",dataIndex:"updateTime",key:"updateTime"},{title:"操作",dataIndex:"operation",key:"operation",render:function(n,s){var a=[{label:"编辑",type:"icon-bianji",clickFunc:function(n){console.log(n,"edit click")}},{label:"删除",type:"icon-shanchu",clickFunc:function(n){console.log(n,"delete click")}},{label:"默认",type:"icon-jiahao",clickFunc:function(n){console.log(n,"default click")}},{label:"操作记录",type:"icon-caozuojilu",clickFunc:function(n){console.log(n,"测试 click")}},{label:"设置",type:"icon-shezhi",clickFunc:function(n){console.log(n,"测试 click")}}];return Object(c.renderTableOpts)(a,s)}}]};s.default=function(){var n=l(Object(t.useState)(!1),2),s=n[0],a=n[1],c=l(Object(t.useState)({}),2),u=c[0],r=c[1],g=l(Object(t.useState)({current:1,pageSize:10,position:"bottomRight",showQuickJumper:!0,showSizeChanger:!0,pageSizeOptions:["10","20","50","100","200","500"],simple:!0}),2),d=g[0],m=g[1],y=l(Object(t.useState)([]),2),f=(y[0],y[1]),b=l(Object(t.useState)(!1),2),h=(b[0],b[1],function(){var n=d.current,s=d.pageSize;Object.assign(Object.assign({},u),{page:n,size:s});a(!0),Promise.resolve({bizData:[{id:1,username:"xiaoming",realName:"明明",deptList:[{deptName:"滴滴云"},{deptName:"业务研发"}],phone:1232312312,email:"2123123@weqw.com"}],pagination:{total:10}}).then((function(n){n&&(f(n.bizData),m((function(s){return Object.assign(Object.assign({},s),{total:n.pagination.total})})))})).finally((function(){a(!1)}))});return p.a.useEffect((function(){h()}),[u,d.current,d.pageSize]),p.a.createElement(o.a,{queryFormProps:Object.assign(Object.assign({},k),{defaultCollapse:!0,columns:[{type:"input",title:"用户账号",dataIndex:"username",placeholder:"请输入用户账号",componentProps:{maxLength:128}},{type:"input",title:"用户实名",dataIndex:"realName",placeholder:"请输入用户实名",componentProps:{maxLength:128}},{type:"select",title:"城市",dataIndex:"city",placeholder:"请选择",options:[{title:"北京",value:1},{title:"南京",value:2}]}],onSearch:function(n){var s=Object.assign({},n);r(s)},onChange:function(n){r(n)},initialValues:u,isResetClearAll:!0}),tableProps:{tableId:"test",loading:s,rowKey:"id",dataSource:[],columns:i(),isCustomPg:!1,paginationProps:Object.assign(Object.assign({},d),{onChange:function(n,s){m((function(a){return Object.assign(Object.assign({},a),{current:n,pageSize:s})}))}}),searchInputRightBtns:[{type:"primary",label:"Add",clickFunc:function(){console.log("111Add")}}],tableHeaderSearchInput:{submit:function(n){console.log(n,"submit")},searchTrigger:"enter"},getJsxElement:function(){return p.a.createElement(p.a.Fragment,null,p.a.createElement(e.a,null,"卸载"),p.a.createElement(e.a,null,"升级"),p.a.createElement(e.a,null,"安装"),p.a.createElement(e.a,{type:"primary"},"新增主机"))},attrs:{bordered:!1,lineFillColor:!0,rowClassName:function(n,s){return s%2==0?"":"line-fill-color"},expandable:{expandedRowRender:function(){for(var n=[{title:"Date",dataIndex:"date",key:"date"},{title:"Name",dataIndex:"name",key:"name"},{title:"Status",key:"state",render:function(n){return p.a.createElement("span",null,"Finished")}},{title:"Upgrade Status",dataIndex:"upgradeNum",key:"upgradeNum"},{title:"Action",dataIndex:"operation",key:"operation"}],s=[],a=0;a<3;++a)s.push({key:a,date:"2014-12-24 23:12:00",name:"This is production name",upgradeNum:"Upgraded: 56"});return p.a.createElement(o.a,{tableProps:{showHeader:!1,rowKey:"1",columns:n,dataSource:s,attrs:{pagination:!1,size:"small"}}})},onExpand:function(n,s){}}}}})}}}]);