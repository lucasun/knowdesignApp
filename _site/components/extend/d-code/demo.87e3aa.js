(window.webpackJsonp=window.webpackJsonp||[]).push([[156],{4137:function(n,s,a){n.exports={basic:a(5221),toggle:a(5222)}},5221:function(n,s,a){n.exports={content:[["p","简单的使用",["code","代码块展示"],"，以及",["code","代码块编辑"],"。"]],meta:{order:0,title:"基本",filename:"components/extend/d-code/demo/basic.md",id:"components-extend-d-code-demo-basic"},toc:["ul"],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> DCode <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'knowdesign\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> codeStr <span class="token operator">=</span> <span class="token string">\'const twoSum = function(nums, target) {\\n    const newNumsMap = new Map(nums.map((item, idx) => [item, idx]));\\n\\n    let result = [];\\n    nums.forEach((numItem, numIndex) => {\\n        const subItem = target - numItem;\\n        if (newNumsMap.has(subItem) \\&amp;\\&amp; numIndex !== newNumsMap.get(subItem)) {\\n            result = [newNumsMap.get(subItem), numIndex];\\n        }\\n    })\\n    return result;\\n};\\n\\nconst nums = [2, 7, 11, 15];\\nconst target = 9;\\n\\nconsole.info(twoSum(nums, target));\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> Demo<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>DCode<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DCode</span> <span class="token attr-name">language</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>javascript<span class="token punctuation">"</span></span> <span class="token attr-name">editable</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>codeStr<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>DCode editor<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DCode</span> <span class="token attr-name">height</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token number">300</span><span class="token punctuation">}</span></span> <span class="token attr-name">language</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>javascript<span class="token punctuation">"</span></span> <span class="token attr-name">editable</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">true</span><span class="token punctuation">}</span></span> <span class="token attr-name">defaultValue</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>codeStr<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Demo</span> <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n  mountNode<span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> DCode <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'knowdesign\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> codeStr <span class="token operator">=</span> <span class="token string">\'const twoSum = function(nums, target) {\\n    const newNumsMap = new Map(nums.map((item, idx) => [item, idx]));\\n\\n    let result = [];\\n    nums.forEach((numItem, numIndex) => {\\n        const subItem = target - numItem;\\n        if (newNumsMap.has(subItem) \\&amp;\\&amp; numIndex !== newNumsMap.get(subItem)) {\\n            result = [newNumsMap.get(subItem), numIndex];\\n        }\\n    })\\n    return result;\\n};\\n\\nconst nums = [2, 7, 11, 15];\\nconst target = 9;\\n\\nconsole.info(twoSum(nums, target));\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token literal-property property">Demo</span><span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>DCode<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DCode</span></span> <span class="token attr-name">language</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript<span class="token punctuation">"</span></span> <span class="token attr-name">editable</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>codeStr<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>DCode editor<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DCode</span></span> <span class="token attr-name">height</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">300</span><span class="token punctuation">}</span></span> <span class="token attr-name">language</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript<span class="token punctuation">"</span></span> <span class="token attr-name">editable</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">true</span><span class="token punctuation">}</span></span> <span class="token attr-name">defaultValue</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>codeStr<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Demo</span></span> <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n  mountNode<span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){var n=a(0),s=(a(35),a(96)),t="const twoSum = function(nums, target) {\n    const newNumsMap = new Map(nums.map((item, idx) => [item, idx]));\n\n    let result = [];\n    nums.forEach((numItem, numIndex) => {\n        const subItem = target - numItem;\n        if (newNumsMap.has(subItem) && numIndex !== newNumsMap.get(subItem)) {\n            result = [newNumsMap.get(subItem), numIndex];\n        }\n    })\n    return result;\n};\n\nconst nums = [2, 7, 11, 15];\nconst target = 9;\n\nconsole.info(twoSum(nums, target));",p=function(){return n.createElement("div",null,n.createElement("h3",null,"DCode"),n.createElement(s.DCode,{language:"javascript",editable:!1,value:t}),n.createElement("h3",null,"DCode editor"),n.createElement(s.DCode,{height:300,language:"javascript",editable:!0,defaultValue:t}))};return n.createElement("div",null,n.createElement(p,null))}}},5222:function(n,s,a){n.exports={content:[["p","切换组件的",["code","编辑"],"、",["code","皮肤"],"、",["code","语言"]," 等状态。"]],meta:{order:1,title:"切换状态",filename:"components/extend/d-code/demo/toggle.md",id:"components-extend-d-code-demo-toggle"},toc:["ul"],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> DCode<span class="token punctuation">,</span> DQueryForm <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'knowdesign\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> dCodeStr <span class="token operator">=</span> <span class="token string">\'const twoSum = function(nums, target) {\\n    const newNumsMap = new Map(nums.map((item, idx) => [item, idx]));\\n\\n    let result = [];\\n    nums.forEach((numItem, numIndex) => {\\n        const subItem = target - numItem;\\n        if (newNumsMap.has(subItem) \\&amp;\\&amp; numIndex !== newNumsMap.get(subItem)) {\\n            result = [newNumsMap.get(subItem), numIndex];\\n        }\\n    })\\n    return result;\\n};\\n\\nconst nums = [2, 7, 11, 15];\\nconst target = 9;\\n\\nconsole.info(twoSum(nums, target));\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    type<span class="token punctuation">:</span> <span class="token string">\'select\'</span><span class="token punctuation">,</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'主题\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'theme\'</span><span class="token punctuation">,</span>\n    initialValue<span class="token punctuation">:</span> <span class="token string">\'light\'</span><span class="token punctuation">,</span>\n    options<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        title<span class="token punctuation">:</span> <span class="token string">\'默认模式（light）\'</span><span class="token punctuation">,</span>\n        value<span class="token punctuation">:</span> <span class="token string">\'light\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        title<span class="token punctuation">:</span> <span class="token string">\'暗黑模式（dark）\'</span><span class="token punctuation">,</span>\n        value<span class="token punctuation">:</span> <span class="token string">\'dark\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    type<span class="token punctuation">:</span> <span class="token string">\'select\'</span><span class="token punctuation">,</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'开发语言\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'language\'</span><span class="token punctuation">,</span>\n    initialValue<span class="token punctuation">:</span> <span class="token string">\'javascript\'</span><span class="token punctuation">,</span>\n    options<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n        title<span class="token punctuation">:</span> <span class="token string">\'javascript\'</span><span class="token punctuation">,</span>\n        value<span class="token punctuation">:</span> <span class="token string">\'javascript\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        title<span class="token punctuation">:</span> <span class="token string">\'css\'</span><span class="token punctuation">,</span>\n        value<span class="token punctuation">:</span> <span class="token string">\'css\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        title<span class="token punctuation">:</span> <span class="token string">\'go\'</span><span class="token punctuation">,</span>\n        value<span class="token punctuation">:</span> <span class="token string">\'go\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        title<span class="token punctuation">:</span> <span class="token string">\'markdown\'</span><span class="token punctuation">,</span>\n        value<span class="token punctuation">:</span> <span class="token string">\'markdown\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        title<span class="token punctuation">:</span> <span class="token string">\'jsx\'</span><span class="token punctuation">,</span>\n        value<span class="token punctuation">:</span> <span class="token string">\'jsx\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        title<span class="token punctuation">:</span> <span class="token string">\'java\'</span><span class="token punctuation">,</span>\n        value<span class="token punctuation">:</span> <span class="token string">\'java\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        title<span class="token punctuation">:</span> <span class="token string">\'nginx\'</span><span class="token punctuation">,</span>\n        value<span class="token punctuation">:</span> <span class="token string">\'nginx\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        title<span class="token punctuation">:</span> <span class="token string">\'php\'</span><span class="token punctuation">,</span>\n        value<span class="token punctuation">:</span> <span class="token string">\'php\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        title<span class="token punctuation">:</span> <span class="token string">\'python\'</span><span class="token punctuation">,</span>\n        value<span class="token punctuation">:</span> <span class="token string">\'python\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        title<span class="token punctuation">:</span> <span class="token string">\'shell\'</span><span class="token punctuation">,</span>\n        value<span class="token punctuation">:</span> <span class="token string">\'shell\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        title<span class="token punctuation">:</span> <span class="token string">\'sql\'</span><span class="token punctuation">,</span>\n        value<span class="token punctuation">:</span> <span class="token string">\'sql\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        title<span class="token punctuation">:</span> <span class="token string">\'xml\'</span><span class="token punctuation">,</span>\n        value<span class="token punctuation">:</span> <span class="token string">\'xml\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        title<span class="token punctuation">:</span> <span class="token string">\'html\'</span><span class="token punctuation">,</span>\n        value<span class="token punctuation">:</span> <span class="token string">\'html\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    type<span class="token punctuation">:</span> <span class="token string">\'select\'</span><span class="token punctuation">,</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'是否可编辑\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'editable\'</span><span class="token punctuation">,</span>\n    initialValue<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    options<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        title<span class="token punctuation">:</span> <span class="token string">\'详情（false）\'</span><span class="token punctuation">,</span>\n        value<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        title<span class="token punctuation">:</span> <span class="token string">\'可编辑（true）\'</span><span class="token punctuation">,</span>\n        value<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> Demo<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>query<span class="token punctuation">,</span> setQuery<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    theme<span class="token punctuation">:</span> <span class="token string">\'light\'</span><span class="token punctuation">,</span>\n    language<span class="token punctuation">:</span> <span class="token string">\'javascript\'</span><span class="token punctuation">,</span>\n    editable<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>dCodeState<span class="token punctuation">,</span> setDCodeState<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span>dCodeStr<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> handleChange <span class="token operator">=</span> queryValue <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token function">setQuery</span><span class="token punctuation">(</span>queryValue<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n      background<span class="token punctuation">:</span> <span class="token string">\'#f0f2f5\'</span><span class="token punctuation">,</span>\n      padding<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DQueryForm</span> \n        <span class="token attr-name">mode</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>full<span class="token punctuation">"</span></span>\n        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>handleChange<span class="token punctuation">}</span></span> \n        <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> \n      <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> width<span class="token punctuation">:</span> <span class="token string">\'100%\'</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">60</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DCode</span> \n        <span class="token attr-name">height</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token number">350</span><span class="token punctuation">}</span></span> \n        <span class="token attr-name">theme</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>query<span class="token punctuation">.</span>theme<span class="token punctuation">}</span></span> \n        <span class="token attr-name">language</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>query<span class="token punctuation">.</span>language<span class="token punctuation">}</span></span> \n        <span class="token attr-name">editable</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>query<span class="token punctuation">.</span>editable<span class="token punctuation">}</span></span> \n        <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>dCodeState<span class="token punctuation">}</span></span> \n        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n          <span class="token function">setDCodeState</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Demo</span> <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n  mountNode<span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> DCode<span class="token punctuation">,</span> DQueryForm <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'knowdesign\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> dCodeStr <span class="token operator">=</span> <span class="token string">\'const twoSum = function(nums, target) {\\n    const newNumsMap = new Map(nums.map((item, idx) => [item, idx]));\\n\\n    let result = [];\\n    nums.forEach((numItem, numIndex) => {\\n        const subItem = target - numItem;\\n        if (newNumsMap.has(subItem) \\&amp;\\&amp; numIndex !== newNumsMap.get(subItem)) {\\n            result = [newNumsMap.get(subItem), numIndex];\\n        }\\n    })\\n    return result;\\n};\\n\\nconst nums = [2, 7, 11, 15];\\nconst target = 9;\\n\\nconsole.info(twoSum(nums, target));\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'select\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'主题\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">\'theme\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">initialValue</span><span class="token operator">:</span> <span class="token string">\'light\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'默认模式（light）\'</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">\'light\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'暗黑模式（dark）\'</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">\'dark\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'select\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'开发语言\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">\'language\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">initialValue</span><span class="token operator">:</span> <span class="token string">\'javascript\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'javascript\'</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">\'javascript\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'css\'</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">\'css\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'go\'</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">\'go\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'markdown\'</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">\'markdown\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'jsx\'</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">\'jsx\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'java\'</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">\'java\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'nginx\'</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">\'nginx\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'php\'</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">\'php\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'python\'</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">\'python\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'shell\'</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">\'shell\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'sql\'</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">\'sql\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'xml\'</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">\'xml\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'html\'</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">\'html\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'select\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'是否可编辑\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">\'editable\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">initialValue</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'详情（false）\'</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'可编辑（true）\'</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token literal-property property">Demo</span><span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>query<span class="token punctuation">,</span> setQuery<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token string">\'light\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">language</span><span class="token operator">:</span> <span class="token string">\'javascript\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">editable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>dCodeState<span class="token punctuation">,</span> setDCodeState<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span>dCodeStr<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">handleChange</span> <span class="token operator">=</span> <span class="token parameter">queryValue</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">setQuery</span><span class="token punctuation">(</span>queryValue<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n      <span class="token literal-property property">background</span><span class="token operator">:</span> <span class="token string">\'#f0f2f5\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">padding</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DQueryForm</span></span> \n        <span class="token attr-name">mode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>full<span class="token punctuation">"</span></span>\n        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleChange<span class="token punctuation">}</span></span> \n        <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> \n      <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">\'100%\'</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">60</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DCode</span></span> \n        <span class="token attr-name">height</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">350</span><span class="token punctuation">}</span></span> \n        <span class="token attr-name">theme</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>query<span class="token punctuation">.</span>theme<span class="token punctuation">}</span></span> \n        <span class="token attr-name">language</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>query<span class="token punctuation">.</span>language<span class="token punctuation">}</span></span> \n        <span class="token attr-name">editable</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>query<span class="token punctuation">.</span>editable<span class="token punctuation">}</span></span> \n        <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>dCodeState<span class="token punctuation">}</span></span> \n        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n          <span class="token function">setDCodeState</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Demo</span></span> <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n  mountNode<span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){var n=a(0),s=(a(35),a(0)),t=a(96);function p(n,s){return function(n){if(Array.isArray(n))return n}(n)||function(n,s){var a=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null==a)return;var t,p,o=[],e=!0,c=!1;try{for(a=a.call(n);!(e=(t=a.next()).done)&&(o.push(t.value),!s||o.length!==s);e=!0);}catch(n){c=!0,p=n}finally{try{e||null==a.return||a.return()}finally{if(c)throw p}}return o}(n,s)||function(n,s){if(!n)return;if("string"==typeof n)return o(n,s);var a=Object.prototype.toString.call(n).slice(8,-1);"Object"===a&&n.constructor&&(a=n.constructor.name);if("Map"===a||"Set"===a)return Array.from(n);if("Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a))return o(n,s)}(n,s)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function o(n,s){(null==s||s>n.length)&&(s=n.length);for(var a=0,t=new Array(s);a<s;a++)t[a]=n[a];return t}var e=[{type:"select",title:"主题",dataIndex:"theme",initialValue:"light",options:[{title:"默认模式（light）",value:"light"},{title:"暗黑模式（dark）",value:"dark"}]},{type:"select",title:"开发语言",dataIndex:"language",initialValue:"javascript",options:[{title:"javascript",value:"javascript"},{title:"css",value:"css"},{title:"go",value:"go"},{title:"markdown",value:"markdown"},{title:"jsx",value:"jsx"},{title:"java",value:"java"},{title:"nginx",value:"nginx"},{title:"php",value:"php"},{title:"python",value:"python"},{title:"shell",value:"shell"},{title:"sql",value:"sql"},{title:"xml",value:"xml"},{title:"html",value:"html"}]},{type:"select",title:"是否可编辑",dataIndex:"editable",initialValue:!0,options:[{title:"详情（false）",value:!1},{title:"可编辑（true）",value:!0}]}],c=function(){var a=p((0,s.useState)({theme:"light",language:"javascript",editable:!0}),2),o=a[0],c=a[1],u=p((0,s.useState)("const twoSum = function(nums, target) {\n    const newNumsMap = new Map(nums.map((item, idx) => [item, idx]));\n\n    let result = [];\n    nums.forEach((numItem, numIndex) => {\n        const subItem = target - numItem;\n        if (newNumsMap.has(subItem) && numIndex !== newNumsMap.get(subItem)) {\n            result = [newNumsMap.get(subItem), numIndex];\n        }\n    })\n    return result;\n};\n\nconst nums = [2, 7, 11, 15];\nconst target = 9;\n\nconsole.info(twoSum(nums, target));"),2),l=u[0],i=u[1];return n.createElement("div",{style:{background:"#f0f2f5",padding:20}},n.createElement(t.DQueryForm,{mode:"full",onChange:function(n){c(n)},columns:e}),n.createElement("div",{style:{width:"100%",height:60}}),n.createElement(t.DCode,{height:350,theme:o.theme,language:o.language,editable:o.editable,value:l,onChange:function(n){i(n)}}))};return n.createElement("div",null,n.createElement(c,null))}}}}]);